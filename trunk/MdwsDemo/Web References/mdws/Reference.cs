//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.269.
// 
#pragma warning disable 1591

namespace MdwsDemo.mdws {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EmrSvcSoap", Namespace="http://mdws.medora.va.gov/EmrSvc")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractTO))]
    public partial class EmrSvc : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getVistaTimestampsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActiveDirectoryDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginActiveDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLabTestDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLabTestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPatientAssociatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAdhocHealthSummaryByDisplayNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback EXPERIMENTALgetHealthSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCorrespondingIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVHAOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVISNOperationCompleted;
        
        private System.Threading.SendOrPostCallback connectOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback disconnectOperationCompleted;
        
        private System.Threading.SendOrPostCallback disconnectRemoteSitesOperationCompleted;
        
        private System.Threading.SendOrPostCallback visitOperationCompleted;
        
        private System.Threading.SendOrPostCallback cprsLaunchOperationCompleted;
        
        private System.Threading.SendOrPostCallback cprsUserLookupOperationCompleted;
        
        private System.Threading.SendOrPostCallback matchOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectOperationCompleted;
        
        private System.Threading.SendOrPostCallback setupMultiSiteQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getConfidentialityOperationCompleted;
        
        private System.Threading.SendOrPostCallback issueConfidentialityBulletinOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLatestVitalSignsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVitalSignsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllergiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRadiologyReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSurgeryReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSurgeryReportTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSurgeryReportsWithTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProblemListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOutpatientMedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIvMedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImoMedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUnitDoseMedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOtherMedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllMedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMedicationDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSignedNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUnsignedNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUncosignedNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNotesWithTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDischargeSummariesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getConsultsForPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAppointmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAppointmentTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClinicalWarningsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAdvanceDirectivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCrisisNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImmunizationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOutpatientRxProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMedsAdminHxOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMedsAdminLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getChemHemReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getChemHemReportsSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCytologyReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMicrobiologyReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSurgicalPathologyReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBloodAvailabilityReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBloodTransfusionReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBloodBankReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getElectronMicroscopyReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCytopathologyReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAutopsyReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOutpatientEncounterReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAdmissionsReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExpandedAdtReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDischargeDiagnosisReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDischargesReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransfersReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFutureClinicVisitsReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPastClinicVisitsReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTreatingSpecialtyReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCompAndPenReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCareTeamReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIcdProceduresReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIcdSurgeryReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNoteTitlesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHospitalLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getImagingReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback writeSimpleOrderByPolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback isValidEsigOperationCompleted;
        
        private System.Threading.SendOrPostCallback patientInquiryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPatientsByWardOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClinicsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPatientsByClinicOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSpecialtiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPatientsBySpecialtyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTeamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPatientsByTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPatientsByProviderOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAdmissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPrfNoteActionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVisitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback isConsultNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback isCosignerRequiredOperationCompleted;
        
        private System.Threading.SendOrPostCallback isOneVisitNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback isPrfNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback isSurgeryNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback writeNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback signNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback closeNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDemographicsOperationCompleted;
        
        private System.Threading.SendOrPostCallback mpiLookupOperationCompleted;
        
        private System.Threading.SendOrPostCallback nptLookupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReminderReportTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActiveReminderReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPatientListForReminderReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPcpForPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSitesForStationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClinicsByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOrderableItemsByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOrderStatusForPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOrderDialogsForDisplayGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOrderDialogItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsersWithOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback userHasPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserSecurityKeysOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVariableValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMentalHealthInstrumentsForPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMentalHealthInstrumentsForPatientBySurveyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMentalHealthInstrumentResultSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMentalHealthInstrumentResultSetBySurveyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNhinDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllInstitutionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDataSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFacadeVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback setVhaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRpcsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EmrSvc() {
            this.Url = global::MdwsDemo.Properties.Settings.Default.MdwsDemo_mdws_EmrSvc;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getVistaTimestampsCompletedEventHandler getVistaTimestampsCompleted;
        
        /// <remarks/>
        public event getActiveDirectoryDomainsCompletedEventHandler getActiveDirectoryDomainsCompleted;
        
        /// <remarks/>
        public event loginActiveDirectoryCompletedEventHandler loginActiveDirectoryCompleted;
        
        /// <remarks/>
        public event getLabTestDescriptionCompletedEventHandler getLabTestDescriptionCompleted;
        
        /// <remarks/>
        public event getLabTestsCompletedEventHandler getLabTestsCompleted;
        
        /// <remarks/>
        public event getPatientAssociatesCompletedEventHandler getPatientAssociatesCompleted;
        
        /// <remarks/>
        public event getAdhocHealthSummaryByDisplayNameCompletedEventHandler getAdhocHealthSummaryByDisplayNameCompleted;
        
        /// <remarks/>
        public event EXPERIMENTALgetHealthSummaryCompletedEventHandler EXPERIMENTALgetHealthSummaryCompleted;
        
        /// <remarks/>
        public event getCorrespondingIdsCompletedEventHandler getCorrespondingIdsCompleted;
        
        /// <remarks/>
        public event getVHACompletedEventHandler getVHACompleted;
        
        /// <remarks/>
        public event getVISNCompletedEventHandler getVISNCompleted;
        
        /// <remarks/>
        public event connectCompletedEventHandler connectCompleted;
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event disconnectCompletedEventHandler disconnectCompleted;
        
        /// <remarks/>
        public event disconnectRemoteSitesCompletedEventHandler disconnectRemoteSitesCompleted;
        
        /// <remarks/>
        public event visitCompletedEventHandler visitCompleted;
        
        /// <remarks/>
        public event cprsLaunchCompletedEventHandler cprsLaunchCompleted;
        
        /// <remarks/>
        public event cprsUserLookupCompletedEventHandler cprsUserLookupCompleted;
        
        /// <remarks/>
        public event matchCompletedEventHandler matchCompleted;
        
        /// <remarks/>
        public event selectCompletedEventHandler selectCompleted;
        
        /// <remarks/>
        public event setupMultiSiteQueryCompletedEventHandler setupMultiSiteQueryCompleted;
        
        /// <remarks/>
        public event getConfidentialityCompletedEventHandler getConfidentialityCompleted;
        
        /// <remarks/>
        public event issueConfidentialityBulletinCompletedEventHandler issueConfidentialityBulletinCompleted;
        
        /// <remarks/>
        public event getLatestVitalSignsCompletedEventHandler getLatestVitalSignsCompleted;
        
        /// <remarks/>
        public event getVitalSignsCompletedEventHandler getVitalSignsCompleted;
        
        /// <remarks/>
        public event getAllergiesCompletedEventHandler getAllergiesCompleted;
        
        /// <remarks/>
        public event getRadiologyReportsCompletedEventHandler getRadiologyReportsCompleted;
        
        /// <remarks/>
        public event getSurgeryReportsCompletedEventHandler getSurgeryReportsCompleted;
        
        /// <remarks/>
        public event getSurgeryReportTextCompletedEventHandler getSurgeryReportTextCompleted;
        
        /// <remarks/>
        public event getSurgeryReportsWithTextCompletedEventHandler getSurgeryReportsWithTextCompleted;
        
        /// <remarks/>
        public event getProblemListCompletedEventHandler getProblemListCompleted;
        
        /// <remarks/>
        public event getOutpatientMedsCompletedEventHandler getOutpatientMedsCompleted;
        
        /// <remarks/>
        public event getIvMedsCompletedEventHandler getIvMedsCompleted;
        
        /// <remarks/>
        public event getImoMedsCompletedEventHandler getImoMedsCompleted;
        
        /// <remarks/>
        public event getUnitDoseMedsCompletedEventHandler getUnitDoseMedsCompleted;
        
        /// <remarks/>
        public event getOtherMedsCompletedEventHandler getOtherMedsCompleted;
        
        /// <remarks/>
        public event getAllMedsCompletedEventHandler getAllMedsCompleted;
        
        /// <remarks/>
        public event getMedicationDetailCompletedEventHandler getMedicationDetailCompleted;
        
        /// <remarks/>
        public event getSignedNotesCompletedEventHandler getSignedNotesCompleted;
        
        /// <remarks/>
        public event getUnsignedNotesCompletedEventHandler getUnsignedNotesCompleted;
        
        /// <remarks/>
        public event getUncosignedNotesCompletedEventHandler getUncosignedNotesCompleted;
        
        /// <remarks/>
        public event getNoteCompletedEventHandler getNoteCompleted;
        
        /// <remarks/>
        public event getNotesWithTextCompletedEventHandler getNotesWithTextCompleted;
        
        /// <remarks/>
        public event getDischargeSummariesCompletedEventHandler getDischargeSummariesCompleted;
        
        /// <remarks/>
        public event getConsultsForPatientCompletedEventHandler getConsultsForPatientCompleted;
        
        /// <remarks/>
        public event getAppointmentsCompletedEventHandler getAppointmentsCompleted;
        
        /// <remarks/>
        public event getAppointmentTextCompletedEventHandler getAppointmentTextCompleted;
        
        /// <remarks/>
        public event getClinicalWarningsCompletedEventHandler getClinicalWarningsCompleted;
        
        /// <remarks/>
        public event getAdvanceDirectivesCompletedEventHandler getAdvanceDirectivesCompleted;
        
        /// <remarks/>
        public event getCrisisNotesCompletedEventHandler getCrisisNotesCompleted;
        
        /// <remarks/>
        public event getImmunizationsCompletedEventHandler getImmunizationsCompleted;
        
        /// <remarks/>
        public event getOutpatientRxProfileCompletedEventHandler getOutpatientRxProfileCompleted;
        
        /// <remarks/>
        public event getMedsAdminHxCompletedEventHandler getMedsAdminHxCompleted;
        
        /// <remarks/>
        public event getMedsAdminLogCompletedEventHandler getMedsAdminLogCompleted;
        
        /// <remarks/>
        public event getChemHemReportsCompletedEventHandler getChemHemReportsCompleted;
        
        /// <remarks/>
        public event getChemHemReportsSimpleCompletedEventHandler getChemHemReportsSimpleCompleted;
        
        /// <remarks/>
        public event getCytologyReportsCompletedEventHandler getCytologyReportsCompleted;
        
        /// <remarks/>
        public event getMicrobiologyReportsCompletedEventHandler getMicrobiologyReportsCompleted;
        
        /// <remarks/>
        public event getSurgicalPathologyReportsCompletedEventHandler getSurgicalPathologyReportsCompleted;
        
        /// <remarks/>
        public event getBloodAvailabilityReportsCompletedEventHandler getBloodAvailabilityReportsCompleted;
        
        /// <remarks/>
        public event getBloodTransfusionReportsCompletedEventHandler getBloodTransfusionReportsCompleted;
        
        /// <remarks/>
        public event getBloodBankReportsCompletedEventHandler getBloodBankReportsCompleted;
        
        /// <remarks/>
        public event getElectronMicroscopyReportsCompletedEventHandler getElectronMicroscopyReportsCompleted;
        
        /// <remarks/>
        public event getCytopathologyReportsCompletedEventHandler getCytopathologyReportsCompleted;
        
        /// <remarks/>
        public event getAutopsyReportsCompletedEventHandler getAutopsyReportsCompleted;
        
        /// <remarks/>
        public event getOutpatientEncounterReportsCompletedEventHandler getOutpatientEncounterReportsCompleted;
        
        /// <remarks/>
        public event getAdmissionsReportsCompletedEventHandler getAdmissionsReportsCompleted;
        
        /// <remarks/>
        public event getExpandedAdtReportsCompletedEventHandler getExpandedAdtReportsCompleted;
        
        /// <remarks/>
        public event getDischargeDiagnosisReportsCompletedEventHandler getDischargeDiagnosisReportsCompleted;
        
        /// <remarks/>
        public event getDischargesReportsCompletedEventHandler getDischargesReportsCompleted;
        
        /// <remarks/>
        public event getTransfersReportsCompletedEventHandler getTransfersReportsCompleted;
        
        /// <remarks/>
        public event getFutureClinicVisitsReportsCompletedEventHandler getFutureClinicVisitsReportsCompleted;
        
        /// <remarks/>
        public event getPastClinicVisitsReportsCompletedEventHandler getPastClinicVisitsReportsCompleted;
        
        /// <remarks/>
        public event getTreatingSpecialtyReportsCompletedEventHandler getTreatingSpecialtyReportsCompleted;
        
        /// <remarks/>
        public event getCompAndPenReportsCompletedEventHandler getCompAndPenReportsCompleted;
        
        /// <remarks/>
        public event getCareTeamReportsCompletedEventHandler getCareTeamReportsCompleted;
        
        /// <remarks/>
        public event getIcdProceduresReportsCompletedEventHandler getIcdProceduresReportsCompleted;
        
        /// <remarks/>
        public event getIcdSurgeryReportsCompletedEventHandler getIcdSurgeryReportsCompleted;
        
        /// <remarks/>
        public event getNoteTitlesCompletedEventHandler getNoteTitlesCompleted;
        
        /// <remarks/>
        public event getHospitalLocationsCompletedEventHandler getHospitalLocationsCompleted;
        
        /// <remarks/>
        public event getImagingReportCompletedEventHandler getImagingReportCompleted;
        
        /// <remarks/>
        public event writeSimpleOrderByPolicyCompletedEventHandler writeSimpleOrderByPolicyCompleted;
        
        /// <remarks/>
        public event isValidEsigCompletedEventHandler isValidEsigCompleted;
        
        /// <remarks/>
        public event patientInquiryCompletedEventHandler patientInquiryCompleted;
        
        /// <remarks/>
        public event getWardsCompletedEventHandler getWardsCompleted;
        
        /// <remarks/>
        public event getPatientsByWardCompletedEventHandler getPatientsByWardCompleted;
        
        /// <remarks/>
        public event getClinicsCompletedEventHandler getClinicsCompleted;
        
        /// <remarks/>
        public event getPatientsByClinicCompletedEventHandler getPatientsByClinicCompleted;
        
        /// <remarks/>
        public event getSpecialtiesCompletedEventHandler getSpecialtiesCompleted;
        
        /// <remarks/>
        public event getPatientsBySpecialtyCompletedEventHandler getPatientsBySpecialtyCompleted;
        
        /// <remarks/>
        public event getTeamsCompletedEventHandler getTeamsCompleted;
        
        /// <remarks/>
        public event getPatientsByTeamCompletedEventHandler getPatientsByTeamCompleted;
        
        /// <remarks/>
        public event getPatientsByProviderCompletedEventHandler getPatientsByProviderCompleted;
        
        /// <remarks/>
        public event getAdmissionsCompletedEventHandler getAdmissionsCompleted;
        
        /// <remarks/>
        public event getLocationsCompletedEventHandler getLocationsCompleted;
        
        /// <remarks/>
        public event getPrfNoteActionsCompletedEventHandler getPrfNoteActionsCompleted;
        
        /// <remarks/>
        public event getVisitsCompletedEventHandler getVisitsCompleted;
        
        /// <remarks/>
        public event isConsultNoteCompletedEventHandler isConsultNoteCompleted;
        
        /// <remarks/>
        public event isCosignerRequiredCompletedEventHandler isCosignerRequiredCompleted;
        
        /// <remarks/>
        public event isOneVisitNoteCompletedEventHandler isOneVisitNoteCompleted;
        
        /// <remarks/>
        public event isPrfNoteCompletedEventHandler isPrfNoteCompleted;
        
        /// <remarks/>
        public event isSurgeryNoteCompletedEventHandler isSurgeryNoteCompleted;
        
        /// <remarks/>
        public event writeNoteCompletedEventHandler writeNoteCompleted;
        
        /// <remarks/>
        public event signNoteCompletedEventHandler signNoteCompleted;
        
        /// <remarks/>
        public event closeNoteCompletedEventHandler closeNoteCompleted;
        
        /// <remarks/>
        public event getDemographicsCompletedEventHandler getDemographicsCompleted;
        
        /// <remarks/>
        public event mpiLookupCompletedEventHandler mpiLookupCompleted;
        
        /// <remarks/>
        public event nptLookupCompletedEventHandler nptLookupCompleted;
        
        /// <remarks/>
        public event getAllOrdersCompletedEventHandler getAllOrdersCompleted;
        
        /// <remarks/>
        public event getReminderReportTemplatesCompletedEventHandler getReminderReportTemplatesCompleted;
        
        /// <remarks/>
        public event getActiveReminderReportsCompletedEventHandler getActiveReminderReportsCompleted;
        
        /// <remarks/>
        public event getPatientListForReminderReportCompletedEventHandler getPatientListForReminderReportCompleted;
        
        /// <remarks/>
        public event getPcpForPatientCompletedEventHandler getPcpForPatientCompleted;
        
        /// <remarks/>
        public event getSitesForStationCompletedEventHandler getSitesForStationCompleted;
        
        /// <remarks/>
        public event getClinicsByNameCompletedEventHandler getClinicsByNameCompleted;
        
        /// <remarks/>
        public event getOrderableItemsByNameCompletedEventHandler getOrderableItemsByNameCompleted;
        
        /// <remarks/>
        public event getOrderStatusForPatientCompletedEventHandler getOrderStatusForPatientCompleted;
        
        /// <remarks/>
        public event getOrderDialogsForDisplayGroupCompletedEventHandler getOrderDialogsForDisplayGroupCompleted;
        
        /// <remarks/>
        public event getOrderDialogItemsCompletedEventHandler getOrderDialogItemsCompleted;
        
        /// <remarks/>
        public event getUsersWithOptionCompletedEventHandler getUsersWithOptionCompleted;
        
        /// <remarks/>
        public event userHasPermissionCompletedEventHandler userHasPermissionCompleted;
        
        /// <remarks/>
        public event getUserSecurityKeysCompletedEventHandler getUserSecurityKeysCompleted;
        
        /// <remarks/>
        public event getVariableValueCompletedEventHandler getVariableValueCompleted;
        
        /// <remarks/>
        public event getMentalHealthInstrumentsForPatientCompletedEventHandler getMentalHealthInstrumentsForPatientCompleted;
        
        /// <remarks/>
        public event getMentalHealthInstrumentsForPatientBySurveyCompletedEventHandler getMentalHealthInstrumentsForPatientBySurveyCompleted;
        
        /// <remarks/>
        public event getMentalHealthInstrumentResultSetCompletedEventHandler getMentalHealthInstrumentResultSetCompleted;
        
        /// <remarks/>
        public event getMentalHealthInstrumentResultSetBySurveyCompletedEventHandler getMentalHealthInstrumentResultSetBySurveyCompleted;
        
        /// <remarks/>
        public event getNhinDataCompletedEventHandler getNhinDataCompleted;
        
        /// <remarks/>
        public event getAllInstitutionsCompletedEventHandler getAllInstitutionsCompleted;
        
        /// <remarks/>
        public event getVersionCompletedEventHandler getVersionCompleted;
        
        /// <remarks/>
        public event addDataSourceCompletedEventHandler addDataSourceCompleted;
        
        /// <remarks/>
        public event getFacadeVersionCompletedEventHandler getFacadeVersionCompleted;
        
        /// <remarks/>
        public event setVhaCompletedEventHandler setVhaCompleted;
        
        /// <remarks/>
        public event getRpcsCompletedEventHandler getRpcsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getVistaTimestamps", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getVistaTimestamps() {
            object[] results = this.Invoke("getVistaTimestamps", new object[0]);
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getVistaTimestampsAsync() {
            this.getVistaTimestampsAsync(null);
        }
        
        /// <remarks/>
        public void getVistaTimestampsAsync(object userState) {
            if ((this.getVistaTimestampsOperationCompleted == null)) {
                this.getVistaTimestampsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVistaTimestampsOperationCompleted);
            }
            this.InvokeAsync("getVistaTimestamps", new object[0], this.getVistaTimestampsOperationCompleted, userState);
        }
        
        private void OngetVistaTimestampsOperationCompleted(object arg) {
            if ((this.getVistaTimestampsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVistaTimestampsCompleted(this, new getVistaTimestampsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getActiveDirectoryDomains", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DomainArray getActiveDirectoryDomains() {
            object[] results = this.Invoke("getActiveDirectoryDomains", new object[0]);
            return ((DomainArray)(results[0]));
        }
        
        /// <remarks/>
        public void getActiveDirectoryDomainsAsync() {
            this.getActiveDirectoryDomainsAsync(null);
        }
        
        /// <remarks/>
        public void getActiveDirectoryDomainsAsync(object userState) {
            if ((this.getActiveDirectoryDomainsOperationCompleted == null)) {
                this.getActiveDirectoryDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActiveDirectoryDomainsOperationCompleted);
            }
            this.InvokeAsync("getActiveDirectoryDomains", new object[0], this.getActiveDirectoryDomainsOperationCompleted, userState);
        }
        
        private void OngetActiveDirectoryDomainsOperationCompleted(object arg) {
            if ((this.getActiveDirectoryDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActiveDirectoryDomainsCompleted(this, new getActiveDirectoryDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/loginActiveDirectory", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserTO loginActiveDirectory(string domain, string username, string password) {
            object[] results = this.Invoke("loginActiveDirectory", new object[] {
                        domain,
                        username,
                        password});
            return ((UserTO)(results[0]));
        }
        
        /// <remarks/>
        public void loginActiveDirectoryAsync(string domain, string username, string password) {
            this.loginActiveDirectoryAsync(domain, username, password, null);
        }
        
        /// <remarks/>
        public void loginActiveDirectoryAsync(string domain, string username, string password, object userState) {
            if ((this.loginActiveDirectoryOperationCompleted == null)) {
                this.loginActiveDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginActiveDirectoryOperationCompleted);
            }
            this.InvokeAsync("loginActiveDirectory", new object[] {
                        domain,
                        username,
                        password}, this.loginActiveDirectoryOperationCompleted, userState);
        }
        
        private void OnloginActiveDirectoryOperationCompleted(object arg) {
            if ((this.loginActiveDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginActiveDirectoryCompleted(this, new loginActiveDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getLabTestDescription", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getLabTestDescription(string identifierString) {
            object[] results = this.Invoke("getLabTestDescription", new object[] {
                        identifierString});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getLabTestDescriptionAsync(string identifierString) {
            this.getLabTestDescriptionAsync(identifierString, null);
        }
        
        /// <remarks/>
        public void getLabTestDescriptionAsync(string identifierString, object userState) {
            if ((this.getLabTestDescriptionOperationCompleted == null)) {
                this.getLabTestDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLabTestDescriptionOperationCompleted);
            }
            this.InvokeAsync("getLabTestDescription", new object[] {
                        identifierString}, this.getLabTestDescriptionOperationCompleted, userState);
        }
        
        private void OngetLabTestDescriptionOperationCompleted(object arg) {
            if ((this.getLabTestDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLabTestDescriptionCompleted(this, new getLabTestDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getLabTests", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedLabTestArrays getLabTests(string target) {
            object[] results = this.Invoke("getLabTests", new object[] {
                        target});
            return ((TaggedLabTestArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getLabTestsAsync(string target) {
            this.getLabTestsAsync(target, null);
        }
        
        /// <remarks/>
        public void getLabTestsAsync(string target, object userState) {
            if ((this.getLabTestsOperationCompleted == null)) {
                this.getLabTestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLabTestsOperationCompleted);
            }
            this.InvokeAsync("getLabTests", new object[] {
                        target}, this.getLabTestsOperationCompleted, userState);
        }
        
        private void OngetLabTestsOperationCompleted(object arg) {
            if ((this.getLabTestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLabTestsCompleted(this, new getLabTestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPatientAssociates", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedPatientAssociateArrays getPatientAssociates() {
            object[] results = this.Invoke("getPatientAssociates", new object[0]);
            return ((TaggedPatientAssociateArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getPatientAssociatesAsync() {
            this.getPatientAssociatesAsync(null);
        }
        
        /// <remarks/>
        public void getPatientAssociatesAsync(object userState) {
            if ((this.getPatientAssociatesOperationCompleted == null)) {
                this.getPatientAssociatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPatientAssociatesOperationCompleted);
            }
            this.InvokeAsync("getPatientAssociates", new object[0], this.getPatientAssociatesOperationCompleted, userState);
        }
        
        private void OngetPatientAssociatesOperationCompleted(object arg) {
            if ((this.getPatientAssociatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPatientAssociatesCompleted(this, new getPatientAssociatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAdhocHealthSummaryByDisplayName", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getAdhocHealthSummaryByDisplayName(string displayName) {
            object[] results = this.Invoke("getAdhocHealthSummaryByDisplayName", new object[] {
                        displayName});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getAdhocHealthSummaryByDisplayNameAsync(string displayName) {
            this.getAdhocHealthSummaryByDisplayNameAsync(displayName, null);
        }
        
        /// <remarks/>
        public void getAdhocHealthSummaryByDisplayNameAsync(string displayName, object userState) {
            if ((this.getAdhocHealthSummaryByDisplayNameOperationCompleted == null)) {
                this.getAdhocHealthSummaryByDisplayNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAdhocHealthSummaryByDisplayNameOperationCompleted);
            }
            this.InvokeAsync("getAdhocHealthSummaryByDisplayName", new object[] {
                        displayName}, this.getAdhocHealthSummaryByDisplayNameOperationCompleted, userState);
        }
        
        private void OngetAdhocHealthSummaryByDisplayNameOperationCompleted(object arg) {
            if ((this.getAdhocHealthSummaryByDisplayNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAdhocHealthSummaryByDisplayNameCompleted(this, new getAdhocHealthSummaryByDisplayNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/EXPERIMENTALgetHealthSummary", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedHealthSummaryArray EXPERIMENTALgetHealthSummary(string healthSummaryId, string healthSummaryName) {
            object[] results = this.Invoke("EXPERIMENTALgetHealthSummary", new object[] {
                        healthSummaryId,
                        healthSummaryName});
            return ((TaggedHealthSummaryArray)(results[0]));
        }
        
        /// <remarks/>
        public void EXPERIMENTALgetHealthSummaryAsync(string healthSummaryId, string healthSummaryName) {
            this.EXPERIMENTALgetHealthSummaryAsync(healthSummaryId, healthSummaryName, null);
        }
        
        /// <remarks/>
        public void EXPERIMENTALgetHealthSummaryAsync(string healthSummaryId, string healthSummaryName, object userState) {
            if ((this.EXPERIMENTALgetHealthSummaryOperationCompleted == null)) {
                this.EXPERIMENTALgetHealthSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEXPERIMENTALgetHealthSummaryOperationCompleted);
            }
            this.InvokeAsync("EXPERIMENTALgetHealthSummary", new object[] {
                        healthSummaryId,
                        healthSummaryName}, this.EXPERIMENTALgetHealthSummaryOperationCompleted, userState);
        }
        
        private void OnEXPERIMENTALgetHealthSummaryOperationCompleted(object arg) {
            if ((this.EXPERIMENTALgetHealthSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EXPERIMENTALgetHealthSummaryCompleted(this, new EXPERIMENTALgetHealthSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getCorrespondingIds", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getCorrespondingIds(string sitecode, string patientId, string idType) {
            object[] results = this.Invoke("getCorrespondingIds", new object[] {
                        sitecode,
                        patientId,
                        idType});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getCorrespondingIdsAsync(string sitecode, string patientId, string idType) {
            this.getCorrespondingIdsAsync(sitecode, patientId, idType, null);
        }
        
        /// <remarks/>
        public void getCorrespondingIdsAsync(string sitecode, string patientId, string idType, object userState) {
            if ((this.getCorrespondingIdsOperationCompleted == null)) {
                this.getCorrespondingIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCorrespondingIdsOperationCompleted);
            }
            this.InvokeAsync("getCorrespondingIds", new object[] {
                        sitecode,
                        patientId,
                        idType}, this.getCorrespondingIdsOperationCompleted, userState);
        }
        
        private void OngetCorrespondingIdsOperationCompleted(object arg) {
            if ((this.getCorrespondingIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCorrespondingIdsCompleted(this, new getCorrespondingIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getVHA", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RegionArray getVHA() {
            object[] results = this.Invoke("getVHA", new object[0]);
            return ((RegionArray)(results[0]));
        }
        
        /// <remarks/>
        public void getVHAAsync() {
            this.getVHAAsync(null);
        }
        
        /// <remarks/>
        public void getVHAAsync(object userState) {
            if ((this.getVHAOperationCompleted == null)) {
                this.getVHAOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVHAOperationCompleted);
            }
            this.InvokeAsync("getVHA", new object[0], this.getVHAOperationCompleted, userState);
        }
        
        private void OngetVHAOperationCompleted(object arg) {
            if ((this.getVHACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVHACompleted(this, new getVHACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getVISN", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RegionTO getVISN(string regionId) {
            object[] results = this.Invoke("getVISN", new object[] {
                        regionId});
            return ((RegionTO)(results[0]));
        }
        
        /// <remarks/>
        public void getVISNAsync(string regionId) {
            this.getVISNAsync(regionId, null);
        }
        
        /// <remarks/>
        public void getVISNAsync(string regionId, object userState) {
            if ((this.getVISNOperationCompleted == null)) {
                this.getVISNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVISNOperationCompleted);
            }
            this.InvokeAsync("getVISN", new object[] {
                        regionId}, this.getVISNOperationCompleted, userState);
        }
        
        private void OngetVISNOperationCompleted(object arg) {
            if ((this.getVISNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVISNCompleted(this, new getVISNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/connect", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSourceArray connect(string sitelist) {
            object[] results = this.Invoke("connect", new object[] {
                        sitelist});
            return ((DataSourceArray)(results[0]));
        }
        
        /// <remarks/>
        public void connectAsync(string sitelist) {
            this.connectAsync(sitelist, null);
        }
        
        /// <remarks/>
        public void connectAsync(string sitelist, object userState) {
            if ((this.connectOperationCompleted == null)) {
                this.connectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconnectOperationCompleted);
            }
            this.InvokeAsync("connect", new object[] {
                        sitelist}, this.connectOperationCompleted, userState);
        }
        
        private void OnconnectOperationCompleted(object arg) {
            if ((this.connectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.connectCompleted(this, new connectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/login", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserTO login(string username, string pwd, string context) {
            object[] results = this.Invoke("login", new object[] {
                        username,
                        pwd,
                        context});
            return ((UserTO)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string username, string pwd, string context) {
            this.loginAsync(username, pwd, context, null);
        }
        
        /// <remarks/>
        public void loginAsync(string username, string pwd, string context, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        username,
                        pwd,
                        context}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/disconnect", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray disconnect() {
            object[] results = this.Invoke("disconnect", new object[0]);
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void disconnectAsync() {
            this.disconnectAsync(null);
        }
        
        /// <remarks/>
        public void disconnectAsync(object userState) {
            if ((this.disconnectOperationCompleted == null)) {
                this.disconnectOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisconnectOperationCompleted);
            }
            this.InvokeAsync("disconnect", new object[0], this.disconnectOperationCompleted, userState);
        }
        
        private void OndisconnectOperationCompleted(object arg) {
            if ((this.disconnectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disconnectCompleted(this, new disconnectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/disconnectRemoteSites", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray disconnectRemoteSites() {
            object[] results = this.Invoke("disconnectRemoteSites", new object[0]);
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void disconnectRemoteSitesAsync() {
            this.disconnectRemoteSitesAsync(null);
        }
        
        /// <remarks/>
        public void disconnectRemoteSitesAsync(object userState) {
            if ((this.disconnectRemoteSitesOperationCompleted == null)) {
                this.disconnectRemoteSitesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisconnectRemoteSitesOperationCompleted);
            }
            this.InvokeAsync("disconnectRemoteSites", new object[0], this.disconnectRemoteSitesOperationCompleted, userState);
        }
        
        private void OndisconnectRemoteSitesOperationCompleted(object arg) {
            if ((this.disconnectRemoteSitesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disconnectRemoteSitesCompleted(this, new disconnectRemoteSitesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/visit", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray visit(string pwd, string sitelist, string userSitecode, string userName, string DUZ, string SSN, string context) {
            object[] results = this.Invoke("visit", new object[] {
                        pwd,
                        sitelist,
                        userSitecode,
                        userName,
                        DUZ,
                        SSN,
                        context});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void visitAsync(string pwd, string sitelist, string userSitecode, string userName, string DUZ, string SSN, string context) {
            this.visitAsync(pwd, sitelist, userSitecode, userName, DUZ, SSN, context, null);
        }
        
        /// <remarks/>
        public void visitAsync(string pwd, string sitelist, string userSitecode, string userName, string DUZ, string SSN, string context, object userState) {
            if ((this.visitOperationCompleted == null)) {
                this.visitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvisitOperationCompleted);
            }
            this.InvokeAsync("visit", new object[] {
                        pwd,
                        sitelist,
                        userSitecode,
                        userName,
                        DUZ,
                        SSN,
                        context}, this.visitOperationCompleted, userState);
        }
        
        private void OnvisitOperationCompleted(object arg) {
            if ((this.visitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.visitCompleted(this, new visitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/cprsLaunch", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PersonsTO cprsLaunch(string pwd, string sitecode, string DUZ, string DFN) {
            object[] results = this.Invoke("cprsLaunch", new object[] {
                        pwd,
                        sitecode,
                        DUZ,
                        DFN});
            return ((PersonsTO)(results[0]));
        }
        
        /// <remarks/>
        public void cprsLaunchAsync(string pwd, string sitecode, string DUZ, string DFN) {
            this.cprsLaunchAsync(pwd, sitecode, DUZ, DFN, null);
        }
        
        /// <remarks/>
        public void cprsLaunchAsync(string pwd, string sitecode, string DUZ, string DFN, object userState) {
            if ((this.cprsLaunchOperationCompleted == null)) {
                this.cprsLaunchOperationCompleted = new System.Threading.SendOrPostCallback(this.OncprsLaunchOperationCompleted);
            }
            this.InvokeAsync("cprsLaunch", new object[] {
                        pwd,
                        sitecode,
                        DUZ,
                        DFN}, this.cprsLaunchOperationCompleted, userState);
        }
        
        private void OncprsLaunchOperationCompleted(object arg) {
            if ((this.cprsLaunchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cprsLaunchCompleted(this, new cprsLaunchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/cprsUserLookup", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserArray cprsUserLookup(string target) {
            object[] results = this.Invoke("cprsUserLookup", new object[] {
                        target});
            return ((UserArray)(results[0]));
        }
        
        /// <remarks/>
        public void cprsUserLookupAsync(string target) {
            this.cprsUserLookupAsync(target, null);
        }
        
        /// <remarks/>
        public void cprsUserLookupAsync(string target, object userState) {
            if ((this.cprsUserLookupOperationCompleted == null)) {
                this.cprsUserLookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OncprsUserLookupOperationCompleted);
            }
            this.InvokeAsync("cprsUserLookup", new object[] {
                        target}, this.cprsUserLookupOperationCompleted, userState);
        }
        
        private void OncprsUserLookupOperationCompleted(object arg) {
            if ((this.cprsUserLookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cprsUserLookupCompleted(this, new cprsUserLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/match", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedPatientArrays match(string target) {
            object[] results = this.Invoke("match", new object[] {
                        target});
            return ((TaggedPatientArrays)(results[0]));
        }
        
        /// <remarks/>
        public void matchAsync(string target) {
            this.matchAsync(target, null);
        }
        
        /// <remarks/>
        public void matchAsync(string target, object userState) {
            if ((this.matchOperationCompleted == null)) {
                this.matchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmatchOperationCompleted);
            }
            this.InvokeAsync("match", new object[] {
                        target}, this.matchOperationCompleted, userState);
        }
        
        private void OnmatchOperationCompleted(object arg) {
            if ((this.matchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.matchCompleted(this, new matchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/select", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientTO select(string DFN) {
            object[] results = this.Invoke("select", new object[] {
                        DFN});
            return ((PatientTO)(results[0]));
        }
        
        /// <remarks/>
        public void selectAsync(string DFN) {
            this.selectAsync(DFN, null);
        }
        
        /// <remarks/>
        public void selectAsync(string DFN, object userState) {
            if ((this.selectOperationCompleted == null)) {
                this.selectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectOperationCompleted);
            }
            this.InvokeAsync("select", new object[] {
                        DFN}, this.selectOperationCompleted, userState);
        }
        
        private void OnselectOperationCompleted(object arg) {
            if ((this.selectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectCompleted(this, new selectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/setupMultiSiteQuery", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiteArray setupMultiSiteQuery(string appPwd) {
            object[] results = this.Invoke("setupMultiSiteQuery", new object[] {
                        appPwd});
            return ((SiteArray)(results[0]));
        }
        
        /// <remarks/>
        public void setupMultiSiteQueryAsync(string appPwd) {
            this.setupMultiSiteQueryAsync(appPwd, null);
        }
        
        /// <remarks/>
        public void setupMultiSiteQueryAsync(string appPwd, object userState) {
            if ((this.setupMultiSiteQueryOperationCompleted == null)) {
                this.setupMultiSiteQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetupMultiSiteQueryOperationCompleted);
            }
            this.InvokeAsync("setupMultiSiteQuery", new object[] {
                        appPwd}, this.setupMultiSiteQueryOperationCompleted, userState);
        }
        
        private void OnsetupMultiSiteQueryOperationCompleted(object arg) {
            if ((this.setupMultiSiteQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setupMultiSiteQueryCompleted(this, new setupMultiSiteQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getConfidentiality", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getConfidentiality() {
            object[] results = this.Invoke("getConfidentiality", new object[0]);
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getConfidentialityAsync() {
            this.getConfidentialityAsync(null);
        }
        
        /// <remarks/>
        public void getConfidentialityAsync(object userState) {
            if ((this.getConfidentialityOperationCompleted == null)) {
                this.getConfidentialityOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetConfidentialityOperationCompleted);
            }
            this.InvokeAsync("getConfidentiality", new object[0], this.getConfidentialityOperationCompleted, userState);
        }
        
        private void OngetConfidentialityOperationCompleted(object arg) {
            if ((this.getConfidentialityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getConfidentialityCompleted(this, new getConfidentialityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/issueConfidentialityBulletin", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray issueConfidentialityBulletin() {
            object[] results = this.Invoke("issueConfidentialityBulletin", new object[0]);
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void issueConfidentialityBulletinAsync() {
            this.issueConfidentialityBulletinAsync(null);
        }
        
        /// <remarks/>
        public void issueConfidentialityBulletinAsync(object userState) {
            if ((this.issueConfidentialityBulletinOperationCompleted == null)) {
                this.issueConfidentialityBulletinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnissueConfidentialityBulletinOperationCompleted);
            }
            this.InvokeAsync("issueConfidentialityBulletin", new object[0], this.issueConfidentialityBulletinOperationCompleted, userState);
        }
        
        private void OnissueConfidentialityBulletinOperationCompleted(object arg) {
            if ((this.issueConfidentialityBulletinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.issueConfidentialityBulletinCompleted(this, new issueConfidentialityBulletinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getLatestVitalSigns", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedVitalSignArrays getLatestVitalSigns() {
            object[] results = this.Invoke("getLatestVitalSigns", new object[0]);
            return ((TaggedVitalSignArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getLatestVitalSignsAsync() {
            this.getLatestVitalSignsAsync(null);
        }
        
        /// <remarks/>
        public void getLatestVitalSignsAsync(object userState) {
            if ((this.getLatestVitalSignsOperationCompleted == null)) {
                this.getLatestVitalSignsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLatestVitalSignsOperationCompleted);
            }
            this.InvokeAsync("getLatestVitalSigns", new object[0], this.getLatestVitalSignsOperationCompleted, userState);
        }
        
        private void OngetLatestVitalSignsOperationCompleted(object arg) {
            if ((this.getLatestVitalSignsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLatestVitalSignsCompleted(this, new getLatestVitalSignsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getVitalSigns", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedVitalSignSetArrays getVitalSigns() {
            object[] results = this.Invoke("getVitalSigns", new object[0]);
            return ((TaggedVitalSignSetArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getVitalSignsAsync() {
            this.getVitalSignsAsync(null);
        }
        
        /// <remarks/>
        public void getVitalSignsAsync(object userState) {
            if ((this.getVitalSignsOperationCompleted == null)) {
                this.getVitalSignsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVitalSignsOperationCompleted);
            }
            this.InvokeAsync("getVitalSigns", new object[0], this.getVitalSignsOperationCompleted, userState);
        }
        
        private void OngetVitalSignsOperationCompleted(object arg) {
            if ((this.getVitalSignsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVitalSignsCompleted(this, new getVitalSignsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAllergies", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedAllergyArrays getAllergies() {
            object[] results = this.Invoke("getAllergies", new object[0]);
            return ((TaggedAllergyArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getAllergiesAsync() {
            this.getAllergiesAsync(null);
        }
        
        /// <remarks/>
        public void getAllergiesAsync(object userState) {
            if ((this.getAllergiesOperationCompleted == null)) {
                this.getAllergiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllergiesOperationCompleted);
            }
            this.InvokeAsync("getAllergies", new object[0], this.getAllergiesOperationCompleted, userState);
        }
        
        private void OngetAllergiesOperationCompleted(object arg) {
            if ((this.getAllergiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllergiesCompleted(this, new getAllergiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getRadiologyReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedRadiologyReportArrays getRadiologyReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getRadiologyReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedRadiologyReportArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getRadiologyReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getRadiologyReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getRadiologyReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getRadiologyReportsOperationCompleted == null)) {
                this.getRadiologyReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRadiologyReportsOperationCompleted);
            }
            this.InvokeAsync("getRadiologyReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getRadiologyReportsOperationCompleted, userState);
        }
        
        private void OngetRadiologyReportsOperationCompleted(object arg) {
            if ((this.getRadiologyReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRadiologyReportsCompleted(this, new getRadiologyReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getSurgeryReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedSurgeryReportArrays getSurgeryReports() {
            object[] results = this.Invoke("getSurgeryReports", new object[0]);
            return ((TaggedSurgeryReportArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getSurgeryReportsAsync() {
            this.getSurgeryReportsAsync(null);
        }
        
        /// <remarks/>
        public void getSurgeryReportsAsync(object userState) {
            if ((this.getSurgeryReportsOperationCompleted == null)) {
                this.getSurgeryReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSurgeryReportsOperationCompleted);
            }
            this.InvokeAsync("getSurgeryReports", new object[0], this.getSurgeryReportsOperationCompleted, userState);
        }
        
        private void OngetSurgeryReportsOperationCompleted(object arg) {
            if ((this.getSurgeryReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSurgeryReportsCompleted(this, new getSurgeryReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getSurgeryReportText", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TextTO getSurgeryReportText(string siteId, string rptId) {
            object[] results = this.Invoke("getSurgeryReportText", new object[] {
                        siteId,
                        rptId});
            return ((TextTO)(results[0]));
        }
        
        /// <remarks/>
        public void getSurgeryReportTextAsync(string siteId, string rptId) {
            this.getSurgeryReportTextAsync(siteId, rptId, null);
        }
        
        /// <remarks/>
        public void getSurgeryReportTextAsync(string siteId, string rptId, object userState) {
            if ((this.getSurgeryReportTextOperationCompleted == null)) {
                this.getSurgeryReportTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSurgeryReportTextOperationCompleted);
            }
            this.InvokeAsync("getSurgeryReportText", new object[] {
                        siteId,
                        rptId}, this.getSurgeryReportTextOperationCompleted, userState);
        }
        
        private void OngetSurgeryReportTextOperationCompleted(object arg) {
            if ((this.getSurgeryReportTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSurgeryReportTextCompleted(this, new getSurgeryReportTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getSurgeryReportsWithText", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedSurgeryReportArrays getSurgeryReportsWithText() {
            object[] results = this.Invoke("getSurgeryReportsWithText", new object[0]);
            return ((TaggedSurgeryReportArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getSurgeryReportsWithTextAsync() {
            this.getSurgeryReportsWithTextAsync(null);
        }
        
        /// <remarks/>
        public void getSurgeryReportsWithTextAsync(object userState) {
            if ((this.getSurgeryReportsWithTextOperationCompleted == null)) {
                this.getSurgeryReportsWithTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSurgeryReportsWithTextOperationCompleted);
            }
            this.InvokeAsync("getSurgeryReportsWithText", new object[0], this.getSurgeryReportsWithTextOperationCompleted, userState);
        }
        
        private void OngetSurgeryReportsWithTextOperationCompleted(object arg) {
            if ((this.getSurgeryReportsWithTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSurgeryReportsWithTextCompleted(this, new getSurgeryReportsWithTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getProblemList", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedProblemArrays getProblemList(string type) {
            object[] results = this.Invoke("getProblemList", new object[] {
                        type});
            return ((TaggedProblemArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getProblemListAsync(string type) {
            this.getProblemListAsync(type, null);
        }
        
        /// <remarks/>
        public void getProblemListAsync(string type, object userState) {
            if ((this.getProblemListOperationCompleted == null)) {
                this.getProblemListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProblemListOperationCompleted);
            }
            this.InvokeAsync("getProblemList", new object[] {
                        type}, this.getProblemListOperationCompleted, userState);
        }
        
        private void OngetProblemListOperationCompleted(object arg) {
            if ((this.getProblemListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProblemListCompleted(this, new getProblemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getOutpatientMeds", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedMedicationArrays getOutpatientMeds() {
            object[] results = this.Invoke("getOutpatientMeds", new object[0]);
            return ((TaggedMedicationArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getOutpatientMedsAsync() {
            this.getOutpatientMedsAsync(null);
        }
        
        /// <remarks/>
        public void getOutpatientMedsAsync(object userState) {
            if ((this.getOutpatientMedsOperationCompleted == null)) {
                this.getOutpatientMedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOutpatientMedsOperationCompleted);
            }
            this.InvokeAsync("getOutpatientMeds", new object[0], this.getOutpatientMedsOperationCompleted, userState);
        }
        
        private void OngetOutpatientMedsOperationCompleted(object arg) {
            if ((this.getOutpatientMedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOutpatientMedsCompleted(this, new getOutpatientMedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getIvMeds", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedMedicationArrays getIvMeds() {
            object[] results = this.Invoke("getIvMeds", new object[0]);
            return ((TaggedMedicationArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getIvMedsAsync() {
            this.getIvMedsAsync(null);
        }
        
        /// <remarks/>
        public void getIvMedsAsync(object userState) {
            if ((this.getIvMedsOperationCompleted == null)) {
                this.getIvMedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIvMedsOperationCompleted);
            }
            this.InvokeAsync("getIvMeds", new object[0], this.getIvMedsOperationCompleted, userState);
        }
        
        private void OngetIvMedsOperationCompleted(object arg) {
            if ((this.getIvMedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIvMedsCompleted(this, new getIvMedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getImoMeds", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedMedicationArrays getImoMeds() {
            object[] results = this.Invoke("getImoMeds", new object[0]);
            return ((TaggedMedicationArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getImoMedsAsync() {
            this.getImoMedsAsync(null);
        }
        
        /// <remarks/>
        public void getImoMedsAsync(object userState) {
            if ((this.getImoMedsOperationCompleted == null)) {
                this.getImoMedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImoMedsOperationCompleted);
            }
            this.InvokeAsync("getImoMeds", new object[0], this.getImoMedsOperationCompleted, userState);
        }
        
        private void OngetImoMedsOperationCompleted(object arg) {
            if ((this.getImoMedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImoMedsCompleted(this, new getImoMedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getUnitDoseMeds", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedMedicationArrays getUnitDoseMeds() {
            object[] results = this.Invoke("getUnitDoseMeds", new object[0]);
            return ((TaggedMedicationArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getUnitDoseMedsAsync() {
            this.getUnitDoseMedsAsync(null);
        }
        
        /// <remarks/>
        public void getUnitDoseMedsAsync(object userState) {
            if ((this.getUnitDoseMedsOperationCompleted == null)) {
                this.getUnitDoseMedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnitDoseMedsOperationCompleted);
            }
            this.InvokeAsync("getUnitDoseMeds", new object[0], this.getUnitDoseMedsOperationCompleted, userState);
        }
        
        private void OngetUnitDoseMedsOperationCompleted(object arg) {
            if ((this.getUnitDoseMedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnitDoseMedsCompleted(this, new getUnitDoseMedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getOtherMeds", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedMedicationArrays getOtherMeds() {
            object[] results = this.Invoke("getOtherMeds", new object[0]);
            return ((TaggedMedicationArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getOtherMedsAsync() {
            this.getOtherMedsAsync(null);
        }
        
        /// <remarks/>
        public void getOtherMedsAsync(object userState) {
            if ((this.getOtherMedsOperationCompleted == null)) {
                this.getOtherMedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOtherMedsOperationCompleted);
            }
            this.InvokeAsync("getOtherMeds", new object[0], this.getOtherMedsOperationCompleted, userState);
        }
        
        private void OngetOtherMedsOperationCompleted(object arg) {
            if ((this.getOtherMedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOtherMedsCompleted(this, new getOtherMedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAllMeds", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedMedicationArrays getAllMeds() {
            object[] results = this.Invoke("getAllMeds", new object[0]);
            return ((TaggedMedicationArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getAllMedsAsync() {
            this.getAllMedsAsync(null);
        }
        
        /// <remarks/>
        public void getAllMedsAsync(object userState) {
            if ((this.getAllMedsOperationCompleted == null)) {
                this.getAllMedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllMedsOperationCompleted);
            }
            this.InvokeAsync("getAllMeds", new object[0], this.getAllMedsOperationCompleted, userState);
        }
        
        private void OngetAllMedsOperationCompleted(object arg) {
            if ((this.getAllMedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllMedsCompleted(this, new getAllMedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getMedicationDetail", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TextTO getMedicationDetail(string siteId, string medId) {
            object[] results = this.Invoke("getMedicationDetail", new object[] {
                        siteId,
                        medId});
            return ((TextTO)(results[0]));
        }
        
        /// <remarks/>
        public void getMedicationDetailAsync(string siteId, string medId) {
            this.getMedicationDetailAsync(siteId, medId, null);
        }
        
        /// <remarks/>
        public void getMedicationDetailAsync(string siteId, string medId, object userState) {
            if ((this.getMedicationDetailOperationCompleted == null)) {
                this.getMedicationDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMedicationDetailOperationCompleted);
            }
            this.InvokeAsync("getMedicationDetail", new object[] {
                        siteId,
                        medId}, this.getMedicationDetailOperationCompleted, userState);
        }
        
        private void OngetMedicationDetailOperationCompleted(object arg) {
            if ((this.getMedicationDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMedicationDetailCompleted(this, new getMedicationDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getSignedNotes", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedNoteArrays getSignedNotes(string fromDate, string toDate, int nNotes) {
            object[] results = this.Invoke("getSignedNotes", new object[] {
                        fromDate,
                        toDate,
                        nNotes});
            return ((TaggedNoteArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getSignedNotesAsync(string fromDate, string toDate, int nNotes) {
            this.getSignedNotesAsync(fromDate, toDate, nNotes, null);
        }
        
        /// <remarks/>
        public void getSignedNotesAsync(string fromDate, string toDate, int nNotes, object userState) {
            if ((this.getSignedNotesOperationCompleted == null)) {
                this.getSignedNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSignedNotesOperationCompleted);
            }
            this.InvokeAsync("getSignedNotes", new object[] {
                        fromDate,
                        toDate,
                        nNotes}, this.getSignedNotesOperationCompleted, userState);
        }
        
        private void OngetSignedNotesOperationCompleted(object arg) {
            if ((this.getSignedNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSignedNotesCompleted(this, new getSignedNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getUnsignedNotes", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedNoteArrays getUnsignedNotes(string fromDate, string toDate, int nNotes) {
            object[] results = this.Invoke("getUnsignedNotes", new object[] {
                        fromDate,
                        toDate,
                        nNotes});
            return ((TaggedNoteArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getUnsignedNotesAsync(string fromDate, string toDate, int nNotes) {
            this.getUnsignedNotesAsync(fromDate, toDate, nNotes, null);
        }
        
        /// <remarks/>
        public void getUnsignedNotesAsync(string fromDate, string toDate, int nNotes, object userState) {
            if ((this.getUnsignedNotesOperationCompleted == null)) {
                this.getUnsignedNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnsignedNotesOperationCompleted);
            }
            this.InvokeAsync("getUnsignedNotes", new object[] {
                        fromDate,
                        toDate,
                        nNotes}, this.getUnsignedNotesOperationCompleted, userState);
        }
        
        private void OngetUnsignedNotesOperationCompleted(object arg) {
            if ((this.getUnsignedNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnsignedNotesCompleted(this, new getUnsignedNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getUncosignedNotes", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedNoteArrays getUncosignedNotes(string fromDate, string toDate, int nNotes) {
            object[] results = this.Invoke("getUncosignedNotes", new object[] {
                        fromDate,
                        toDate,
                        nNotes});
            return ((TaggedNoteArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getUncosignedNotesAsync(string fromDate, string toDate, int nNotes) {
            this.getUncosignedNotesAsync(fromDate, toDate, nNotes, null);
        }
        
        /// <remarks/>
        public void getUncosignedNotesAsync(string fromDate, string toDate, int nNotes, object userState) {
            if ((this.getUncosignedNotesOperationCompleted == null)) {
                this.getUncosignedNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUncosignedNotesOperationCompleted);
            }
            this.InvokeAsync("getUncosignedNotes", new object[] {
                        fromDate,
                        toDate,
                        nNotes}, this.getUncosignedNotesOperationCompleted, userState);
        }
        
        private void OngetUncosignedNotesOperationCompleted(object arg) {
            if ((this.getUncosignedNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUncosignedNotesCompleted(this, new getUncosignedNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getNote", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TextTO getNote(string siteId, string noteId) {
            object[] results = this.Invoke("getNote", new object[] {
                        siteId,
                        noteId});
            return ((TextTO)(results[0]));
        }
        
        /// <remarks/>
        public void getNoteAsync(string siteId, string noteId) {
            this.getNoteAsync(siteId, noteId, null);
        }
        
        /// <remarks/>
        public void getNoteAsync(string siteId, string noteId, object userState) {
            if ((this.getNoteOperationCompleted == null)) {
                this.getNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNoteOperationCompleted);
            }
            this.InvokeAsync("getNote", new object[] {
                        siteId,
                        noteId}, this.getNoteOperationCompleted, userState);
        }
        
        private void OngetNoteOperationCompleted(object arg) {
            if ((this.getNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNoteCompleted(this, new getNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getNotesWithText", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedNoteArrays getNotesWithText(string fromDate, string toDate, int nNotes) {
            object[] results = this.Invoke("getNotesWithText", new object[] {
                        fromDate,
                        toDate,
                        nNotes});
            return ((TaggedNoteArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getNotesWithTextAsync(string fromDate, string toDate, int nNotes) {
            this.getNotesWithTextAsync(fromDate, toDate, nNotes, null);
        }
        
        /// <remarks/>
        public void getNotesWithTextAsync(string fromDate, string toDate, int nNotes, object userState) {
            if ((this.getNotesWithTextOperationCompleted == null)) {
                this.getNotesWithTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNotesWithTextOperationCompleted);
            }
            this.InvokeAsync("getNotesWithText", new object[] {
                        fromDate,
                        toDate,
                        nNotes}, this.getNotesWithTextOperationCompleted, userState);
        }
        
        private void OngetNotesWithTextOperationCompleted(object arg) {
            if ((this.getNotesWithTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNotesWithTextCompleted(this, new getNotesWithTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getDischargeSummaries", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedNoteArrays getDischargeSummaries(string fromDate, string toDate, int nNotes) {
            object[] results = this.Invoke("getDischargeSummaries", new object[] {
                        fromDate,
                        toDate,
                        nNotes});
            return ((TaggedNoteArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getDischargeSummariesAsync(string fromDate, string toDate, int nNotes) {
            this.getDischargeSummariesAsync(fromDate, toDate, nNotes, null);
        }
        
        /// <remarks/>
        public void getDischargeSummariesAsync(string fromDate, string toDate, int nNotes, object userState) {
            if ((this.getDischargeSummariesOperationCompleted == null)) {
                this.getDischargeSummariesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDischargeSummariesOperationCompleted);
            }
            this.InvokeAsync("getDischargeSummaries", new object[] {
                        fromDate,
                        toDate,
                        nNotes}, this.getDischargeSummariesOperationCompleted, userState);
        }
        
        private void OngetDischargeSummariesOperationCompleted(object arg) {
            if ((this.getDischargeSummariesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDischargeSummariesCompleted(this, new getDischargeSummariesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getConsultsForPatient", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedConsultArrays getConsultsForPatient() {
            object[] results = this.Invoke("getConsultsForPatient", new object[0]);
            return ((TaggedConsultArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getConsultsForPatientAsync() {
            this.getConsultsForPatientAsync(null);
        }
        
        /// <remarks/>
        public void getConsultsForPatientAsync(object userState) {
            if ((this.getConsultsForPatientOperationCompleted == null)) {
                this.getConsultsForPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetConsultsForPatientOperationCompleted);
            }
            this.InvokeAsync("getConsultsForPatient", new object[0], this.getConsultsForPatientOperationCompleted, userState);
        }
        
        private void OngetConsultsForPatientOperationCompleted(object arg) {
            if ((this.getConsultsForPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getConsultsForPatientCompleted(this, new getConsultsForPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAppointments", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedAppointmentArrays getAppointments() {
            object[] results = this.Invoke("getAppointments", new object[0]);
            return ((TaggedAppointmentArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getAppointmentsAsync() {
            this.getAppointmentsAsync(null);
        }
        
        /// <remarks/>
        public void getAppointmentsAsync(object userState) {
            if ((this.getAppointmentsOperationCompleted == null)) {
                this.getAppointmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAppointmentsOperationCompleted);
            }
            this.InvokeAsync("getAppointments", new object[0], this.getAppointmentsOperationCompleted, userState);
        }
        
        private void OngetAppointmentsOperationCompleted(object arg) {
            if ((this.getAppointmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAppointmentsCompleted(this, new getAppointmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAppointmentText", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TextTO getAppointmentText(string siteId, string apptId) {
            object[] results = this.Invoke("getAppointmentText", new object[] {
                        siteId,
                        apptId});
            return ((TextTO)(results[0]));
        }
        
        /// <remarks/>
        public void getAppointmentTextAsync(string siteId, string apptId) {
            this.getAppointmentTextAsync(siteId, apptId, null);
        }
        
        /// <remarks/>
        public void getAppointmentTextAsync(string siteId, string apptId, object userState) {
            if ((this.getAppointmentTextOperationCompleted == null)) {
                this.getAppointmentTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAppointmentTextOperationCompleted);
            }
            this.InvokeAsync("getAppointmentText", new object[] {
                        siteId,
                        apptId}, this.getAppointmentTextOperationCompleted, userState);
        }
        
        private void OngetAppointmentTextOperationCompleted(object arg) {
            if ((this.getAppointmentTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAppointmentTextCompleted(this, new getAppointmentTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getClinicalWarnings", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getClinicalWarnings(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getClinicalWarnings", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getClinicalWarningsAsync(string fromDate, string toDate, int nrpts) {
            this.getClinicalWarningsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getClinicalWarningsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getClinicalWarningsOperationCompleted == null)) {
                this.getClinicalWarningsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClinicalWarningsOperationCompleted);
            }
            this.InvokeAsync("getClinicalWarnings", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getClinicalWarningsOperationCompleted, userState);
        }
        
        private void OngetClinicalWarningsOperationCompleted(object arg) {
            if ((this.getClinicalWarningsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClinicalWarningsCompleted(this, new getClinicalWarningsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAdvanceDirectives", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getAdvanceDirectives(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getAdvanceDirectives", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getAdvanceDirectivesAsync(string fromDate, string toDate, int nrpts) {
            this.getAdvanceDirectivesAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getAdvanceDirectivesAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getAdvanceDirectivesOperationCompleted == null)) {
                this.getAdvanceDirectivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAdvanceDirectivesOperationCompleted);
            }
            this.InvokeAsync("getAdvanceDirectives", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getAdvanceDirectivesOperationCompleted, userState);
        }
        
        private void OngetAdvanceDirectivesOperationCompleted(object arg) {
            if ((this.getAdvanceDirectivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAdvanceDirectivesCompleted(this, new getAdvanceDirectivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getCrisisNotes", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getCrisisNotes(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getCrisisNotes", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getCrisisNotesAsync(string fromDate, string toDate, int nrpts) {
            this.getCrisisNotesAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getCrisisNotesAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getCrisisNotesOperationCompleted == null)) {
                this.getCrisisNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCrisisNotesOperationCompleted);
            }
            this.InvokeAsync("getCrisisNotes", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getCrisisNotesOperationCompleted, userState);
        }
        
        private void OngetCrisisNotesOperationCompleted(object arg) {
            if ((this.getCrisisNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCrisisNotesCompleted(this, new getCrisisNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getImmunizations", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getImmunizations(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getImmunizations", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getImmunizationsAsync(string fromDate, string toDate, int nrpts) {
            this.getImmunizationsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getImmunizationsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getImmunizationsOperationCompleted == null)) {
                this.getImmunizationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImmunizationsOperationCompleted);
            }
            this.InvokeAsync("getImmunizations", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getImmunizationsOperationCompleted, userState);
        }
        
        private void OngetImmunizationsOperationCompleted(object arg) {
            if ((this.getImmunizationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImmunizationsCompleted(this, new getImmunizationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getOutpatientRxProfile", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getOutpatientRxProfile() {
            object[] results = this.Invoke("getOutpatientRxProfile", new object[0]);
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getOutpatientRxProfileAsync() {
            this.getOutpatientRxProfileAsync(null);
        }
        
        /// <remarks/>
        public void getOutpatientRxProfileAsync(object userState) {
            if ((this.getOutpatientRxProfileOperationCompleted == null)) {
                this.getOutpatientRxProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOutpatientRxProfileOperationCompleted);
            }
            this.InvokeAsync("getOutpatientRxProfile", new object[0], this.getOutpatientRxProfileOperationCompleted, userState);
        }
        
        private void OngetOutpatientRxProfileOperationCompleted(object arg) {
            if ((this.getOutpatientRxProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOutpatientRxProfileCompleted(this, new getOutpatientRxProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getMedsAdminHx", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getMedsAdminHx(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getMedsAdminHx", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getMedsAdminHxAsync(string fromDate, string toDate, int nrpts) {
            this.getMedsAdminHxAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getMedsAdminHxAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getMedsAdminHxOperationCompleted == null)) {
                this.getMedsAdminHxOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMedsAdminHxOperationCompleted);
            }
            this.InvokeAsync("getMedsAdminHx", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getMedsAdminHxOperationCompleted, userState);
        }
        
        private void OngetMedsAdminHxOperationCompleted(object arg) {
            if ((this.getMedsAdminHxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMedsAdminHxCompleted(this, new getMedsAdminHxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getMedsAdminLog", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getMedsAdminLog(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getMedsAdminLog", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getMedsAdminLogAsync(string fromDate, string toDate, int nrpts) {
            this.getMedsAdminLogAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getMedsAdminLogAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getMedsAdminLogOperationCompleted == null)) {
                this.getMedsAdminLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMedsAdminLogOperationCompleted);
            }
            this.InvokeAsync("getMedsAdminLog", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getMedsAdminLogOperationCompleted, userState);
        }
        
        private void OngetMedsAdminLogOperationCompleted(object arg) {
            if ((this.getMedsAdminLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMedsAdminLogCompleted(this, new getMedsAdminLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getChemHemReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedChemHemRptArrays getChemHemReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getChemHemReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedChemHemRptArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getChemHemReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getChemHemReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getChemHemReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getChemHemReportsOperationCompleted == null)) {
                this.getChemHemReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetChemHemReportsOperationCompleted);
            }
            this.InvokeAsync("getChemHemReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getChemHemReportsOperationCompleted, userState);
        }
        
        private void OngetChemHemReportsOperationCompleted(object arg) {
            if ((this.getChemHemReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getChemHemReportsCompleted(this, new getChemHemReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getChemHemReportsSimple", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedChemHemRptArrays getChemHemReportsSimple(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getChemHemReportsSimple", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedChemHemRptArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getChemHemReportsSimpleAsync(string fromDate, string toDate, int nrpts) {
            this.getChemHemReportsSimpleAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getChemHemReportsSimpleAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getChemHemReportsSimpleOperationCompleted == null)) {
                this.getChemHemReportsSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetChemHemReportsSimpleOperationCompleted);
            }
            this.InvokeAsync("getChemHemReportsSimple", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getChemHemReportsSimpleOperationCompleted, userState);
        }
        
        private void OngetChemHemReportsSimpleOperationCompleted(object arg) {
            if ((this.getChemHemReportsSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getChemHemReportsSimpleCompleted(this, new getChemHemReportsSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getCytologyReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedCytologyRptArrays getCytologyReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getCytologyReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedCytologyRptArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getCytologyReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getCytologyReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getCytologyReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getCytologyReportsOperationCompleted == null)) {
                this.getCytologyReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCytologyReportsOperationCompleted);
            }
            this.InvokeAsync("getCytologyReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getCytologyReportsOperationCompleted, userState);
        }
        
        private void OngetCytologyReportsOperationCompleted(object arg) {
            if ((this.getCytologyReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCytologyReportsCompleted(this, new getCytologyReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getMicrobiologyReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedMicrobiologyRptArrays getMicrobiologyReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getMicrobiologyReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedMicrobiologyRptArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getMicrobiologyReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getMicrobiologyReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getMicrobiologyReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getMicrobiologyReportsOperationCompleted == null)) {
                this.getMicrobiologyReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMicrobiologyReportsOperationCompleted);
            }
            this.InvokeAsync("getMicrobiologyReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getMicrobiologyReportsOperationCompleted, userState);
        }
        
        private void OngetMicrobiologyReportsOperationCompleted(object arg) {
            if ((this.getMicrobiologyReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMicrobiologyReportsCompleted(this, new getMicrobiologyReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getSurgicalPathologyReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedSurgicalPathologyRptArrays getSurgicalPathologyReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getSurgicalPathologyReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedSurgicalPathologyRptArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getSurgicalPathologyReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getSurgicalPathologyReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getSurgicalPathologyReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getSurgicalPathologyReportsOperationCompleted == null)) {
                this.getSurgicalPathologyReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSurgicalPathologyReportsOperationCompleted);
            }
            this.InvokeAsync("getSurgicalPathologyReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getSurgicalPathologyReportsOperationCompleted, userState);
        }
        
        private void OngetSurgicalPathologyReportsOperationCompleted(object arg) {
            if ((this.getSurgicalPathologyReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSurgicalPathologyReportsCompleted(this, new getSurgicalPathologyReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getBloodAvailabilityReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getBloodAvailabilityReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getBloodAvailabilityReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getBloodAvailabilityReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getBloodAvailabilityReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getBloodAvailabilityReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getBloodAvailabilityReportsOperationCompleted == null)) {
                this.getBloodAvailabilityReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBloodAvailabilityReportsOperationCompleted);
            }
            this.InvokeAsync("getBloodAvailabilityReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getBloodAvailabilityReportsOperationCompleted, userState);
        }
        
        private void OngetBloodAvailabilityReportsOperationCompleted(object arg) {
            if ((this.getBloodAvailabilityReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBloodAvailabilityReportsCompleted(this, new getBloodAvailabilityReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getBloodTransfusionReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getBloodTransfusionReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getBloodTransfusionReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getBloodTransfusionReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getBloodTransfusionReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getBloodTransfusionReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getBloodTransfusionReportsOperationCompleted == null)) {
                this.getBloodTransfusionReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBloodTransfusionReportsOperationCompleted);
            }
            this.InvokeAsync("getBloodTransfusionReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getBloodTransfusionReportsOperationCompleted, userState);
        }
        
        private void OngetBloodTransfusionReportsOperationCompleted(object arg) {
            if ((this.getBloodTransfusionReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBloodTransfusionReportsCompleted(this, new getBloodTransfusionReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getBloodBankReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getBloodBankReports() {
            object[] results = this.Invoke("getBloodBankReports", new object[0]);
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getBloodBankReportsAsync() {
            this.getBloodBankReportsAsync(null);
        }
        
        /// <remarks/>
        public void getBloodBankReportsAsync(object userState) {
            if ((this.getBloodBankReportsOperationCompleted == null)) {
                this.getBloodBankReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBloodBankReportsOperationCompleted);
            }
            this.InvokeAsync("getBloodBankReports", new object[0], this.getBloodBankReportsOperationCompleted, userState);
        }
        
        private void OngetBloodBankReportsOperationCompleted(object arg) {
            if ((this.getBloodBankReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBloodBankReportsCompleted(this, new getBloodBankReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getElectronMicroscopyReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getElectronMicroscopyReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getElectronMicroscopyReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getElectronMicroscopyReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getElectronMicroscopyReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getElectronMicroscopyReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getElectronMicroscopyReportsOperationCompleted == null)) {
                this.getElectronMicroscopyReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetElectronMicroscopyReportsOperationCompleted);
            }
            this.InvokeAsync("getElectronMicroscopyReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getElectronMicroscopyReportsOperationCompleted, userState);
        }
        
        private void OngetElectronMicroscopyReportsOperationCompleted(object arg) {
            if ((this.getElectronMicroscopyReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getElectronMicroscopyReportsCompleted(this, new getElectronMicroscopyReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getCytopathologyReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getCytopathologyReports() {
            object[] results = this.Invoke("getCytopathologyReports", new object[0]);
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getCytopathologyReportsAsync() {
            this.getCytopathologyReportsAsync(null);
        }
        
        /// <remarks/>
        public void getCytopathologyReportsAsync(object userState) {
            if ((this.getCytopathologyReportsOperationCompleted == null)) {
                this.getCytopathologyReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCytopathologyReportsOperationCompleted);
            }
            this.InvokeAsync("getCytopathologyReports", new object[0], this.getCytopathologyReportsOperationCompleted, userState);
        }
        
        private void OngetCytopathologyReportsOperationCompleted(object arg) {
            if ((this.getCytopathologyReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCytopathologyReportsCompleted(this, new getCytopathologyReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAutopsyReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getAutopsyReports() {
            object[] results = this.Invoke("getAutopsyReports", new object[0]);
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getAutopsyReportsAsync() {
            this.getAutopsyReportsAsync(null);
        }
        
        /// <remarks/>
        public void getAutopsyReportsAsync(object userState) {
            if ((this.getAutopsyReportsOperationCompleted == null)) {
                this.getAutopsyReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAutopsyReportsOperationCompleted);
            }
            this.InvokeAsync("getAutopsyReports", new object[0], this.getAutopsyReportsOperationCompleted, userState);
        }
        
        private void OngetAutopsyReportsOperationCompleted(object arg) {
            if ((this.getAutopsyReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAutopsyReportsCompleted(this, new getAutopsyReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getOutpatientEncounterReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getOutpatientEncounterReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getOutpatientEncounterReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getOutpatientEncounterReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getOutpatientEncounterReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getOutpatientEncounterReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getOutpatientEncounterReportsOperationCompleted == null)) {
                this.getOutpatientEncounterReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOutpatientEncounterReportsOperationCompleted);
            }
            this.InvokeAsync("getOutpatientEncounterReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getOutpatientEncounterReportsOperationCompleted, userState);
        }
        
        private void OngetOutpatientEncounterReportsOperationCompleted(object arg) {
            if ((this.getOutpatientEncounterReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOutpatientEncounterReportsCompleted(this, new getOutpatientEncounterReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAdmissionsReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getAdmissionsReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getAdmissionsReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getAdmissionsReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getAdmissionsReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getAdmissionsReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getAdmissionsReportsOperationCompleted == null)) {
                this.getAdmissionsReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAdmissionsReportsOperationCompleted);
            }
            this.InvokeAsync("getAdmissionsReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getAdmissionsReportsOperationCompleted, userState);
        }
        
        private void OngetAdmissionsReportsOperationCompleted(object arg) {
            if ((this.getAdmissionsReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAdmissionsReportsCompleted(this, new getAdmissionsReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getExpandedAdtReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getExpandedAdtReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getExpandedAdtReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getExpandedAdtReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getExpandedAdtReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getExpandedAdtReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getExpandedAdtReportsOperationCompleted == null)) {
                this.getExpandedAdtReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExpandedAdtReportsOperationCompleted);
            }
            this.InvokeAsync("getExpandedAdtReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getExpandedAdtReportsOperationCompleted, userState);
        }
        
        private void OngetExpandedAdtReportsOperationCompleted(object arg) {
            if ((this.getExpandedAdtReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExpandedAdtReportsCompleted(this, new getExpandedAdtReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getDischargeDiagnosisReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getDischargeDiagnosisReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getDischargeDiagnosisReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getDischargeDiagnosisReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getDischargeDiagnosisReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getDischargeDiagnosisReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getDischargeDiagnosisReportsOperationCompleted == null)) {
                this.getDischargeDiagnosisReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDischargeDiagnosisReportsOperationCompleted);
            }
            this.InvokeAsync("getDischargeDiagnosisReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getDischargeDiagnosisReportsOperationCompleted, userState);
        }
        
        private void OngetDischargeDiagnosisReportsOperationCompleted(object arg) {
            if ((this.getDischargeDiagnosisReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDischargeDiagnosisReportsCompleted(this, new getDischargeDiagnosisReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getDischargesReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getDischargesReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getDischargesReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getDischargesReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getDischargesReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getDischargesReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getDischargesReportsOperationCompleted == null)) {
                this.getDischargesReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDischargesReportsOperationCompleted);
            }
            this.InvokeAsync("getDischargesReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getDischargesReportsOperationCompleted, userState);
        }
        
        private void OngetDischargesReportsOperationCompleted(object arg) {
            if ((this.getDischargesReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDischargesReportsCompleted(this, new getDischargesReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getTransfersReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getTransfersReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getTransfersReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getTransfersReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getTransfersReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getTransfersReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getTransfersReportsOperationCompleted == null)) {
                this.getTransfersReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransfersReportsOperationCompleted);
            }
            this.InvokeAsync("getTransfersReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getTransfersReportsOperationCompleted, userState);
        }
        
        private void OngetTransfersReportsOperationCompleted(object arg) {
            if ((this.getTransfersReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransfersReportsCompleted(this, new getTransfersReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getFutureClinicVisitsReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getFutureClinicVisitsReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getFutureClinicVisitsReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getFutureClinicVisitsReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getFutureClinicVisitsReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getFutureClinicVisitsReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getFutureClinicVisitsReportsOperationCompleted == null)) {
                this.getFutureClinicVisitsReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFutureClinicVisitsReportsOperationCompleted);
            }
            this.InvokeAsync("getFutureClinicVisitsReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getFutureClinicVisitsReportsOperationCompleted, userState);
        }
        
        private void OngetFutureClinicVisitsReportsOperationCompleted(object arg) {
            if ((this.getFutureClinicVisitsReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFutureClinicVisitsReportsCompleted(this, new getFutureClinicVisitsReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPastClinicVisitsReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getPastClinicVisitsReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getPastClinicVisitsReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getPastClinicVisitsReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getPastClinicVisitsReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getPastClinicVisitsReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getPastClinicVisitsReportsOperationCompleted == null)) {
                this.getPastClinicVisitsReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPastClinicVisitsReportsOperationCompleted);
            }
            this.InvokeAsync("getPastClinicVisitsReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getPastClinicVisitsReportsOperationCompleted, userState);
        }
        
        private void OngetPastClinicVisitsReportsOperationCompleted(object arg) {
            if ((this.getPastClinicVisitsReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPastClinicVisitsReportsCompleted(this, new getPastClinicVisitsReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getTreatingSpecialtyReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getTreatingSpecialtyReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getTreatingSpecialtyReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getTreatingSpecialtyReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getTreatingSpecialtyReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getTreatingSpecialtyReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getTreatingSpecialtyReportsOperationCompleted == null)) {
                this.getTreatingSpecialtyReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTreatingSpecialtyReportsOperationCompleted);
            }
            this.InvokeAsync("getTreatingSpecialtyReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getTreatingSpecialtyReportsOperationCompleted, userState);
        }
        
        private void OngetTreatingSpecialtyReportsOperationCompleted(object arg) {
            if ((this.getTreatingSpecialtyReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTreatingSpecialtyReportsCompleted(this, new getTreatingSpecialtyReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getCompAndPenReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getCompAndPenReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getCompAndPenReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getCompAndPenReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getCompAndPenReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getCompAndPenReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getCompAndPenReportsOperationCompleted == null)) {
                this.getCompAndPenReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCompAndPenReportsOperationCompleted);
            }
            this.InvokeAsync("getCompAndPenReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getCompAndPenReportsOperationCompleted, userState);
        }
        
        private void OngetCompAndPenReportsOperationCompleted(object arg) {
            if ((this.getCompAndPenReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCompAndPenReportsCompleted(this, new getCompAndPenReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getCareTeamReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getCareTeamReports() {
            object[] results = this.Invoke("getCareTeamReports", new object[0]);
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getCareTeamReportsAsync() {
            this.getCareTeamReportsAsync(null);
        }
        
        /// <remarks/>
        public void getCareTeamReportsAsync(object userState) {
            if ((this.getCareTeamReportsOperationCompleted == null)) {
                this.getCareTeamReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCareTeamReportsOperationCompleted);
            }
            this.InvokeAsync("getCareTeamReports", new object[0], this.getCareTeamReportsOperationCompleted, userState);
        }
        
        private void OngetCareTeamReportsOperationCompleted(object arg) {
            if ((this.getCareTeamReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCareTeamReportsCompleted(this, new getCareTeamReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getIcdProceduresReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedIcdRptArrays getIcdProceduresReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getIcdProceduresReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedIcdRptArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getIcdProceduresReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getIcdProceduresReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getIcdProceduresReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getIcdProceduresReportsOperationCompleted == null)) {
                this.getIcdProceduresReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIcdProceduresReportsOperationCompleted);
            }
            this.InvokeAsync("getIcdProceduresReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getIcdProceduresReportsOperationCompleted, userState);
        }
        
        private void OngetIcdProceduresReportsOperationCompleted(object arg) {
            if ((this.getIcdProceduresReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIcdProceduresReportsCompleted(this, new getIcdProceduresReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getIcdSurgeryReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedIcdRptArrays getIcdSurgeryReports(string fromDate, string toDate, int nrpts) {
            object[] results = this.Invoke("getIcdSurgeryReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts});
            return ((TaggedIcdRptArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getIcdSurgeryReportsAsync(string fromDate, string toDate, int nrpts) {
            this.getIcdSurgeryReportsAsync(fromDate, toDate, nrpts, null);
        }
        
        /// <remarks/>
        public void getIcdSurgeryReportsAsync(string fromDate, string toDate, int nrpts, object userState) {
            if ((this.getIcdSurgeryReportsOperationCompleted == null)) {
                this.getIcdSurgeryReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIcdSurgeryReportsOperationCompleted);
            }
            this.InvokeAsync("getIcdSurgeryReports", new object[] {
                        fromDate,
                        toDate,
                        nrpts}, this.getIcdSurgeryReportsOperationCompleted, userState);
        }
        
        private void OngetIcdSurgeryReportsOperationCompleted(object arg) {
            if ((this.getIcdSurgeryReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIcdSurgeryReportsCompleted(this, new getIcdSurgeryReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getNoteTitles", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getNoteTitles(string target, string direction) {
            object[] results = this.Invoke("getNoteTitles", new object[] {
                        target,
                        direction});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getNoteTitlesAsync(string target, string direction) {
            this.getNoteTitlesAsync(target, direction, null);
        }
        
        /// <remarks/>
        public void getNoteTitlesAsync(string target, string direction, object userState) {
            if ((this.getNoteTitlesOperationCompleted == null)) {
                this.getNoteTitlesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNoteTitlesOperationCompleted);
            }
            this.InvokeAsync("getNoteTitles", new object[] {
                        target,
                        direction}, this.getNoteTitlesOperationCompleted, userState);
        }
        
        private void OngetNoteTitlesOperationCompleted(object arg) {
            if ((this.getNoteTitlesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNoteTitlesCompleted(this, new getNoteTitlesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getHospitalLocations", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedHospitalLocationArray getHospitalLocations(string target, string direction) {
            object[] results = this.Invoke("getHospitalLocations", new object[] {
                        target,
                        direction});
            return ((TaggedHospitalLocationArray)(results[0]));
        }
        
        /// <remarks/>
        public void getHospitalLocationsAsync(string target, string direction) {
            this.getHospitalLocationsAsync(target, direction, null);
        }
        
        /// <remarks/>
        public void getHospitalLocationsAsync(string target, string direction, object userState) {
            if ((this.getHospitalLocationsOperationCompleted == null)) {
                this.getHospitalLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHospitalLocationsOperationCompleted);
            }
            this.InvokeAsync("getHospitalLocations", new object[] {
                        target,
                        direction}, this.getHospitalLocationsOperationCompleted, userState);
        }
        
        private void OngetHospitalLocationsOperationCompleted(object arg) {
            if ((this.getHospitalLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHospitalLocationsCompleted(this, new getHospitalLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getImagingReport", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RadiologyReportTO getImagingReport(string SSN, string accessionNumber) {
            object[] results = this.Invoke("getImagingReport", new object[] {
                        SSN,
                        accessionNumber});
            return ((RadiologyReportTO)(results[0]));
        }
        
        /// <remarks/>
        public void getImagingReportAsync(string SSN, string accessionNumber) {
            this.getImagingReportAsync(SSN, accessionNumber, null);
        }
        
        /// <remarks/>
        public void getImagingReportAsync(string SSN, string accessionNumber, object userState) {
            if ((this.getImagingReportOperationCompleted == null)) {
                this.getImagingReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImagingReportOperationCompleted);
            }
            this.InvokeAsync("getImagingReport", new object[] {
                        SSN,
                        accessionNumber}, this.getImagingReportOperationCompleted, userState);
        }
        
        private void OngetImagingReportOperationCompleted(object arg) {
            if ((this.getImagingReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getImagingReportCompleted(this, new getImagingReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/writeSimpleOrderByPolicy", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderTO writeSimpleOrderByPolicy(string providerDUZ, string esig, string locationIEN, string orderIEN, string startDate) {
            object[] results = this.Invoke("writeSimpleOrderByPolicy", new object[] {
                        providerDUZ,
                        esig,
                        locationIEN,
                        orderIEN,
                        startDate});
            return ((OrderTO)(results[0]));
        }
        
        /// <remarks/>
        public void writeSimpleOrderByPolicyAsync(string providerDUZ, string esig, string locationIEN, string orderIEN, string startDate) {
            this.writeSimpleOrderByPolicyAsync(providerDUZ, esig, locationIEN, orderIEN, startDate, null);
        }
        
        /// <remarks/>
        public void writeSimpleOrderByPolicyAsync(string providerDUZ, string esig, string locationIEN, string orderIEN, string startDate, object userState) {
            if ((this.writeSimpleOrderByPolicyOperationCompleted == null)) {
                this.writeSimpleOrderByPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwriteSimpleOrderByPolicyOperationCompleted);
            }
            this.InvokeAsync("writeSimpleOrderByPolicy", new object[] {
                        providerDUZ,
                        esig,
                        locationIEN,
                        orderIEN,
                        startDate}, this.writeSimpleOrderByPolicyOperationCompleted, userState);
        }
        
        private void OnwriteSimpleOrderByPolicyOperationCompleted(object arg) {
            if ((this.writeSimpleOrderByPolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.writeSimpleOrderByPolicyCompleted(this, new writeSimpleOrderByPolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/isValidEsig", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TextTO isValidEsig(string esig) {
            object[] results = this.Invoke("isValidEsig", new object[] {
                        esig});
            return ((TextTO)(results[0]));
        }
        
        /// <remarks/>
        public void isValidEsigAsync(string esig) {
            this.isValidEsigAsync(esig, null);
        }
        
        /// <remarks/>
        public void isValidEsigAsync(string esig, object userState) {
            if ((this.isValidEsigOperationCompleted == null)) {
                this.isValidEsigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisValidEsigOperationCompleted);
            }
            this.InvokeAsync("isValidEsig", new object[] {
                        esig}, this.isValidEsigOperationCompleted, userState);
        }
        
        private void OnisValidEsigOperationCompleted(object arg) {
            if ((this.isValidEsigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isValidEsigCompleted(this, new isValidEsigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/patientInquiry", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TextTO patientInquiry() {
            object[] results = this.Invoke("patientInquiry", new object[0]);
            return ((TextTO)(results[0]));
        }
        
        /// <remarks/>
        public void patientInquiryAsync() {
            this.patientInquiryAsync(null);
        }
        
        /// <remarks/>
        public void patientInquiryAsync(object userState) {
            if ((this.patientInquiryOperationCompleted == null)) {
                this.patientInquiryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpatientInquiryOperationCompleted);
            }
            this.InvokeAsync("patientInquiry", new object[0], this.patientInquiryOperationCompleted, userState);
        }
        
        private void OnpatientInquiryOperationCompleted(object arg) {
            if ((this.patientInquiryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.patientInquiryCompleted(this, new patientInquiryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getWards", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedHospitalLocationArray getWards() {
            object[] results = this.Invoke("getWards", new object[0]);
            return ((TaggedHospitalLocationArray)(results[0]));
        }
        
        /// <remarks/>
        public void getWardsAsync() {
            this.getWardsAsync(null);
        }
        
        /// <remarks/>
        public void getWardsAsync(object userState) {
            if ((this.getWardsOperationCompleted == null)) {
                this.getWardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWardsOperationCompleted);
            }
            this.InvokeAsync("getWards", new object[0], this.getWardsOperationCompleted, userState);
        }
        
        private void OngetWardsOperationCompleted(object arg) {
            if ((this.getWardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWardsCompleted(this, new getWardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPatientsByWard", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedPatientArray getPatientsByWard(string wardId) {
            object[] results = this.Invoke("getPatientsByWard", new object[] {
                        wardId});
            return ((TaggedPatientArray)(results[0]));
        }
        
        /// <remarks/>
        public void getPatientsByWardAsync(string wardId) {
            this.getPatientsByWardAsync(wardId, null);
        }
        
        /// <remarks/>
        public void getPatientsByWardAsync(string wardId, object userState) {
            if ((this.getPatientsByWardOperationCompleted == null)) {
                this.getPatientsByWardOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPatientsByWardOperationCompleted);
            }
            this.InvokeAsync("getPatientsByWard", new object[] {
                        wardId}, this.getPatientsByWardOperationCompleted, userState);
        }
        
        private void OngetPatientsByWardOperationCompleted(object arg) {
            if ((this.getPatientsByWardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPatientsByWardCompleted(this, new getPatientsByWardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getClinics", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedHospitalLocationArray getClinics(string target) {
            object[] results = this.Invoke("getClinics", new object[] {
                        target});
            return ((TaggedHospitalLocationArray)(results[0]));
        }
        
        /// <remarks/>
        public void getClinicsAsync(string target) {
            this.getClinicsAsync(target, null);
        }
        
        /// <remarks/>
        public void getClinicsAsync(string target, object userState) {
            if ((this.getClinicsOperationCompleted == null)) {
                this.getClinicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClinicsOperationCompleted);
            }
            this.InvokeAsync("getClinics", new object[] {
                        target}, this.getClinicsOperationCompleted, userState);
        }
        
        private void OngetClinicsOperationCompleted(object arg) {
            if ((this.getClinicsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClinicsCompleted(this, new getClinicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPatientsByClinic", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedPatientArray getPatientsByClinic(string clinicId) {
            object[] results = this.Invoke("getPatientsByClinic", new object[] {
                        clinicId});
            return ((TaggedPatientArray)(results[0]));
        }
        
        /// <remarks/>
        public void getPatientsByClinicAsync(string clinicId) {
            this.getPatientsByClinicAsync(clinicId, null);
        }
        
        /// <remarks/>
        public void getPatientsByClinicAsync(string clinicId, object userState) {
            if ((this.getPatientsByClinicOperationCompleted == null)) {
                this.getPatientsByClinicOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPatientsByClinicOperationCompleted);
            }
            this.InvokeAsync("getPatientsByClinic", new object[] {
                        clinicId}, this.getPatientsByClinicOperationCompleted, userState);
        }
        
        private void OngetPatientsByClinicOperationCompleted(object arg) {
            if ((this.getPatientsByClinicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPatientsByClinicCompleted(this, new getPatientsByClinicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getSpecialties", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedText getSpecialties() {
            object[] results = this.Invoke("getSpecialties", new object[0]);
            return ((TaggedText)(results[0]));
        }
        
        /// <remarks/>
        public void getSpecialtiesAsync() {
            this.getSpecialtiesAsync(null);
        }
        
        /// <remarks/>
        public void getSpecialtiesAsync(object userState) {
            if ((this.getSpecialtiesOperationCompleted == null)) {
                this.getSpecialtiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSpecialtiesOperationCompleted);
            }
            this.InvokeAsync("getSpecialties", new object[0], this.getSpecialtiesOperationCompleted, userState);
        }
        
        private void OngetSpecialtiesOperationCompleted(object arg) {
            if ((this.getSpecialtiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSpecialtiesCompleted(this, new getSpecialtiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPatientsBySpecialty", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedPatientArray getPatientsBySpecialty(string specialtyId) {
            object[] results = this.Invoke("getPatientsBySpecialty", new object[] {
                        specialtyId});
            return ((TaggedPatientArray)(results[0]));
        }
        
        /// <remarks/>
        public void getPatientsBySpecialtyAsync(string specialtyId) {
            this.getPatientsBySpecialtyAsync(specialtyId, null);
        }
        
        /// <remarks/>
        public void getPatientsBySpecialtyAsync(string specialtyId, object userState) {
            if ((this.getPatientsBySpecialtyOperationCompleted == null)) {
                this.getPatientsBySpecialtyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPatientsBySpecialtyOperationCompleted);
            }
            this.InvokeAsync("getPatientsBySpecialty", new object[] {
                        specialtyId}, this.getPatientsBySpecialtyOperationCompleted, userState);
        }
        
        private void OngetPatientsBySpecialtyOperationCompleted(object arg) {
            if ((this.getPatientsBySpecialtyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPatientsBySpecialtyCompleted(this, new getPatientsBySpecialtyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getTeams", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedText getTeams() {
            object[] results = this.Invoke("getTeams", new object[0]);
            return ((TaggedText)(results[0]));
        }
        
        /// <remarks/>
        public void getTeamsAsync() {
            this.getTeamsAsync(null);
        }
        
        /// <remarks/>
        public void getTeamsAsync(object userState) {
            if ((this.getTeamsOperationCompleted == null)) {
                this.getTeamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTeamsOperationCompleted);
            }
            this.InvokeAsync("getTeams", new object[0], this.getTeamsOperationCompleted, userState);
        }
        
        private void OngetTeamsOperationCompleted(object arg) {
            if ((this.getTeamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTeamsCompleted(this, new getTeamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPatientsByTeam", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedPatientArray getPatientsByTeam(string teamId) {
            object[] results = this.Invoke("getPatientsByTeam", new object[] {
                        teamId});
            return ((TaggedPatientArray)(results[0]));
        }
        
        /// <remarks/>
        public void getPatientsByTeamAsync(string teamId) {
            this.getPatientsByTeamAsync(teamId, null);
        }
        
        /// <remarks/>
        public void getPatientsByTeamAsync(string teamId, object userState) {
            if ((this.getPatientsByTeamOperationCompleted == null)) {
                this.getPatientsByTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPatientsByTeamOperationCompleted);
            }
            this.InvokeAsync("getPatientsByTeam", new object[] {
                        teamId}, this.getPatientsByTeamOperationCompleted, userState);
        }
        
        private void OngetPatientsByTeamOperationCompleted(object arg) {
            if ((this.getPatientsByTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPatientsByTeamCompleted(this, new getPatientsByTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPatientsByProvider", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedPatientArray getPatientsByProvider(string duz) {
            object[] results = this.Invoke("getPatientsByProvider", new object[] {
                        duz});
            return ((TaggedPatientArray)(results[0]));
        }
        
        /// <remarks/>
        public void getPatientsByProviderAsync(string duz) {
            this.getPatientsByProviderAsync(duz, null);
        }
        
        /// <remarks/>
        public void getPatientsByProviderAsync(string duz, object userState) {
            if ((this.getPatientsByProviderOperationCompleted == null)) {
                this.getPatientsByProviderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPatientsByProviderOperationCompleted);
            }
            this.InvokeAsync("getPatientsByProvider", new object[] {
                        duz}, this.getPatientsByProviderOperationCompleted, userState);
        }
        
        private void OngetPatientsByProviderOperationCompleted(object arg) {
            if ((this.getPatientsByProviderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPatientsByProviderCompleted(this, new getPatientsByProviderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAdmissions", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedInpatientStayArray getAdmissions() {
            object[] results = this.Invoke("getAdmissions", new object[0]);
            return ((TaggedInpatientStayArray)(results[0]));
        }
        
        /// <remarks/>
        public void getAdmissionsAsync() {
            this.getAdmissionsAsync(null);
        }
        
        /// <remarks/>
        public void getAdmissionsAsync(object userState) {
            if ((this.getAdmissionsOperationCompleted == null)) {
                this.getAdmissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAdmissionsOperationCompleted);
            }
            this.InvokeAsync("getAdmissions", new object[0], this.getAdmissionsOperationCompleted, userState);
        }
        
        private void OngetAdmissionsOperationCompleted(object arg) {
            if ((this.getAdmissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAdmissionsCompleted(this, new getAdmissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getLocations", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedHospitalLocationArray getLocations(string target, string direction) {
            object[] results = this.Invoke("getLocations", new object[] {
                        target,
                        direction});
            return ((TaggedHospitalLocationArray)(results[0]));
        }
        
        /// <remarks/>
        public void getLocationsAsync(string target, string direction) {
            this.getLocationsAsync(target, direction, null);
        }
        
        /// <remarks/>
        public void getLocationsAsync(string target, string direction, object userState) {
            if ((this.getLocationsOperationCompleted == null)) {
                this.getLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLocationsOperationCompleted);
            }
            this.InvokeAsync("getLocations", new object[] {
                        target,
                        direction}, this.getLocationsOperationCompleted, userState);
        }
        
        private void OngetLocationsOperationCompleted(object arg) {
            if ((this.getLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLocationsCompleted(this, new getLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPrfNoteActions", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientRecordFlagArray getPrfNoteActions(string noteDefinitionIEN) {
            object[] results = this.Invoke("getPrfNoteActions", new object[] {
                        noteDefinitionIEN});
            return ((PatientRecordFlagArray)(results[0]));
        }
        
        /// <remarks/>
        public void getPrfNoteActionsAsync(string noteDefinitionIEN) {
            this.getPrfNoteActionsAsync(noteDefinitionIEN, null);
        }
        
        /// <remarks/>
        public void getPrfNoteActionsAsync(string noteDefinitionIEN, object userState) {
            if ((this.getPrfNoteActionsOperationCompleted == null)) {
                this.getPrfNoteActionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPrfNoteActionsOperationCompleted);
            }
            this.InvokeAsync("getPrfNoteActions", new object[] {
                        noteDefinitionIEN}, this.getPrfNoteActionsOperationCompleted, userState);
        }
        
        private void OngetPrfNoteActionsOperationCompleted(object arg) {
            if ((this.getPrfNoteActionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPrfNoteActionsCompleted(this, new getPrfNoteActionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getVisits", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedVisitArray getVisits(string fromDate, string toDate) {
            object[] results = this.Invoke("getVisits", new object[] {
                        fromDate,
                        toDate});
            return ((TaggedVisitArray)(results[0]));
        }
        
        /// <remarks/>
        public void getVisitsAsync(string fromDate, string toDate) {
            this.getVisitsAsync(fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void getVisitsAsync(string fromDate, string toDate, object userState) {
            if ((this.getVisitsOperationCompleted == null)) {
                this.getVisitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVisitsOperationCompleted);
            }
            this.InvokeAsync("getVisits", new object[] {
                        fromDate,
                        toDate}, this.getVisitsOperationCompleted, userState);
        }
        
        private void OngetVisitsOperationCompleted(object arg) {
            if ((this.getVisitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVisitsCompleted(this, new getVisitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/isConsultNote", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TextTO isConsultNote(string noteDefinitionIEN) {
            object[] results = this.Invoke("isConsultNote", new object[] {
                        noteDefinitionIEN});
            return ((TextTO)(results[0]));
        }
        
        /// <remarks/>
        public void isConsultNoteAsync(string noteDefinitionIEN) {
            this.isConsultNoteAsync(noteDefinitionIEN, null);
        }
        
        /// <remarks/>
        public void isConsultNoteAsync(string noteDefinitionIEN, object userState) {
            if ((this.isConsultNoteOperationCompleted == null)) {
                this.isConsultNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisConsultNoteOperationCompleted);
            }
            this.InvokeAsync("isConsultNote", new object[] {
                        noteDefinitionIEN}, this.isConsultNoteOperationCompleted, userState);
        }
        
        private void OnisConsultNoteOperationCompleted(object arg) {
            if ((this.isConsultNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isConsultNoteCompleted(this, new isConsultNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/isCosignerRequired", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TextTO isCosignerRequired(string noteDefinitionIEN, string authorDUZ) {
            object[] results = this.Invoke("isCosignerRequired", new object[] {
                        noteDefinitionIEN,
                        authorDUZ});
            return ((TextTO)(results[0]));
        }
        
        /// <remarks/>
        public void isCosignerRequiredAsync(string noteDefinitionIEN, string authorDUZ) {
            this.isCosignerRequiredAsync(noteDefinitionIEN, authorDUZ, null);
        }
        
        /// <remarks/>
        public void isCosignerRequiredAsync(string noteDefinitionIEN, string authorDUZ, object userState) {
            if ((this.isCosignerRequiredOperationCompleted == null)) {
                this.isCosignerRequiredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisCosignerRequiredOperationCompleted);
            }
            this.InvokeAsync("isCosignerRequired", new object[] {
                        noteDefinitionIEN,
                        authorDUZ}, this.isCosignerRequiredOperationCompleted, userState);
        }
        
        private void OnisCosignerRequiredOperationCompleted(object arg) {
            if ((this.isCosignerRequiredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isCosignerRequiredCompleted(this, new isCosignerRequiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/isOneVisitNote", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedText isOneVisitNote(string noteDefinitionIEN, string noteTitle, string visitString) {
            object[] results = this.Invoke("isOneVisitNote", new object[] {
                        noteDefinitionIEN,
                        noteTitle,
                        visitString});
            return ((TaggedText)(results[0]));
        }
        
        /// <remarks/>
        public void isOneVisitNoteAsync(string noteDefinitionIEN, string noteTitle, string visitString) {
            this.isOneVisitNoteAsync(noteDefinitionIEN, noteTitle, visitString, null);
        }
        
        /// <remarks/>
        public void isOneVisitNoteAsync(string noteDefinitionIEN, string noteTitle, string visitString, object userState) {
            if ((this.isOneVisitNoteOperationCompleted == null)) {
                this.isOneVisitNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisOneVisitNoteOperationCompleted);
            }
            this.InvokeAsync("isOneVisitNote", new object[] {
                        noteDefinitionIEN,
                        noteTitle,
                        visitString}, this.isOneVisitNoteOperationCompleted, userState);
        }
        
        private void OnisOneVisitNoteOperationCompleted(object arg) {
            if ((this.isOneVisitNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isOneVisitNoteCompleted(this, new isOneVisitNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/isPrfNote", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TextTO isPrfNote(string noteDefinitionIEN) {
            object[] results = this.Invoke("isPrfNote", new object[] {
                        noteDefinitionIEN});
            return ((TextTO)(results[0]));
        }
        
        /// <remarks/>
        public void isPrfNoteAsync(string noteDefinitionIEN) {
            this.isPrfNoteAsync(noteDefinitionIEN, null);
        }
        
        /// <remarks/>
        public void isPrfNoteAsync(string noteDefinitionIEN, object userState) {
            if ((this.isPrfNoteOperationCompleted == null)) {
                this.isPrfNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisPrfNoteOperationCompleted);
            }
            this.InvokeAsync("isPrfNote", new object[] {
                        noteDefinitionIEN}, this.isPrfNoteOperationCompleted, userState);
        }
        
        private void OnisPrfNoteOperationCompleted(object arg) {
            if ((this.isPrfNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isPrfNoteCompleted(this, new isPrfNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/isSurgeryNote", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedText isSurgeryNote(string noteDefinitionIEN) {
            object[] results = this.Invoke("isSurgeryNote", new object[] {
                        noteDefinitionIEN});
            return ((TaggedText)(results[0]));
        }
        
        /// <remarks/>
        public void isSurgeryNoteAsync(string noteDefinitionIEN) {
            this.isSurgeryNoteAsync(noteDefinitionIEN, null);
        }
        
        /// <remarks/>
        public void isSurgeryNoteAsync(string noteDefinitionIEN, object userState) {
            if ((this.isSurgeryNoteOperationCompleted == null)) {
                this.isSurgeryNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisSurgeryNoteOperationCompleted);
            }
            this.InvokeAsync("isSurgeryNote", new object[] {
                        noteDefinitionIEN}, this.isSurgeryNoteOperationCompleted, userState);
        }
        
        private void OnisSurgeryNoteOperationCompleted(object arg) {
            if ((this.isSurgeryNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isSurgeryNoteCompleted(this, new isSurgeryNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/writeNote", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NoteResultTO writeNote(string titleIEN, string encounterString, string text, string authorDUZ, string cosignerDUZ, string consultIEN, string prfIEN) {
            object[] results = this.Invoke("writeNote", new object[] {
                        titleIEN,
                        encounterString,
                        text,
                        authorDUZ,
                        cosignerDUZ,
                        consultIEN,
                        prfIEN});
            return ((NoteResultTO)(results[0]));
        }
        
        /// <remarks/>
        public void writeNoteAsync(string titleIEN, string encounterString, string text, string authorDUZ, string cosignerDUZ, string consultIEN, string prfIEN) {
            this.writeNoteAsync(titleIEN, encounterString, text, authorDUZ, cosignerDUZ, consultIEN, prfIEN, null);
        }
        
        /// <remarks/>
        public void writeNoteAsync(string titleIEN, string encounterString, string text, string authorDUZ, string cosignerDUZ, string consultIEN, string prfIEN, object userState) {
            if ((this.writeNoteOperationCompleted == null)) {
                this.writeNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwriteNoteOperationCompleted);
            }
            this.InvokeAsync("writeNote", new object[] {
                        titleIEN,
                        encounterString,
                        text,
                        authorDUZ,
                        cosignerDUZ,
                        consultIEN,
                        prfIEN}, this.writeNoteOperationCompleted, userState);
        }
        
        private void OnwriteNoteOperationCompleted(object arg) {
            if ((this.writeNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.writeNoteCompleted(this, new writeNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/signNote", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TextTO signNote(string noteIEN, string userDUZ, string esig) {
            object[] results = this.Invoke("signNote", new object[] {
                        noteIEN,
                        userDUZ,
                        esig});
            return ((TextTO)(results[0]));
        }
        
        /// <remarks/>
        public void signNoteAsync(string noteIEN, string userDUZ, string esig) {
            this.signNoteAsync(noteIEN, userDUZ, esig, null);
        }
        
        /// <remarks/>
        public void signNoteAsync(string noteIEN, string userDUZ, string esig, object userState) {
            if ((this.signNoteOperationCompleted == null)) {
                this.signNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsignNoteOperationCompleted);
            }
            this.InvokeAsync("signNote", new object[] {
                        noteIEN,
                        userDUZ,
                        esig}, this.signNoteOperationCompleted, userState);
        }
        
        private void OnsignNoteOperationCompleted(object arg) {
            if ((this.signNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.signNoteCompleted(this, new signNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/closeNote", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TextTO closeNote(string noteIEN, string consultIEN) {
            object[] results = this.Invoke("closeNote", new object[] {
                        noteIEN,
                        consultIEN});
            return ((TextTO)(results[0]));
        }
        
        /// <remarks/>
        public void closeNoteAsync(string noteIEN, string consultIEN) {
            this.closeNoteAsync(noteIEN, consultIEN, null);
        }
        
        /// <remarks/>
        public void closeNoteAsync(string noteIEN, string consultIEN, object userState) {
            if ((this.closeNoteOperationCompleted == null)) {
                this.closeNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OncloseNoteOperationCompleted);
            }
            this.InvokeAsync("closeNote", new object[] {
                        noteIEN,
                        consultIEN}, this.closeNoteOperationCompleted, userState);
        }
        
        private void OncloseNoteOperationCompleted(object arg) {
            if ((this.closeNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.closeNoteCompleted(this, new closeNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getDemographics", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientTO getDemographics() {
            object[] results = this.Invoke("getDemographics", new object[0]);
            return ((PatientTO)(results[0]));
        }
        
        /// <remarks/>
        public void getDemographicsAsync() {
            this.getDemographicsAsync(null);
        }
        
        /// <remarks/>
        public void getDemographicsAsync(object userState) {
            if ((this.getDemographicsOperationCompleted == null)) {
                this.getDemographicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDemographicsOperationCompleted);
            }
            this.InvokeAsync("getDemographics", new object[0], this.getDemographicsOperationCompleted, userState);
        }
        
        private void OngetDemographicsOperationCompleted(object arg) {
            if ((this.getDemographicsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDemographicsCompleted(this, new getDemographicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/mpiLookup", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientArray mpiLookup(string SSN) {
            object[] results = this.Invoke("mpiLookup", new object[] {
                        SSN});
            return ((PatientArray)(results[0]));
        }
        
        /// <remarks/>
        public void mpiLookupAsync(string SSN) {
            this.mpiLookupAsync(SSN, null);
        }
        
        /// <remarks/>
        public void mpiLookupAsync(string SSN, object userState) {
            if ((this.mpiLookupOperationCompleted == null)) {
                this.mpiLookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmpiLookupOperationCompleted);
            }
            this.InvokeAsync("mpiLookup", new object[] {
                        SSN}, this.mpiLookupOperationCompleted, userState);
        }
        
        private void OnmpiLookupOperationCompleted(object arg) {
            if ((this.mpiLookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mpiLookupCompleted(this, new mpiLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/nptLookup", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientArray nptLookup(string SSN) {
            object[] results = this.Invoke("nptLookup", new object[] {
                        SSN});
            return ((PatientArray)(results[0]));
        }
        
        /// <remarks/>
        public void nptLookupAsync(string SSN) {
            this.nptLookupAsync(SSN, null);
        }
        
        /// <remarks/>
        public void nptLookupAsync(string SSN, object userState) {
            if ((this.nptLookupOperationCompleted == null)) {
                this.nptLookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnptLookupOperationCompleted);
            }
            this.InvokeAsync("nptLookup", new object[] {
                        SSN}, this.nptLookupOperationCompleted, userState);
        }
        
        private void OnnptLookupOperationCompleted(object arg) {
            if ((this.nptLookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.nptLookupCompleted(this, new nptLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAllOrders", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedOrderArrays getAllOrders() {
            object[] results = this.Invoke("getAllOrders", new object[0]);
            return ((TaggedOrderArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getAllOrdersAsync() {
            this.getAllOrdersAsync(null);
        }
        
        /// <remarks/>
        public void getAllOrdersAsync(object userState) {
            if ((this.getAllOrdersOperationCompleted == null)) {
                this.getAllOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllOrdersOperationCompleted);
            }
            this.InvokeAsync("getAllOrders", new object[0], this.getAllOrdersOperationCompleted, userState);
        }
        
        private void OngetAllOrdersOperationCompleted(object arg) {
            if ((this.getAllOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllOrdersCompleted(this, new getAllOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getReminderReportTemplates", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TextArray getReminderReportTemplates() {
            object[] results = this.Invoke("getReminderReportTemplates", new object[0]);
            return ((TextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getReminderReportTemplatesAsync() {
            this.getReminderReportTemplatesAsync(null);
        }
        
        /// <remarks/>
        public void getReminderReportTemplatesAsync(object userState) {
            if ((this.getReminderReportTemplatesOperationCompleted == null)) {
                this.getReminderReportTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReminderReportTemplatesOperationCompleted);
            }
            this.InvokeAsync("getReminderReportTemplates", new object[0], this.getReminderReportTemplatesOperationCompleted, userState);
        }
        
        private void OngetReminderReportTemplatesOperationCompleted(object arg) {
            if ((this.getReminderReportTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReminderReportTemplatesCompleted(this, new getReminderReportTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getActiveReminderReports", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getActiveReminderReports() {
            object[] results = this.Invoke("getActiveReminderReports", new object[0]);
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getActiveReminderReportsAsync() {
            this.getActiveReminderReportsAsync(null);
        }
        
        /// <remarks/>
        public void getActiveReminderReportsAsync(object userState) {
            if ((this.getActiveReminderReportsOperationCompleted == null)) {
                this.getActiveReminderReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActiveReminderReportsOperationCompleted);
            }
            this.InvokeAsync("getActiveReminderReports", new object[0], this.getActiveReminderReportsOperationCompleted, userState);
        }
        
        private void OngetActiveReminderReportsOperationCompleted(object arg) {
            if ((this.getActiveReminderReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActiveReminderReportsCompleted(this, new getActiveReminderReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPatientListForReminderReport", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReminderReportPatientListTO getPatientListForReminderReport(string rptId) {
            object[] results = this.Invoke("getPatientListForReminderReport", new object[] {
                        rptId});
            return ((ReminderReportPatientListTO)(results[0]));
        }
        
        /// <remarks/>
        public void getPatientListForReminderReportAsync(string rptId) {
            this.getPatientListForReminderReportAsync(rptId, null);
        }
        
        /// <remarks/>
        public void getPatientListForReminderReportAsync(string rptId, object userState) {
            if ((this.getPatientListForReminderReportOperationCompleted == null)) {
                this.getPatientListForReminderReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPatientListForReminderReportOperationCompleted);
            }
            this.InvokeAsync("getPatientListForReminderReport", new object[] {
                        rptId}, this.getPatientListForReminderReportOperationCompleted, userState);
        }
        
        private void OngetPatientListForReminderReportOperationCompleted(object arg) {
            if ((this.getPatientListForReminderReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPatientListForReminderReportCompleted(this, new getPatientListForReminderReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getPcpForPatient", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedText getPcpForPatient(string pid) {
            object[] results = this.Invoke("getPcpForPatient", new object[] {
                        pid});
            return ((TaggedText)(results[0]));
        }
        
        /// <remarks/>
        public void getPcpForPatientAsync(string pid) {
            this.getPcpForPatientAsync(pid, null);
        }
        
        /// <remarks/>
        public void getPcpForPatientAsync(string pid, object userState) {
            if ((this.getPcpForPatientOperationCompleted == null)) {
                this.getPcpForPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPcpForPatientOperationCompleted);
            }
            this.InvokeAsync("getPcpForPatient", new object[] {
                        pid}, this.getPcpForPatientOperationCompleted, userState);
        }
        
        private void OngetPcpForPatientOperationCompleted(object arg) {
            if ((this.getPcpForPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPcpForPatientCompleted(this, new getPcpForPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getSitesForStation", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getSitesForStation() {
            object[] results = this.Invoke("getSitesForStation", new object[0]);
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getSitesForStationAsync() {
            this.getSitesForStationAsync(null);
        }
        
        /// <remarks/>
        public void getSitesForStationAsync(object userState) {
            if ((this.getSitesForStationOperationCompleted == null)) {
                this.getSitesForStationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSitesForStationOperationCompleted);
            }
            this.InvokeAsync("getSitesForStation", new object[0], this.getSitesForStationOperationCompleted, userState);
        }
        
        private void OngetSitesForStationOperationCompleted(object arg) {
            if ((this.getSitesForStationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSitesForStationCompleted(this, new getSitesForStationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getClinicsByName", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getClinicsByName(string name) {
            object[] results = this.Invoke("getClinicsByName", new object[] {
                        name});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getClinicsByNameAsync(string name) {
            this.getClinicsByNameAsync(name, null);
        }
        
        /// <remarks/>
        public void getClinicsByNameAsync(string name, object userState) {
            if ((this.getClinicsByNameOperationCompleted == null)) {
                this.getClinicsByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClinicsByNameOperationCompleted);
            }
            this.InvokeAsync("getClinicsByName", new object[] {
                        name}, this.getClinicsByNameOperationCompleted, userState);
        }
        
        private void OngetClinicsByNameOperationCompleted(object arg) {
            if ((this.getClinicsByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClinicsByNameCompleted(this, new getClinicsByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getOrderableItemsByName", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getOrderableItemsByName(string name) {
            object[] results = this.Invoke("getOrderableItemsByName", new object[] {
                        name});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getOrderableItemsByNameAsync(string name) {
            this.getOrderableItemsByNameAsync(name, null);
        }
        
        /// <remarks/>
        public void getOrderableItemsByNameAsync(string name, object userState) {
            if ((this.getOrderableItemsByNameOperationCompleted == null)) {
                this.getOrderableItemsByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOrderableItemsByNameOperationCompleted);
            }
            this.InvokeAsync("getOrderableItemsByName", new object[] {
                        name}, this.getOrderableItemsByNameOperationCompleted, userState);
        }
        
        private void OngetOrderableItemsByNameOperationCompleted(object arg) {
            if ((this.getOrderableItemsByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOrderableItemsByNameCompleted(this, new getOrderableItemsByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getOrderStatusForPatient", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TextTO getOrderStatusForPatient(string pid, string orderableItemId) {
            object[] results = this.Invoke("getOrderStatusForPatient", new object[] {
                        pid,
                        orderableItemId});
            return ((TextTO)(results[0]));
        }
        
        /// <remarks/>
        public void getOrderStatusForPatientAsync(string pid, string orderableItemId) {
            this.getOrderStatusForPatientAsync(pid, orderableItemId, null);
        }
        
        /// <remarks/>
        public void getOrderStatusForPatientAsync(string pid, string orderableItemId, object userState) {
            if ((this.getOrderStatusForPatientOperationCompleted == null)) {
                this.getOrderStatusForPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOrderStatusForPatientOperationCompleted);
            }
            this.InvokeAsync("getOrderStatusForPatient", new object[] {
                        pid,
                        orderableItemId}, this.getOrderStatusForPatientOperationCompleted, userState);
        }
        
        private void OngetOrderStatusForPatientOperationCompleted(object arg) {
            if ((this.getOrderStatusForPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOrderStatusForPatientCompleted(this, new getOrderStatusForPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getOrderDialogsForDisplayGroup", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getOrderDialogsForDisplayGroup(string displayGroupId) {
            object[] results = this.Invoke("getOrderDialogsForDisplayGroup", new object[] {
                        displayGroupId});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getOrderDialogsForDisplayGroupAsync(string displayGroupId) {
            this.getOrderDialogsForDisplayGroupAsync(displayGroupId, null);
        }
        
        /// <remarks/>
        public void getOrderDialogsForDisplayGroupAsync(string displayGroupId, object userState) {
            if ((this.getOrderDialogsForDisplayGroupOperationCompleted == null)) {
                this.getOrderDialogsForDisplayGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOrderDialogsForDisplayGroupOperationCompleted);
            }
            this.InvokeAsync("getOrderDialogsForDisplayGroup", new object[] {
                        displayGroupId}, this.getOrderDialogsForDisplayGroupOperationCompleted, userState);
        }
        
        private void OngetOrderDialogsForDisplayGroupOperationCompleted(object arg) {
            if ((this.getOrderDialogsForDisplayGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOrderDialogsForDisplayGroupCompleted(this, new getOrderDialogsForDisplayGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getOrderDialogItems", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderDialogItemArray getOrderDialogItems(string dialogId) {
            object[] results = this.Invoke("getOrderDialogItems", new object[] {
                        dialogId});
            return ((OrderDialogItemArray)(results[0]));
        }
        
        /// <remarks/>
        public void getOrderDialogItemsAsync(string dialogId) {
            this.getOrderDialogItemsAsync(dialogId, null);
        }
        
        /// <remarks/>
        public void getOrderDialogItemsAsync(string dialogId, object userState) {
            if ((this.getOrderDialogItemsOperationCompleted == null)) {
                this.getOrderDialogItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOrderDialogItemsOperationCompleted);
            }
            this.InvokeAsync("getOrderDialogItems", new object[] {
                        dialogId}, this.getOrderDialogItemsOperationCompleted, userState);
        }
        
        private void OngetOrderDialogItemsOperationCompleted(object arg) {
            if ((this.getOrderDialogItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOrderDialogItemsCompleted(this, new getOrderDialogItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getUsersWithOption", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getUsersWithOption(string optionName) {
            object[] results = this.Invoke("getUsersWithOption", new object[] {
                        optionName});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getUsersWithOptionAsync(string optionName) {
            this.getUsersWithOptionAsync(optionName, null);
        }
        
        /// <remarks/>
        public void getUsersWithOptionAsync(string optionName, object userState) {
            if ((this.getUsersWithOptionOperationCompleted == null)) {
                this.getUsersWithOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsersWithOptionOperationCompleted);
            }
            this.InvokeAsync("getUsersWithOption", new object[] {
                        optionName}, this.getUsersWithOptionOperationCompleted, userState);
        }
        
        private void OngetUsersWithOptionOperationCompleted(object arg) {
            if ((this.getUsersWithOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsersWithOptionCompleted(this, new getUsersWithOptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/userHasPermission", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BoolTO userHasPermission(string uid, string permissionName) {
            object[] results = this.Invoke("userHasPermission", new object[] {
                        uid,
                        permissionName});
            return ((BoolTO)(results[0]));
        }
        
        /// <remarks/>
        public void userHasPermissionAsync(string uid, string permissionName) {
            this.userHasPermissionAsync(uid, permissionName, null);
        }
        
        /// <remarks/>
        public void userHasPermissionAsync(string uid, string permissionName, object userState) {
            if ((this.userHasPermissionOperationCompleted == null)) {
                this.userHasPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserHasPermissionOperationCompleted);
            }
            this.InvokeAsync("userHasPermission", new object[] {
                        uid,
                        permissionName}, this.userHasPermissionOperationCompleted, userState);
        }
        
        private void OnuserHasPermissionOperationCompleted(object arg) {
            if ((this.userHasPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userHasPermissionCompleted(this, new userHasPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getUserSecurityKeys", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserSecurityKeyArray getUserSecurityKeys(string uid) {
            object[] results = this.Invoke("getUserSecurityKeys", new object[] {
                        uid});
            return ((UserSecurityKeyArray)(results[0]));
        }
        
        /// <remarks/>
        public void getUserSecurityKeysAsync(string uid) {
            this.getUserSecurityKeysAsync(uid, null);
        }
        
        /// <remarks/>
        public void getUserSecurityKeysAsync(string uid, object userState) {
            if ((this.getUserSecurityKeysOperationCompleted == null)) {
                this.getUserSecurityKeysOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserSecurityKeysOperationCompleted);
            }
            this.InvokeAsync("getUserSecurityKeys", new object[] {
                        uid}, this.getUserSecurityKeysOperationCompleted, userState);
        }
        
        private void OngetUserSecurityKeysOperationCompleted(object arg) {
            if ((this.getUserSecurityKeysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserSecurityKeysCompleted(this, new getUserSecurityKeysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getVariableValue", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TextTO getVariableValue(string arg) {
            object[] results = this.Invoke("getVariableValue", new object[] {
                        arg});
            return ((TextTO)(results[0]));
        }
        
        /// <remarks/>
        public void getVariableValueAsync(string arg) {
            this.getVariableValueAsync(arg, null);
        }
        
        /// <remarks/>
        public void getVariableValueAsync(string arg, object userState) {
            if ((this.getVariableValueOperationCompleted == null)) {
                this.getVariableValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVariableValueOperationCompleted);
            }
            this.InvokeAsync("getVariableValue", new object[] {
                        arg}, this.getVariableValueOperationCompleted, userState);
        }
        
        private void OngetVariableValueOperationCompleted(object arg) {
            if ((this.getVariableValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVariableValueCompleted(this, new getVariableValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getMentalHealthInstrumentsForPatient", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedMentalHealthInstrumentAdministrationArrays getMentalHealthInstrumentsForPatient() {
            object[] results = this.Invoke("getMentalHealthInstrumentsForPatient", new object[0]);
            return ((TaggedMentalHealthInstrumentAdministrationArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getMentalHealthInstrumentsForPatientAsync() {
            this.getMentalHealthInstrumentsForPatientAsync(null);
        }
        
        /// <remarks/>
        public void getMentalHealthInstrumentsForPatientAsync(object userState) {
            if ((this.getMentalHealthInstrumentsForPatientOperationCompleted == null)) {
                this.getMentalHealthInstrumentsForPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMentalHealthInstrumentsForPatientOperationCompleted);
            }
            this.InvokeAsync("getMentalHealthInstrumentsForPatient", new object[0], this.getMentalHealthInstrumentsForPatientOperationCompleted, userState);
        }
        
        private void OngetMentalHealthInstrumentsForPatientOperationCompleted(object arg) {
            if ((this.getMentalHealthInstrumentsForPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMentalHealthInstrumentsForPatientCompleted(this, new getMentalHealthInstrumentsForPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getMentalHealthInstrumentsForPatientBySurvey", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedMentalHealthInstrumentAdministrationArrays getMentalHealthInstrumentsForPatientBySurvey(string surveyName) {
            object[] results = this.Invoke("getMentalHealthInstrumentsForPatientBySurvey", new object[] {
                        surveyName});
            return ((TaggedMentalHealthInstrumentAdministrationArrays)(results[0]));
        }
        
        /// <remarks/>
        public void getMentalHealthInstrumentsForPatientBySurveyAsync(string surveyName) {
            this.getMentalHealthInstrumentsForPatientBySurveyAsync(surveyName, null);
        }
        
        /// <remarks/>
        public void getMentalHealthInstrumentsForPatientBySurveyAsync(string surveyName, object userState) {
            if ((this.getMentalHealthInstrumentsForPatientBySurveyOperationCompleted == null)) {
                this.getMentalHealthInstrumentsForPatientBySurveyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMentalHealthInstrumentsForPatientBySurveyOperationCompleted);
            }
            this.InvokeAsync("getMentalHealthInstrumentsForPatientBySurvey", new object[] {
                        surveyName}, this.getMentalHealthInstrumentsForPatientBySurveyOperationCompleted, userState);
        }
        
        private void OngetMentalHealthInstrumentsForPatientBySurveyOperationCompleted(object arg) {
            if ((this.getMentalHealthInstrumentsForPatientBySurveyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMentalHealthInstrumentsForPatientBySurveyCompleted(this, new getMentalHealthInstrumentsForPatientBySurveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getMentalHealthInstrumentResultSet", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MentalHealthInstrumentResultSetTO getMentalHealthInstrumentResultSet(string sitecode, string administrationId) {
            object[] results = this.Invoke("getMentalHealthInstrumentResultSet", new object[] {
                        sitecode,
                        administrationId});
            return ((MentalHealthInstrumentResultSetTO)(results[0]));
        }
        
        /// <remarks/>
        public void getMentalHealthInstrumentResultSetAsync(string sitecode, string administrationId) {
            this.getMentalHealthInstrumentResultSetAsync(sitecode, administrationId, null);
        }
        
        /// <remarks/>
        public void getMentalHealthInstrumentResultSetAsync(string sitecode, string administrationId, object userState) {
            if ((this.getMentalHealthInstrumentResultSetOperationCompleted == null)) {
                this.getMentalHealthInstrumentResultSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMentalHealthInstrumentResultSetOperationCompleted);
            }
            this.InvokeAsync("getMentalHealthInstrumentResultSet", new object[] {
                        sitecode,
                        administrationId}, this.getMentalHealthInstrumentResultSetOperationCompleted, userState);
        }
        
        private void OngetMentalHealthInstrumentResultSetOperationCompleted(object arg) {
            if ((this.getMentalHealthInstrumentResultSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMentalHealthInstrumentResultSetCompleted(this, new getMentalHealthInstrumentResultSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getMentalHealthInstrumentResultSetBySurvey", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedMentalHealthResultSetArray getMentalHealthInstrumentResultSetBySurvey(string siteCode, string surveyName) {
            object[] results = this.Invoke("getMentalHealthInstrumentResultSetBySurvey", new object[] {
                        siteCode,
                        surveyName});
            return ((TaggedMentalHealthResultSetArray)(results[0]));
        }
        
        /// <remarks/>
        public void getMentalHealthInstrumentResultSetBySurveyAsync(string siteCode, string surveyName) {
            this.getMentalHealthInstrumentResultSetBySurveyAsync(siteCode, surveyName, null);
        }
        
        /// <remarks/>
        public void getMentalHealthInstrumentResultSetBySurveyAsync(string siteCode, string surveyName, object userState) {
            if ((this.getMentalHealthInstrumentResultSetBySurveyOperationCompleted == null)) {
                this.getMentalHealthInstrumentResultSetBySurveyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMentalHealthInstrumentResultSetBySurveyOperationCompleted);
            }
            this.InvokeAsync("getMentalHealthInstrumentResultSetBySurvey", new object[] {
                        siteCode,
                        surveyName}, this.getMentalHealthInstrumentResultSetBySurveyOperationCompleted, userState);
        }
        
        private void OngetMentalHealthInstrumentResultSetBySurveyOperationCompleted(object arg) {
            if ((this.getMentalHealthInstrumentResultSetBySurveyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMentalHealthInstrumentResultSetBySurveyCompleted(this, new getMentalHealthInstrumentResultSetBySurveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getNhinData", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaggedTextArray getNhinData(string types) {
            object[] results = this.Invoke("getNhinData", new object[] {
                        types});
            return ((TaggedTextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getNhinDataAsync(string types) {
            this.getNhinDataAsync(types, null);
        }
        
        /// <remarks/>
        public void getNhinDataAsync(string types, object userState) {
            if ((this.getNhinDataOperationCompleted == null)) {
                this.getNhinDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNhinDataOperationCompleted);
            }
            this.InvokeAsync("getNhinData", new object[] {
                        types}, this.getNhinDataOperationCompleted, userState);
        }
        
        private void OngetNhinDataOperationCompleted(object arg) {
            if ((this.getNhinDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNhinDataCompleted(this, new getNhinDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getAllInstitutions", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiteArray getAllInstitutions() {
            object[] results = this.Invoke("getAllInstitutions", new object[0]);
            return ((SiteArray)(results[0]));
        }
        
        /// <remarks/>
        public void getAllInstitutionsAsync() {
            this.getAllInstitutionsAsync(null);
        }
        
        /// <remarks/>
        public void getAllInstitutionsAsync(object userState) {
            if ((this.getAllInstitutionsOperationCompleted == null)) {
                this.getAllInstitutionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllInstitutionsOperationCompleted);
            }
            this.InvokeAsync("getAllInstitutions", new object[0], this.getAllInstitutionsOperationCompleted, userState);
        }
        
        private void OngetAllInstitutionsOperationCompleted(object arg) {
            if ((this.getAllInstitutionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllInstitutionsCompleted(this, new getAllInstitutionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getVersion", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getVersion() {
            object[] results = this.Invoke("getVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVersionAsync() {
            this.getVersionAsync(null);
        }
        
        /// <remarks/>
        public void getVersionAsync(object userState) {
            if ((this.getVersionOperationCompleted == null)) {
                this.getVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVersionOperationCompleted);
            }
            this.InvokeAsync("getVersion", new object[0], this.getVersionOperationCompleted, userState);
        }
        
        private void OngetVersionOperationCompleted(object arg) {
            if ((this.getVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVersionCompleted(this, new getVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/addDataSource", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiteTO addDataSource(string id, string name, string datasource, string port, string modality, string protocol, string region) {
            object[] results = this.Invoke("addDataSource", new object[] {
                        id,
                        name,
                        datasource,
                        port,
                        modality,
                        protocol,
                        region});
            return ((SiteTO)(results[0]));
        }
        
        /// <remarks/>
        public void addDataSourceAsync(string id, string name, string datasource, string port, string modality, string protocol, string region) {
            this.addDataSourceAsync(id, name, datasource, port, modality, protocol, region, null);
        }
        
        /// <remarks/>
        public void addDataSourceAsync(string id, string name, string datasource, string port, string modality, string protocol, string region, object userState) {
            if ((this.addDataSourceOperationCompleted == null)) {
                this.addDataSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDataSourceOperationCompleted);
            }
            this.InvokeAsync("addDataSource", new object[] {
                        id,
                        name,
                        datasource,
                        port,
                        modality,
                        protocol,
                        region}, this.addDataSourceOperationCompleted, userState);
        }
        
        private void OnaddDataSourceOperationCompleted(object arg) {
            if ((this.addDataSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDataSourceCompleted(this, new addDataSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getFacadeVersion", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TextTO getFacadeVersion() {
            object[] results = this.Invoke("getFacadeVersion", new object[0]);
            return ((TextTO)(results[0]));
        }
        
        /// <remarks/>
        public void getFacadeVersionAsync() {
            this.getFacadeVersionAsync(null);
        }
        
        /// <remarks/>
        public void getFacadeVersionAsync(object userState) {
            if ((this.getFacadeVersionOperationCompleted == null)) {
                this.getFacadeVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFacadeVersionOperationCompleted);
            }
            this.InvokeAsync("getFacadeVersion", new object[0], this.getFacadeVersionOperationCompleted, userState);
        }
        
        private void OngetFacadeVersionOperationCompleted(object arg) {
            if ((this.getFacadeVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFacadeVersionCompleted(this, new getFacadeVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/setVha", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiteArray setVha(string sitesFileName) {
            object[] results = this.Invoke("setVha", new object[] {
                        sitesFileName});
            return ((SiteArray)(results[0]));
        }
        
        /// <remarks/>
        public void setVhaAsync(string sitesFileName) {
            this.setVhaAsync(sitesFileName, null);
        }
        
        /// <remarks/>
        public void setVhaAsync(string sitesFileName, object userState) {
            if ((this.setVhaOperationCompleted == null)) {
                this.setVhaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetVhaOperationCompleted);
            }
            this.InvokeAsync("setVha", new object[] {
                        sitesFileName}, this.setVhaOperationCompleted, userState);
        }
        
        private void OnsetVhaOperationCompleted(object arg) {
            if ((this.setVhaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setVhaCompleted(this, new setVhaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mdws.medora.va.gov/EmrSvc/getRpcs", RequestNamespace="http://mdws.medora.va.gov/EmrSvc", ResponseNamespace="http://mdws.medora.va.gov/EmrSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TextArray getRpcs() {
            object[] results = this.Invoke("getRpcs", new object[0]);
            return ((TextArray)(results[0]));
        }
        
        /// <remarks/>
        public void getRpcsAsync() {
            this.getRpcsAsync(null);
        }
        
        /// <remarks/>
        public void getRpcsAsync(object userState) {
            if ((this.getRpcsOperationCompleted == null)) {
                this.getRpcsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRpcsOperationCompleted);
            }
            this.InvokeAsync("getRpcs", new object[0], this.getRpcsOperationCompleted, userState);
        }
        
        private void OngetRpcsOperationCompleted(object arg) {
            if ((this.getRpcsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRpcsCompleted(this, new getRpcsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedTextArray : AbstractArrayTO {
        
        private TaggedText[] resultsField;
        
        /// <remarks/>
        public TaggedText[] results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedText : AbstractTO {
        
        private string tagField;
        
        private string textField;
        
        private string[] textArrayField;
        
        private TaggedText[] taggedResultsField;
        
        /// <remarks/>
        public string tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
        
        /// <remarks/>
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public string[] textArray {
            get {
                return this.textArrayField;
            }
            set {
                this.textArrayField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText[] taggedResults {
            get {
                return this.taggedResultsField;
            }
            set {
                this.taggedResultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BoolTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PatientListEntryTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ReminderReportPatientListTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NoteResultTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TextTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PersonsTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserSecurityKeyTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OrderDialogItemTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PatientRecordFlagTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RegionTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HealthSummaryTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MentalHealthInstrumentResultSetTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MentalHealthInstrumentAdministrationTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VisitTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdtTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DischargeDiagnosesTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InpatientStayTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IcdRpt))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SurgicalPathologyRpt))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MicrobiologyRpt))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CytologyRpt))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ChemHemRpt))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AppointmentTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OrderTypeTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OrderTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConsultTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MedicationTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NoteTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProblemTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SurgeryReportTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RadiologyReportTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SymptomTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AllergyTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VitalSignSetTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuthorTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ObservationTypeTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VitalSignTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TeamTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSourceTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SiteTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HospitalLocationTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PhoneNumTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddressTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PersonTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PatientTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PatientAssociateTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LabSpecimenTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LabResultTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LabTestTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DomainTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedText))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractArrayTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedMentalHealthInstrumentAdministrationArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserSecurityKeyArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OrderDialogItemArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TextArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedOrderArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PatientArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PatientRecordFlagArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedIcdRptArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedSurgicalPathologyRptArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedMicrobiologyRptArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedCytologyRptArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedChemHemRptArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedAppointmentArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedConsultArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedNoteArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedMedicationArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedProblemArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedSurgeryReportArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedRadiologyReportArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedAllergyArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedVitalSignSetArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedVitalSignArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedPatientArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RegionArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedHealthSummaryArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedPatientAssociateArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SiteArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSourceArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PersonArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LabTestArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractTaggedArrayTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedMentalHealthResultSetArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedMentalHealthInstrumentAdministrationArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedOrderArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedVisitArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedInpatientStayArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedHospitalLocationArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedIcdRptArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedSurgicalPathologyRptArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedMicrobiologyRptArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedCytologyRptArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedChemHemRptArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedAppointmentArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedConsultArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedMedicationArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedNoteArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedProblemArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedSurgeryReportArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedRadiologyReportArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedAllergyArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedVitalSignSetArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedVitalSignArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedPatientArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedPatientAssociateArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedLabTestArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedLabTestArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DomainArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedTextArray))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public abstract partial class AbstractTO {
        
        private FaultTO faultField;
        
        /// <remarks/>
        public FaultTO fault {
            get {
                return this.faultField;
            }
            set {
                this.faultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class FaultTO {
        
        private string typeField;
        
        private string messageField;
        
        private string stackTraceField;
        
        private string innerTypeField;
        
        private string innerMessageField;
        
        private string innerStackTraceField;
        
        private string suggestionField;
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string stackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        public string innerType {
            get {
                return this.innerTypeField;
            }
            set {
                this.innerTypeField = value;
            }
        }
        
        /// <remarks/>
        public string innerMessage {
            get {
                return this.innerMessageField;
            }
            set {
                this.innerMessageField = value;
            }
        }
        
        /// <remarks/>
        public string innerStackTrace {
            get {
                return this.innerStackTraceField;
            }
            set {
                this.innerStackTraceField = value;
            }
        }
        
        /// <remarks/>
        public string suggestion {
            get {
                return this.suggestionField;
            }
            set {
                this.suggestionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class DemographicSetTO {
        
        private string tagField;
        
        private AddressTO[] addressesField;
        
        private PhoneNumTO[] phonesField;
        
        private string[] emailAddressesField;
        
        private string[] namesField;
        
        /// <remarks/>
        public string tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
        
        /// <remarks/>
        public AddressTO[] addresses {
            get {
                return this.addressesField;
            }
            set {
                this.addressesField = value;
            }
        }
        
        /// <remarks/>
        public PhoneNumTO[] phones {
            get {
                return this.phonesField;
            }
            set {
                this.phonesField = value;
            }
        }
        
        /// <remarks/>
        public string[] emailAddresses {
            get {
                return this.emailAddressesField;
            }
            set {
                this.emailAddressesField = value;
            }
        }
        
        /// <remarks/>
        public string[] names {
            get {
                return this.namesField;
            }
            set {
                this.namesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class AddressTO : AbstractTO {
        
        private string typeField;
        
        private string streetAddress1Field;
        
        private string streetAddress2Field;
        
        private string streetAddress3Field;
        
        private string cityField;
        
        private string countyField;
        
        private string stateField;
        
        private string zipcodeField;
        
        private string countryField;
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string streetAddress1 {
            get {
                return this.streetAddress1Field;
            }
            set {
                this.streetAddress1Field = value;
            }
        }
        
        /// <remarks/>
        public string streetAddress2 {
            get {
                return this.streetAddress2Field;
            }
            set {
                this.streetAddress2Field = value;
            }
        }
        
        /// <remarks/>
        public string streetAddress3 {
            get {
                return this.streetAddress3Field;
            }
            set {
                this.streetAddress3Field = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string county {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string zipcode {
            get {
                return this.zipcodeField;
            }
            set {
                this.zipcodeField = value;
            }
        }
        
        /// <remarks/>
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class PhoneNumTO : AbstractTO {
        
        private string typeField;
        
        private string areaCodeField;
        
        private string exchangeField;
        
        private string numberField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string areaCode {
            get {
                return this.areaCodeField;
            }
            set {
                this.areaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string exchange {
            get {
                return this.exchangeField;
            }
            set {
                this.exchangeField = value;
            }
        }
        
        /// <remarks/>
        public string number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class BoolTO : AbstractTO {
        
        private bool trueOrFalseField;
        
        /// <remarks/>
        public bool trueOrFalse {
            get {
                return this.trueOrFalseField;
            }
            set {
                this.trueOrFalseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class PatientListEntryTO : AbstractTO {
        
        private int listIdField;
        
        private string patientNameField;
        
        private string patientIdField;
        
        private string ssnField;
        
        /// <remarks/>
        public int listId {
            get {
                return this.listIdField;
            }
            set {
                this.listIdField = value;
            }
        }
        
        /// <remarks/>
        public string patientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string patientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public string ssn {
            get {
                return this.ssnField;
            }
            set {
                this.ssnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class ReminderReportPatientListTO : AbstractTO {
        
        private string reportIdField;
        
        private string reportNameField;
        
        private string reportTimestampField;
        
        private PatientListEntryTO[] patientsField;
        
        /// <remarks/>
        public string reportId {
            get {
                return this.reportIdField;
            }
            set {
                this.reportIdField = value;
            }
        }
        
        /// <remarks/>
        public string reportName {
            get {
                return this.reportNameField;
            }
            set {
                this.reportNameField = value;
            }
        }
        
        /// <remarks/>
        public string reportTimestamp {
            get {
                return this.reportTimestampField;
            }
            set {
                this.reportTimestampField = value;
            }
        }
        
        /// <remarks/>
        public PatientListEntryTO[] patients {
            get {
                return this.patientsField;
            }
            set {
                this.patientsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class NoteResultTO : AbstractTO {
        
        private string idField;
        
        private int totalPagesField;
        
        private int lastPageRecdField;
        
        private string explanationField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int totalPages {
            get {
                return this.totalPagesField;
            }
            set {
                this.totalPagesField = value;
            }
        }
        
        /// <remarks/>
        public int lastPageRecd {
            get {
                return this.lastPageRecdField;
            }
            set {
                this.lastPageRecdField = value;
            }
        }
        
        /// <remarks/>
        public string explanation {
            get {
                return this.explanationField;
            }
            set {
                this.explanationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TextTO : AbstractTO {
        
        private string textField;
        
        /// <remarks/>
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class PersonsTO : AbstractTO {
        
        private UserTO userField;
        
        private PatientTO patientField;
        
        /// <remarks/>
        public UserTO user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public PatientTO patient {
            get {
                return this.patientField;
            }
            set {
                this.patientField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class UserTO : AbstractTO {
        
        private string nameField;
        
        private string sSNField;
        
        private string dUZField;
        
        private string siteIdField;
        
        private string officeField;
        
        private string phoneField;
        
        private string pagerField;
        
        private string serviceField;
        
        private string titleField;
        
        private string orderRoleField;
        
        private string userClassField;
        
        private string greetingField;
        
        private string siteMessageField;
        
        private TaggedTextArray idsField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string SSN {
            get {
                return this.sSNField;
            }
            set {
                this.sSNField = value;
            }
        }
        
        /// <remarks/>
        public string DUZ {
            get {
                return this.dUZField;
            }
            set {
                this.dUZField = value;
            }
        }
        
        /// <remarks/>
        public string siteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
        
        /// <remarks/>
        public string office {
            get {
                return this.officeField;
            }
            set {
                this.officeField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string pager {
            get {
                return this.pagerField;
            }
            set {
                this.pagerField = value;
            }
        }
        
        /// <remarks/>
        public string service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string orderRole {
            get {
                return this.orderRoleField;
            }
            set {
                this.orderRoleField = value;
            }
        }
        
        /// <remarks/>
        public string userClass {
            get {
                return this.userClassField;
            }
            set {
                this.userClassField = value;
            }
        }
        
        /// <remarks/>
        public string greeting {
            get {
                return this.greetingField;
            }
            set {
                this.greetingField = value;
            }
        }
        
        /// <remarks/>
        public string siteMessage {
            get {
                return this.siteMessageField;
            }
            set {
                this.siteMessageField = value;
            }
        }
        
        /// <remarks/>
        public TaggedTextArray ids {
            get {
                return this.idsField;
            }
            set {
                this.idsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class PatientTO : PersonTO {
        
        private string occupationField;
        
        private string employmentStatusField;
        
        private string employerNameField;
        
        private PersonArray relationshipsField;
        
        private string patientNameField;
        
        private string mpiPidField;
        
        private string mpiChecksumField;
        
        private string localPidField;
        
        private TaggedTextArray sitePidsField;
        
        private string vendorPidField;
        
        private HospitalLocationTO locationField;
        
        private string cwadField;
        
        private bool restrictedField;
        
        private string admitTimestampField;
        
        private bool serviceConnectedField;
        
        private int scPercentField;
        
        private bool inpatientField;
        
        private string deceasedDateField;
        
        private TaggedText confidentialityField;
        
        private bool needsMeansTestField;
        
        private TaggedTextArray patientFlagsField;
        
        private string cmorSiteIdField;
        
        private string activeInsuranceField;
        
        private bool isTestPatientField;
        
        private string currentMeansStatusField;
        
        private bool hasInsuranceField;
        
        private TaggedText preferredFacilityField;
        
        private string patientTypeField;
        
        private bool isVeteranField;
        
        private bool isLocallyAssignedMpiPidField;
        
        private SiteArray sitesField;
        
        private TeamTO teamField;
        
        /// <remarks/>
        public string occupation {
            get {
                return this.occupationField;
            }
            set {
                this.occupationField = value;
            }
        }
        
        /// <remarks/>
        public string employmentStatus {
            get {
                return this.employmentStatusField;
            }
            set {
                this.employmentStatusField = value;
            }
        }
        
        /// <remarks/>
        public string employerName {
            get {
                return this.employerNameField;
            }
            set {
                this.employerNameField = value;
            }
        }
        
        /// <remarks/>
        public PersonArray relationships {
            get {
                return this.relationshipsField;
            }
            set {
                this.relationshipsField = value;
            }
        }
        
        /// <remarks/>
        public string patientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string mpiPid {
            get {
                return this.mpiPidField;
            }
            set {
                this.mpiPidField = value;
            }
        }
        
        /// <remarks/>
        public string mpiChecksum {
            get {
                return this.mpiChecksumField;
            }
            set {
                this.mpiChecksumField = value;
            }
        }
        
        /// <remarks/>
        public string localPid {
            get {
                return this.localPidField;
            }
            set {
                this.localPidField = value;
            }
        }
        
        /// <remarks/>
        public TaggedTextArray sitePids {
            get {
                return this.sitePidsField;
            }
            set {
                this.sitePidsField = value;
            }
        }
        
        /// <remarks/>
        public string vendorPid {
            get {
                return this.vendorPidField;
            }
            set {
                this.vendorPidField = value;
            }
        }
        
        /// <remarks/>
        public HospitalLocationTO location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string cwad {
            get {
                return this.cwadField;
            }
            set {
                this.cwadField = value;
            }
        }
        
        /// <remarks/>
        public bool restricted {
            get {
                return this.restrictedField;
            }
            set {
                this.restrictedField = value;
            }
        }
        
        /// <remarks/>
        public string admitTimestamp {
            get {
                return this.admitTimestampField;
            }
            set {
                this.admitTimestampField = value;
            }
        }
        
        /// <remarks/>
        public bool serviceConnected {
            get {
                return this.serviceConnectedField;
            }
            set {
                this.serviceConnectedField = value;
            }
        }
        
        /// <remarks/>
        public int scPercent {
            get {
                return this.scPercentField;
            }
            set {
                this.scPercentField = value;
            }
        }
        
        /// <remarks/>
        public bool inpatient {
            get {
                return this.inpatientField;
            }
            set {
                this.inpatientField = value;
            }
        }
        
        /// <remarks/>
        public string deceasedDate {
            get {
                return this.deceasedDateField;
            }
            set {
                this.deceasedDateField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText confidentiality {
            get {
                return this.confidentialityField;
            }
            set {
                this.confidentialityField = value;
            }
        }
        
        /// <remarks/>
        public bool needsMeansTest {
            get {
                return this.needsMeansTestField;
            }
            set {
                this.needsMeansTestField = value;
            }
        }
        
        /// <remarks/>
        public TaggedTextArray patientFlags {
            get {
                return this.patientFlagsField;
            }
            set {
                this.patientFlagsField = value;
            }
        }
        
        /// <remarks/>
        public string cmorSiteId {
            get {
                return this.cmorSiteIdField;
            }
            set {
                this.cmorSiteIdField = value;
            }
        }
        
        /// <remarks/>
        public string activeInsurance {
            get {
                return this.activeInsuranceField;
            }
            set {
                this.activeInsuranceField = value;
            }
        }
        
        /// <remarks/>
        public bool isTestPatient {
            get {
                return this.isTestPatientField;
            }
            set {
                this.isTestPatientField = value;
            }
        }
        
        /// <remarks/>
        public string currentMeansStatus {
            get {
                return this.currentMeansStatusField;
            }
            set {
                this.currentMeansStatusField = value;
            }
        }
        
        /// <remarks/>
        public bool hasInsurance {
            get {
                return this.hasInsuranceField;
            }
            set {
                this.hasInsuranceField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText preferredFacility {
            get {
                return this.preferredFacilityField;
            }
            set {
                this.preferredFacilityField = value;
            }
        }
        
        /// <remarks/>
        public string patientType {
            get {
                return this.patientTypeField;
            }
            set {
                this.patientTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool isVeteran {
            get {
                return this.isVeteranField;
            }
            set {
                this.isVeteranField = value;
            }
        }
        
        /// <remarks/>
        public bool isLocallyAssignedMpiPid {
            get {
                return this.isLocallyAssignedMpiPidField;
            }
            set {
                this.isLocallyAssignedMpiPidField = value;
            }
        }
        
        /// <remarks/>
        public SiteArray sites {
            get {
                return this.sitesField;
            }
            set {
                this.sitesField = value;
            }
        }
        
        /// <remarks/>
        public TeamTO team {
            get {
                return this.teamField;
            }
            set {
                this.teamField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class PersonArray : AbstractArrayTO {
        
        private PersonTO[] personsField;
        
        /// <remarks/>
        public PersonTO[] persons {
            get {
                return this.personsField;
            }
            set {
                this.personsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PatientTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PatientAssociateTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class PersonTO : AbstractTO {
        
        private string typeField;
        
        private string birthPlaceField;
        
        private string religionField;
        
        private string nameField;
        
        private string ssnField;
        
        private string genderField;
        
        private string dobField;
        
        private string ethnicityField;
        
        private int ageField;
        
        private string maritalStatusField;
        
        private AddressTO homeAddressField;
        
        private PhoneNumTO homePhoneField;
        
        private PhoneNumTO cellPhoneField;
        
        private DemographicSetTO[] demographicsField;
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string birthPlace {
            get {
                return this.birthPlaceField;
            }
            set {
                this.birthPlaceField = value;
            }
        }
        
        /// <remarks/>
        public string religion {
            get {
                return this.religionField;
            }
            set {
                this.religionField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ssn {
            get {
                return this.ssnField;
            }
            set {
                this.ssnField = value;
            }
        }
        
        /// <remarks/>
        public string gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public string dob {
            get {
                return this.dobField;
            }
            set {
                this.dobField = value;
            }
        }
        
        /// <remarks/>
        public string ethnicity {
            get {
                return this.ethnicityField;
            }
            set {
                this.ethnicityField = value;
            }
        }
        
        /// <remarks/>
        public int age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
            }
        }
        
        /// <remarks/>
        public string maritalStatus {
            get {
                return this.maritalStatusField;
            }
            set {
                this.maritalStatusField = value;
            }
        }
        
        /// <remarks/>
        public AddressTO homeAddress {
            get {
                return this.homeAddressField;
            }
            set {
                this.homeAddressField = value;
            }
        }
        
        /// <remarks/>
        public PhoneNumTO homePhone {
            get {
                return this.homePhoneField;
            }
            set {
                this.homePhoneField = value;
            }
        }
        
        /// <remarks/>
        public PhoneNumTO cellPhone {
            get {
                return this.cellPhoneField;
            }
            set {
                this.cellPhoneField = value;
            }
        }
        
        /// <remarks/>
        public DemographicSetTO[] demographics {
            get {
                return this.demographicsField;
            }
            set {
                this.demographicsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class PatientAssociateTO : PersonTO {
        
        private string associationField;
        
        private string relationshipToPatientField;
        
        private string facilityNameField;
        
        /// <remarks/>
        public string association {
            get {
                return this.associationField;
            }
            set {
                this.associationField = value;
            }
        }
        
        /// <remarks/>
        public string relationshipToPatient {
            get {
                return this.relationshipToPatientField;
            }
            set {
                this.relationshipToPatientField = value;
            }
        }
        
        /// <remarks/>
        public string facilityName {
            get {
                return this.facilityNameField;
            }
            set {
                this.facilityNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedMentalHealthInstrumentAdministrationArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserSecurityKeyArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OrderDialogItemArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TextArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedOrderArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PatientArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PatientRecordFlagArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedIcdRptArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedSurgicalPathologyRptArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedMicrobiologyRptArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedCytologyRptArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedChemHemRptArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedAppointmentArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedConsultArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedNoteArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedMedicationArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedProblemArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedSurgeryReportArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedRadiologyReportArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedAllergyArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedVitalSignSetArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedVitalSignArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedPatientArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RegionArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedHealthSummaryArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedPatientAssociateArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SiteArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSourceArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PersonArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LabTestArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractTaggedArrayTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedMentalHealthResultSetArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedMentalHealthInstrumentAdministrationArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedOrderArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedVisitArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedInpatientStayArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedHospitalLocationArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedIcdRptArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedSurgicalPathologyRptArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedMicrobiologyRptArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedCytologyRptArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedChemHemRptArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedAppointmentArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedConsultArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedMedicationArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedNoteArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedProblemArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedSurgeryReportArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedRadiologyReportArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedAllergyArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedVitalSignSetArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedVitalSignArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedPatientArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedPatientAssociateArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedLabTestArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedLabTestArrays))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DomainArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedTextArray))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class AbstractArrayTO : AbstractTO {
        
        private int countField;
        
        /// <remarks/>
        public int count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedMentalHealthInstrumentAdministrationArrays : AbstractArrayTO {
        
        private TaggedMentalHealthInstrumentAdministrationArray[] arraysField;
        
        /// <remarks/>
        public TaggedMentalHealthInstrumentAdministrationArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedMentalHealthInstrumentAdministrationArray : AbstractTaggedArrayTO {
        
        private MentalHealthInstrumentAdministrationTO[] itemsField;
        
        /// <remarks/>
        public MentalHealthInstrumentAdministrationTO[] items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class MentalHealthInstrumentAdministrationTO : AbstractTO {
        
        private string idField;
        
        private TaggedText patientField;
        
        private TaggedText instrumentField;
        
        private string dateAdministeredField;
        
        private string dateSavedField;
        
        private TaggedText orderedByField;
        
        private TaggedText administeredByField;
        
        private bool isSignedField;
        
        private bool isCompleteField;
        
        private string numberOfQuestionsAnsweredField;
        
        private string transmitStatusField;
        
        private string transmitTimeField;
        
        private TaggedText hospitalLocationField;
        
        private MentalHealthInstrumentResultSetTO resultsField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText patient {
            get {
                return this.patientField;
            }
            set {
                this.patientField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText instrument {
            get {
                return this.instrumentField;
            }
            set {
                this.instrumentField = value;
            }
        }
        
        /// <remarks/>
        public string dateAdministered {
            get {
                return this.dateAdministeredField;
            }
            set {
                this.dateAdministeredField = value;
            }
        }
        
        /// <remarks/>
        public string dateSaved {
            get {
                return this.dateSavedField;
            }
            set {
                this.dateSavedField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText orderedBy {
            get {
                return this.orderedByField;
            }
            set {
                this.orderedByField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText administeredBy {
            get {
                return this.administeredByField;
            }
            set {
                this.administeredByField = value;
            }
        }
        
        /// <remarks/>
        public bool isSigned {
            get {
                return this.isSignedField;
            }
            set {
                this.isSignedField = value;
            }
        }
        
        /// <remarks/>
        public bool isComplete {
            get {
                return this.isCompleteField;
            }
            set {
                this.isCompleteField = value;
            }
        }
        
        /// <remarks/>
        public string numberOfQuestionsAnswered {
            get {
                return this.numberOfQuestionsAnsweredField;
            }
            set {
                this.numberOfQuestionsAnsweredField = value;
            }
        }
        
        /// <remarks/>
        public string transmitStatus {
            get {
                return this.transmitStatusField;
            }
            set {
                this.transmitStatusField = value;
            }
        }
        
        /// <remarks/>
        public string transmitTime {
            get {
                return this.transmitTimeField;
            }
            set {
                this.transmitTimeField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText hospitalLocation {
            get {
                return this.hospitalLocationField;
            }
            set {
                this.hospitalLocationField = value;
            }
        }
        
        /// <remarks/>
        public MentalHealthInstrumentResultSetTO results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class MentalHealthInstrumentResultSetTO : AbstractTO {
        
        private string idField;
        
        private string administrationIdField;
        
        private TaggedText scaleField;
        
        private string rawScoreField;
        
        private TaggedTextArray transformedScoresField;
        
        private TaggedText instrumentField;
        
        private string surveyGivenDateTimeField;
        
        private string surveySavedDateTimeField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string administrationId {
            get {
                return this.administrationIdField;
            }
            set {
                this.administrationIdField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText scale {
            get {
                return this.scaleField;
            }
            set {
                this.scaleField = value;
            }
        }
        
        /// <remarks/>
        public string rawScore {
            get {
                return this.rawScoreField;
            }
            set {
                this.rawScoreField = value;
            }
        }
        
        /// <remarks/>
        public TaggedTextArray transformedScores {
            get {
                return this.transformedScoresField;
            }
            set {
                this.transformedScoresField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText instrument {
            get {
                return this.instrumentField;
            }
            set {
                this.instrumentField = value;
            }
        }
        
        /// <remarks/>
        public string surveyGivenDateTime {
            get {
                return this.surveyGivenDateTimeField;
            }
            set {
                this.surveyGivenDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string surveySavedDateTime {
            get {
                return this.surveySavedDateTimeField;
            }
            set {
                this.surveySavedDateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedMentalHealthResultSetArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedMentalHealthInstrumentAdministrationArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedOrderArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedVisitArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedInpatientStayArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedHospitalLocationArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedIcdRptArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedSurgicalPathologyRptArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedMicrobiologyRptArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedCytologyRptArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedChemHemRptArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedAppointmentArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedConsultArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedMedicationArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedNoteArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedProblemArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedSurgeryReportArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedRadiologyReportArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedAllergyArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedVitalSignSetArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedVitalSignArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedPatientArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedPatientAssociateArray))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaggedLabTestArray))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class AbstractTaggedArrayTO : AbstractArrayTO {
        
        private string tagField;
        
        /// <remarks/>
        public string tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedMentalHealthResultSetArray : AbstractTaggedArrayTO {
        
        private MentalHealthInstrumentResultSetTO[] itemsField;
        
        /// <remarks/>
        public MentalHealthInstrumentResultSetTO[] items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedOrderArray : AbstractTaggedArrayTO {
        
        private OrderTO[] itemsField;
        
        /// <remarks/>
        public OrderTO[] items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConsultTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class OrderTO : AbstractTO {
        
        private string idField;
        
        private string timestampField;
        
        private string orderingServiceNameField;
        
        private string treatingSpecialtyField;
        
        private string startDateField;
        
        private string stopDateField;
        
        private string statusField;
        
        private string sigStatusField;
        
        private string dateSignedField;
        
        private string verifyingNurseField;
        
        private string dateVerifiedField;
        
        private string verifyingClerkField;
        
        private string chartReviewerField;
        
        private string dateReviewedField;
        
        private UserTO providerField;
        
        private string textField;
        
        private string detailField;
        
        private string errMsgField;
        
        private bool flagField;
        
        private OrderTypeTO typeField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string orderingServiceName {
            get {
                return this.orderingServiceNameField;
            }
            set {
                this.orderingServiceNameField = value;
            }
        }
        
        /// <remarks/>
        public string treatingSpecialty {
            get {
                return this.treatingSpecialtyField;
            }
            set {
                this.treatingSpecialtyField = value;
            }
        }
        
        /// <remarks/>
        public string startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public string stopDate {
            get {
                return this.stopDateField;
            }
            set {
                this.stopDateField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string sigStatus {
            get {
                return this.sigStatusField;
            }
            set {
                this.sigStatusField = value;
            }
        }
        
        /// <remarks/>
        public string dateSigned {
            get {
                return this.dateSignedField;
            }
            set {
                this.dateSignedField = value;
            }
        }
        
        /// <remarks/>
        public string verifyingNurse {
            get {
                return this.verifyingNurseField;
            }
            set {
                this.verifyingNurseField = value;
            }
        }
        
        /// <remarks/>
        public string dateVerified {
            get {
                return this.dateVerifiedField;
            }
            set {
                this.dateVerifiedField = value;
            }
        }
        
        /// <remarks/>
        public string verifyingClerk {
            get {
                return this.verifyingClerkField;
            }
            set {
                this.verifyingClerkField = value;
            }
        }
        
        /// <remarks/>
        public string chartReviewer {
            get {
                return this.chartReviewerField;
            }
            set {
                this.chartReviewerField = value;
            }
        }
        
        /// <remarks/>
        public string dateReviewed {
            get {
                return this.dateReviewedField;
            }
            set {
                this.dateReviewedField = value;
            }
        }
        
        /// <remarks/>
        public UserTO provider {
            get {
                return this.providerField;
            }
            set {
                this.providerField = value;
            }
        }
        
        /// <remarks/>
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public string detail {
            get {
                return this.detailField;
            }
            set {
                this.detailField = value;
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                return this.errMsgField;
            }
            set {
                this.errMsgField = value;
            }
        }
        
        /// <remarks/>
        public bool flag {
            get {
                return this.flagField;
            }
            set {
                this.flagField = value;
            }
        }
        
        /// <remarks/>
        public OrderTypeTO type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class OrderTypeTO : AbstractTO {
        
        private string idField;
        
        private string name1Field;
        
        private string name2Field;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name1 {
            get {
                return this.name1Field;
            }
            set {
                this.name1Field = value;
            }
        }
        
        /// <remarks/>
        public string name2 {
            get {
                return this.name2Field;
            }
            set {
                this.name2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class ConsultTO : OrderTO {
        
        private TaggedText toServiceField;
        
        private string titleField;
        
        /// <remarks/>
        public TaggedText toService {
            get {
                return this.toServiceField;
            }
            set {
                this.toServiceField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedVisitArray : AbstractTaggedArrayTO {
        
        private VisitTO[] visitsField;
        
        /// <remarks/>
        public VisitTO[] visits {
            get {
                return this.visitsField;
            }
            set {
                this.visitsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class VisitTO : AbstractTO {
        
        private string idField;
        
        private string typeField;
        
        private PatientTO patientField;
        
        private UserTO attendingField;
        
        private UserTO providerField;
        
        private string serviceField;
        
        private HospitalLocationTO locationField;
        
        private string patientTypeField;
        
        private string visitIdField;
        
        private string timestampField;
        
        private string statusField;
        
        private SiteTO facilityField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public PatientTO patient {
            get {
                return this.patientField;
            }
            set {
                this.patientField = value;
            }
        }
        
        /// <remarks/>
        public UserTO attending {
            get {
                return this.attendingField;
            }
            set {
                this.attendingField = value;
            }
        }
        
        /// <remarks/>
        public UserTO provider {
            get {
                return this.providerField;
            }
            set {
                this.providerField = value;
            }
        }
        
        /// <remarks/>
        public string service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
            }
        }
        
        /// <remarks/>
        public HospitalLocationTO location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string patientType {
            get {
                return this.patientTypeField;
            }
            set {
                this.patientTypeField = value;
            }
        }
        
        /// <remarks/>
        public string visitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public SiteTO facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class HospitalLocationTO : AbstractTO {
        
        private string idField;
        
        private string nameField;
        
        private TaggedText departmentField;
        
        private TaggedText serviceField;
        
        private TaggedText specialtyField;
        
        private SiteTO facilityField;
        
        private string buildingField;
        
        private string floorField;
        
        private string roomField;
        
        private string bedField;
        
        private string statusField;
        
        private string phoneField;
        
        private string appointmentTimestampField;
        
        private string typeField;
        
        private string physicalLocationField;
        
        private bool askForCheckInField;
        
        private string appointmentLengthField;
        
        private string clinicDisplayStartTimeField;
        
        private string displayIncrementsField;
        
        private string availabilityField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText specialty {
            get {
                return this.specialtyField;
            }
            set {
                this.specialtyField = value;
            }
        }
        
        /// <remarks/>
        public SiteTO facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public string building {
            get {
                return this.buildingField;
            }
            set {
                this.buildingField = value;
            }
        }
        
        /// <remarks/>
        public string floor {
            get {
                return this.floorField;
            }
            set {
                this.floorField = value;
            }
        }
        
        /// <remarks/>
        public string room {
            get {
                return this.roomField;
            }
            set {
                this.roomField = value;
            }
        }
        
        /// <remarks/>
        public string bed {
            get {
                return this.bedField;
            }
            set {
                this.bedField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string appointmentTimestamp {
            get {
                return this.appointmentTimestampField;
            }
            set {
                this.appointmentTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string physicalLocation {
            get {
                return this.physicalLocationField;
            }
            set {
                this.physicalLocationField = value;
            }
        }
        
        /// <remarks/>
        public bool askForCheckIn {
            get {
                return this.askForCheckInField;
            }
            set {
                this.askForCheckInField = value;
            }
        }
        
        /// <remarks/>
        public string appointmentLength {
            get {
                return this.appointmentLengthField;
            }
            set {
                this.appointmentLengthField = value;
            }
        }
        
        /// <remarks/>
        public string clinicDisplayStartTime {
            get {
                return this.clinicDisplayStartTimeField;
            }
            set {
                this.clinicDisplayStartTimeField = value;
            }
        }
        
        /// <remarks/>
        public string displayIncrements {
            get {
                return this.displayIncrementsField;
            }
            set {
                this.displayIncrementsField = value;
            }
        }
        
        /// <remarks/>
        public string availability {
            get {
                return this.availabilityField;
            }
            set {
                this.availabilityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class SiteTO : AbstractTO {
        
        private string sitecodeField;
        
        private string nameField;
        
        private string displayNameField;
        
        private string monikerField;
        
        private string regionIDField;
        
        private string lastEventTimestampField;
        
        private string lastEventReasonField;
        
        private string uidField;
        
        private string pidField;
        
        private DataSourceArray dataSourcesField;
        
        private string parentSiteIdField;
        
        private SiteArray childSitesField;
        
        private string addressField;
        
        private string cityField;
        
        private string stateField;
        
        private string systemNameField;
        
        private string siteTypeField;
        
        /// <remarks/>
        public string sitecode {
            get {
                return this.sitecodeField;
            }
            set {
                this.sitecodeField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string moniker {
            get {
                return this.monikerField;
            }
            set {
                this.monikerField = value;
            }
        }
        
        /// <remarks/>
        public string regionID {
            get {
                return this.regionIDField;
            }
            set {
                this.regionIDField = value;
            }
        }
        
        /// <remarks/>
        public string lastEventTimestamp {
            get {
                return this.lastEventTimestampField;
            }
            set {
                this.lastEventTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string lastEventReason {
            get {
                return this.lastEventReasonField;
            }
            set {
                this.lastEventReasonField = value;
            }
        }
        
        /// <remarks/>
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
        
        /// <remarks/>
        public string pid {
            get {
                return this.pidField;
            }
            set {
                this.pidField = value;
            }
        }
        
        /// <remarks/>
        public DataSourceArray dataSources {
            get {
                return this.dataSourcesField;
            }
            set {
                this.dataSourcesField = value;
            }
        }
        
        /// <remarks/>
        public string parentSiteId {
            get {
                return this.parentSiteIdField;
            }
            set {
                this.parentSiteIdField = value;
            }
        }
        
        /// <remarks/>
        public SiteArray childSites {
            get {
                return this.childSitesField;
            }
            set {
                this.childSitesField = value;
            }
        }
        
        /// <remarks/>
        public string address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string systemName {
            get {
                return this.systemNameField;
            }
            set {
                this.systemNameField = value;
            }
        }
        
        /// <remarks/>
        public string siteType {
            get {
                return this.siteTypeField;
            }
            set {
                this.siteTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class DataSourceArray : AbstractArrayTO {
        
        private DataSourceTO[] itemsField;
        
        /// <remarks/>
        public DataSourceTO[] items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class DataSourceTO : AbstractTO {
        
        private string protocolField;
        
        private string modalityField;
        
        private int timeoutField;
        
        private int portField;
        
        private string providerField;
        
        private string statusField;
        
        private string descriptionField;
        
        private string contextField;
        
        private bool testSourceField;
        
        private string vendorField;
        
        private string versionField;
        
        private TaggedText siteIdField;
        
        private string welcomeMessageField;
        
        /// <remarks/>
        public string protocol {
            get {
                return this.protocolField;
            }
            set {
                this.protocolField = value;
            }
        }
        
        /// <remarks/>
        public string modality {
            get {
                return this.modalityField;
            }
            set {
                this.modalityField = value;
            }
        }
        
        /// <remarks/>
        public int timeout {
            get {
                return this.timeoutField;
            }
            set {
                this.timeoutField = value;
            }
        }
        
        /// <remarks/>
        public int port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        public string provider {
            get {
                return this.providerField;
            }
            set {
                this.providerField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
            }
        }
        
        /// <remarks/>
        public bool testSource {
            get {
                return this.testSourceField;
            }
            set {
                this.testSourceField = value;
            }
        }
        
        /// <remarks/>
        public string vendor {
            get {
                return this.vendorField;
            }
            set {
                this.vendorField = value;
            }
        }
        
        /// <remarks/>
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText siteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
        
        /// <remarks/>
        public string welcomeMessage {
            get {
                return this.welcomeMessageField;
            }
            set {
                this.welcomeMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class SiteArray : AbstractArrayTO {
        
        private SiteTO[] sitesField;
        
        /// <remarks/>
        public SiteTO[] sites {
            get {
                return this.sitesField;
            }
            set {
                this.sitesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedInpatientStayArray : AbstractTaggedArrayTO {
        
        private InpatientStayTO[] staysField;
        
        /// <remarks/>
        public InpatientStayTO[] stays {
            get {
                return this.staysField;
            }
            set {
                this.staysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class InpatientStayTO : AbstractTO {
        
        private PatientTO patientField;
        
        private HospitalLocationTO locationField;
        
        private string admitTimestampField;
        
        private string dischargeTimestampField;
        
        private DischargeDiagnosesTO dischargeDiagnosesField;
        
        private string typeField;
        
        private AdtTO[] adtsField;
        
        private string movementCheckinIdField;
        
        /// <remarks/>
        public PatientTO patient {
            get {
                return this.patientField;
            }
            set {
                this.patientField = value;
            }
        }
        
        /// <remarks/>
        public HospitalLocationTO location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string admitTimestamp {
            get {
                return this.admitTimestampField;
            }
            set {
                this.admitTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string dischargeTimestamp {
            get {
                return this.dischargeTimestampField;
            }
            set {
                this.dischargeTimestampField = value;
            }
        }
        
        /// <remarks/>
        public DischargeDiagnosesTO dischargeDiagnoses {
            get {
                return this.dischargeDiagnosesField;
            }
            set {
                this.dischargeDiagnosesField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public AdtTO[] adts {
            get {
                return this.adtsField;
            }
            set {
                this.adtsField = value;
            }
        }
        
        /// <remarks/>
        public string movementCheckinId {
            get {
                return this.movementCheckinIdField;
            }
            set {
                this.movementCheckinIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class DischargeDiagnosesTO : AbstractTO {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class AdtTO : AbstractTO {
        
        private string idField;
        
        private PatientTO patientField;
        
        private string checkInIdField;
        
        private string checkOutIdField;
        
        private string relatedPhysicalMovementIdField;
        
        private string transactionField;
        
        private string movementTypeField;
        
        private string timestampField;
        
        private string diagnosisField;
        
        private HospitalLocationTO assignedLocationField;
        
        private UserTO providerField;
        
        private UserTO attendingField;
        
        private string transferFacilityField;
        
        private TaggedText specialtyField;
        
        private string patientTxIdField;
        
        private string visitIdField;
        
        private string patientMovementNumberField;
        
        private string nextPatientMovementField;
        
        private UserTO enteredByField;
        
        private string lengthOfStayField;
        
        private string passDaysField;
        
        private string daysAbsentField;
        
        private TaggedText asihAdmissionField;
        
        private string asihTransferField;
        
        private string asihSequenceField;
        
        private string asihDaysField;
        
        private string absenceReturnDateField;
        
        private bool admittedForScConditionField;
        
        private bool scheduledAdmissionField;
        
        private string admissionSourceField;
        
        private string admittingCategoryField;
        
        private TaggedText admittingRegulationField;
        
        private TaggedText admittingEligibilityField;
        
        private TaggedText masMovementTypeField;
        
        private string lodgingReasonField;
        
        private string lodgingCommentsField;
        
        private string dispositionField;
        
        private string eligibilityField;
        
        private string preAdmitIdField;
        
        private UserTO referringField;
        
        private UserTO consultingField;
        
        private UserTO admittingField;
        
        private TaggedText serviceField;
        
        private HospitalLocationTO priorLocationField;
        
        private HospitalLocationTO temporaryLocationField;
        
        private HospitalLocationTO pendingLocationField;
        
        private string patientTypeField;
        
        private string admitTimestampField;
        
        private string dischargeTimestampField;
        
        private string admitReasonField;
        
        private string transferReasonField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public PatientTO patient {
            get {
                return this.patientField;
            }
            set {
                this.patientField = value;
            }
        }
        
        /// <remarks/>
        public string checkInId {
            get {
                return this.checkInIdField;
            }
            set {
                this.checkInIdField = value;
            }
        }
        
        /// <remarks/>
        public string checkOutId {
            get {
                return this.checkOutIdField;
            }
            set {
                this.checkOutIdField = value;
            }
        }
        
        /// <remarks/>
        public string relatedPhysicalMovementId {
            get {
                return this.relatedPhysicalMovementIdField;
            }
            set {
                this.relatedPhysicalMovementIdField = value;
            }
        }
        
        /// <remarks/>
        public string transaction {
            get {
                return this.transactionField;
            }
            set {
                this.transactionField = value;
            }
        }
        
        /// <remarks/>
        public string movementType {
            get {
                return this.movementTypeField;
            }
            set {
                this.movementTypeField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string diagnosis {
            get {
                return this.diagnosisField;
            }
            set {
                this.diagnosisField = value;
            }
        }
        
        /// <remarks/>
        public HospitalLocationTO assignedLocation {
            get {
                return this.assignedLocationField;
            }
            set {
                this.assignedLocationField = value;
            }
        }
        
        /// <remarks/>
        public UserTO provider {
            get {
                return this.providerField;
            }
            set {
                this.providerField = value;
            }
        }
        
        /// <remarks/>
        public UserTO attending {
            get {
                return this.attendingField;
            }
            set {
                this.attendingField = value;
            }
        }
        
        /// <remarks/>
        public string transferFacility {
            get {
                return this.transferFacilityField;
            }
            set {
                this.transferFacilityField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText specialty {
            get {
                return this.specialtyField;
            }
            set {
                this.specialtyField = value;
            }
        }
        
        /// <remarks/>
        public string patientTxId {
            get {
                return this.patientTxIdField;
            }
            set {
                this.patientTxIdField = value;
            }
        }
        
        /// <remarks/>
        public string visitId {
            get {
                return this.visitIdField;
            }
            set {
                this.visitIdField = value;
            }
        }
        
        /// <remarks/>
        public string patientMovementNumber {
            get {
                return this.patientMovementNumberField;
            }
            set {
                this.patientMovementNumberField = value;
            }
        }
        
        /// <remarks/>
        public string nextPatientMovement {
            get {
                return this.nextPatientMovementField;
            }
            set {
                this.nextPatientMovementField = value;
            }
        }
        
        /// <remarks/>
        public UserTO enteredBy {
            get {
                return this.enteredByField;
            }
            set {
                this.enteredByField = value;
            }
        }
        
        /// <remarks/>
        public string lengthOfStay {
            get {
                return this.lengthOfStayField;
            }
            set {
                this.lengthOfStayField = value;
            }
        }
        
        /// <remarks/>
        public string passDays {
            get {
                return this.passDaysField;
            }
            set {
                this.passDaysField = value;
            }
        }
        
        /// <remarks/>
        public string daysAbsent {
            get {
                return this.daysAbsentField;
            }
            set {
                this.daysAbsentField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText asihAdmission {
            get {
                return this.asihAdmissionField;
            }
            set {
                this.asihAdmissionField = value;
            }
        }
        
        /// <remarks/>
        public string asihTransfer {
            get {
                return this.asihTransferField;
            }
            set {
                this.asihTransferField = value;
            }
        }
        
        /// <remarks/>
        public string asihSequence {
            get {
                return this.asihSequenceField;
            }
            set {
                this.asihSequenceField = value;
            }
        }
        
        /// <remarks/>
        public string asihDays {
            get {
                return this.asihDaysField;
            }
            set {
                this.asihDaysField = value;
            }
        }
        
        /// <remarks/>
        public string absenceReturnDate {
            get {
                return this.absenceReturnDateField;
            }
            set {
                this.absenceReturnDateField = value;
            }
        }
        
        /// <remarks/>
        public bool admittedForScCondition {
            get {
                return this.admittedForScConditionField;
            }
            set {
                this.admittedForScConditionField = value;
            }
        }
        
        /// <remarks/>
        public bool scheduledAdmission {
            get {
                return this.scheduledAdmissionField;
            }
            set {
                this.scheduledAdmissionField = value;
            }
        }
        
        /// <remarks/>
        public string admissionSource {
            get {
                return this.admissionSourceField;
            }
            set {
                this.admissionSourceField = value;
            }
        }
        
        /// <remarks/>
        public string admittingCategory {
            get {
                return this.admittingCategoryField;
            }
            set {
                this.admittingCategoryField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText admittingRegulation {
            get {
                return this.admittingRegulationField;
            }
            set {
                this.admittingRegulationField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText admittingEligibility {
            get {
                return this.admittingEligibilityField;
            }
            set {
                this.admittingEligibilityField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText masMovementType {
            get {
                return this.masMovementTypeField;
            }
            set {
                this.masMovementTypeField = value;
            }
        }
        
        /// <remarks/>
        public string lodgingReason {
            get {
                return this.lodgingReasonField;
            }
            set {
                this.lodgingReasonField = value;
            }
        }
        
        /// <remarks/>
        public string lodgingComments {
            get {
                return this.lodgingCommentsField;
            }
            set {
                this.lodgingCommentsField = value;
            }
        }
        
        /// <remarks/>
        public string disposition {
            get {
                return this.dispositionField;
            }
            set {
                this.dispositionField = value;
            }
        }
        
        /// <remarks/>
        public string eligibility {
            get {
                return this.eligibilityField;
            }
            set {
                this.eligibilityField = value;
            }
        }
        
        /// <remarks/>
        public string preAdmitId {
            get {
                return this.preAdmitIdField;
            }
            set {
                this.preAdmitIdField = value;
            }
        }
        
        /// <remarks/>
        public UserTO referring {
            get {
                return this.referringField;
            }
            set {
                this.referringField = value;
            }
        }
        
        /// <remarks/>
        public UserTO consulting {
            get {
                return this.consultingField;
            }
            set {
                this.consultingField = value;
            }
        }
        
        /// <remarks/>
        public UserTO admitting {
            get {
                return this.admittingField;
            }
            set {
                this.admittingField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
            }
        }
        
        /// <remarks/>
        public HospitalLocationTO priorLocation {
            get {
                return this.priorLocationField;
            }
            set {
                this.priorLocationField = value;
            }
        }
        
        /// <remarks/>
        public HospitalLocationTO temporaryLocation {
            get {
                return this.temporaryLocationField;
            }
            set {
                this.temporaryLocationField = value;
            }
        }
        
        /// <remarks/>
        public HospitalLocationTO pendingLocation {
            get {
                return this.pendingLocationField;
            }
            set {
                this.pendingLocationField = value;
            }
        }
        
        /// <remarks/>
        public string patientType {
            get {
                return this.patientTypeField;
            }
            set {
                this.patientTypeField = value;
            }
        }
        
        /// <remarks/>
        public string admitTimestamp {
            get {
                return this.admitTimestampField;
            }
            set {
                this.admitTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string dischargeTimestamp {
            get {
                return this.dischargeTimestampField;
            }
            set {
                this.dischargeTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string admitReason {
            get {
                return this.admitReasonField;
            }
            set {
                this.admitReasonField = value;
            }
        }
        
        /// <remarks/>
        public string transferReason {
            get {
                return this.transferReasonField;
            }
            set {
                this.transferReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedHospitalLocationArray : AbstractTaggedArrayTO {
        
        private HospitalLocationTO[] locationsField;
        
        /// <remarks/>
        public HospitalLocationTO[] locations {
            get {
                return this.locationsField;
            }
            set {
                this.locationsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedIcdRptArray : AbstractTaggedArrayTO {
        
        private IcdRpt[] rptsField;
        
        /// <remarks/>
        public IcdRpt[] rpts {
            get {
                return this.rptsField;
            }
            set {
                this.rptsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class IcdRpt : AbstractTO {
        
        private string titleField;
        
        private string timestampField;
        
        private TaggedText facilityField;
        
        private string icdCodeField;
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public string icdCode {
            get {
                return this.icdCodeField;
            }
            set {
                this.icdCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedSurgicalPathologyRptArray : AbstractTaggedArrayTO {
        
        private SurgicalPathologyRpt[] rptsField;
        
        /// <remarks/>
        public SurgicalPathologyRpt[] rpts {
            get {
                return this.rptsField;
            }
            set {
                this.rptsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class SurgicalPathologyRpt : AbstractTO {
        
        private string idField;
        
        private string titleField;
        
        private string timestampField;
        
        private AuthorTO authorField;
        
        private TaggedText facilityField;
        
        private LabSpecimenTO specimenField;
        
        private string clinicalHxField;
        
        private string descriptionField;
        
        private string examField;
        
        private string diagnosisField;
        
        private string commentField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public AuthorTO author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public LabSpecimenTO specimen {
            get {
                return this.specimenField;
            }
            set {
                this.specimenField = value;
            }
        }
        
        /// <remarks/>
        public string clinicalHx {
            get {
                return this.clinicalHxField;
            }
            set {
                this.clinicalHxField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string exam {
            get {
                return this.examField;
            }
            set {
                this.examField = value;
            }
        }
        
        /// <remarks/>
        public string diagnosis {
            get {
                return this.diagnosisField;
            }
            set {
                this.diagnosisField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class AuthorTO : AbstractTO {
        
        private string idField;
        
        private string nameField;
        
        private string signatureField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string signature {
            get {
                return this.signatureField;
            }
            set {
                this.signatureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class LabSpecimenTO : AbstractTO {
        
        private string idField;
        
        private string nameField;
        
        private string collectionDateField;
        
        private string accessionNumField;
        
        private string siteField;
        
        private TaggedText facilityField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string collectionDate {
            get {
                return this.collectionDateField;
            }
            set {
                this.collectionDateField = value;
            }
        }
        
        /// <remarks/>
        public string accessionNum {
            get {
                return this.accessionNumField;
            }
            set {
                this.accessionNumField = value;
            }
        }
        
        /// <remarks/>
        public string site {
            get {
                return this.siteField;
            }
            set {
                this.siteField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedMicrobiologyRptArray : AbstractTaggedArrayTO {
        
        private MicrobiologyRpt[] rptsField;
        
        /// <remarks/>
        public MicrobiologyRpt[] rpts {
            get {
                return this.rptsField;
            }
            set {
                this.rptsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class MicrobiologyRpt : AbstractTO {
        
        private string idField;
        
        private string titleField;
        
        private string timestampField;
        
        private AuthorTO authorField;
        
        private TaggedText facilityField;
        
        private LabSpecimenTO specimenField;
        
        private string commentField;
        
        private string sampleField;
        
        private string textField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public AuthorTO author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public LabSpecimenTO specimen {
            get {
                return this.specimenField;
            }
            set {
                this.specimenField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string sample {
            get {
                return this.sampleField;
            }
            set {
                this.sampleField = value;
            }
        }
        
        /// <remarks/>
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedCytologyRptArray : AbstractTaggedArrayTO {
        
        private CytologyRpt[] rptsField;
        
        /// <remarks/>
        public CytologyRpt[] rpts {
            get {
                return this.rptsField;
            }
            set {
                this.rptsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class CytologyRpt : AbstractTO {
        
        private string idField;
        
        private string titleField;
        
        private string timestampField;
        
        private AuthorTO authorField;
        
        private TaggedText facilityField;
        
        private LabSpecimenTO specimenField;
        
        private string clinicalHxField;
        
        private string descriptionField;
        
        private string examField;
        
        private string diagnosisField;
        
        private string commentField;
        
        private string supplementalRptField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public AuthorTO author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public LabSpecimenTO specimen {
            get {
                return this.specimenField;
            }
            set {
                this.specimenField = value;
            }
        }
        
        /// <remarks/>
        public string clinicalHx {
            get {
                return this.clinicalHxField;
            }
            set {
                this.clinicalHxField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string exam {
            get {
                return this.examField;
            }
            set {
                this.examField = value;
            }
        }
        
        /// <remarks/>
        public string diagnosis {
            get {
                return this.diagnosisField;
            }
            set {
                this.diagnosisField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string supplementalRpt {
            get {
                return this.supplementalRptField;
            }
            set {
                this.supplementalRptField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedChemHemRptArray : AbstractTaggedArrayTO {
        
        private ChemHemRpt[] rptsField;
        
        /// <remarks/>
        public ChemHemRpt[] rpts {
            get {
                return this.rptsField;
            }
            set {
                this.rptsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class ChemHemRpt : AbstractTO {
        
        private string idField;
        
        private string titleField;
        
        private string timestampField;
        
        private AuthorTO authorField;
        
        private TaggedText facilityField;
        
        private LabSpecimenTO specimenField;
        
        private string commentField;
        
        private LabResultTO[] resultsField;
        
        private SiteTO[] labSitesField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public AuthorTO author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public LabSpecimenTO specimen {
            get {
                return this.specimenField;
            }
            set {
                this.specimenField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public LabResultTO[] results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
        
        /// <remarks/>
        public SiteTO[] labSites {
            get {
                return this.labSitesField;
            }
            set {
                this.labSitesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class LabResultTO : AbstractTO {
        
        private string timestampField;
        
        private LabTestTO testField;
        
        private string specimenTypeField;
        
        private string commentField;
        
        private string valueField;
        
        private string boundaryStatusField;
        
        private string labSiteIdField;
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public LabTestTO test {
            get {
                return this.testField;
            }
            set {
                this.testField = value;
            }
        }
        
        /// <remarks/>
        public string specimenType {
            get {
                return this.specimenTypeField;
            }
            set {
                this.specimenTypeField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string boundaryStatus {
            get {
                return this.boundaryStatusField;
            }
            set {
                this.boundaryStatusField = value;
            }
        }
        
        /// <remarks/>
        public string labSiteId {
            get {
                return this.labSiteIdField;
            }
            set {
                this.labSiteIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class LabTestTO : AbstractTO {
        
        private LabResultTO resultField;
        
        private LabSpecimenTO specimenField;
        
        private string idField;
        
        private string nameField;
        
        private string categoryField;
        
        private string unitsField;
        
        private string lowRefField;
        
        private string hiRefField;
        
        private string refRangeField;
        
        private string loincField;
        
        /// <remarks/>
        public LabResultTO result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public LabSpecimenTO specimen {
            get {
                return this.specimenField;
            }
            set {
                this.specimenField = value;
            }
        }
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public string units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        public string lowRef {
            get {
                return this.lowRefField;
            }
            set {
                this.lowRefField = value;
            }
        }
        
        /// <remarks/>
        public string hiRef {
            get {
                return this.hiRefField;
            }
            set {
                this.hiRefField = value;
            }
        }
        
        /// <remarks/>
        public string refRange {
            get {
                return this.refRangeField;
            }
            set {
                this.refRangeField = value;
            }
        }
        
        /// <remarks/>
        public string loinc {
            get {
                return this.loincField;
            }
            set {
                this.loincField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedAppointmentArray : AbstractTaggedArrayTO {
        
        private AppointmentTO[] apptsField;
        
        /// <remarks/>
        public AppointmentTO[] appts {
            get {
                return this.apptsField;
            }
            set {
                this.apptsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class AppointmentTO : AbstractTO {
        
        private string idField;
        
        private string timestampField;
        
        private string titleField;
        
        private string statusField;
        
        private string textField;
        
        private TaggedText facilityField;
        
        private HospitalLocationTO clinicField;
        
        private string labDateTimeField;
        
        private string xrayDateTimeField;
        
        private string ekgDateTimeField;
        
        private string purposeField;
        
        private string typeField;
        
        private string currentStatusField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public HospitalLocationTO clinic {
            get {
                return this.clinicField;
            }
            set {
                this.clinicField = value;
            }
        }
        
        /// <remarks/>
        public string labDateTime {
            get {
                return this.labDateTimeField;
            }
            set {
                this.labDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string xrayDateTime {
            get {
                return this.xrayDateTimeField;
            }
            set {
                this.xrayDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ekgDateTime {
            get {
                return this.ekgDateTimeField;
            }
            set {
                this.ekgDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string purpose {
            get {
                return this.purposeField;
            }
            set {
                this.purposeField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string currentStatus {
            get {
                return this.currentStatusField;
            }
            set {
                this.currentStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedConsultArray : AbstractTaggedArrayTO {
        
        private ConsultTO[] consultsField;
        
        /// <remarks/>
        public ConsultTO[] consults {
            get {
                return this.consultsField;
            }
            set {
                this.consultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedMedicationArray : AbstractTaggedArrayTO {
        
        private MedicationTO[] medsField;
        
        /// <remarks/>
        public MedicationTO[] meds {
            get {
                return this.medsField;
            }
            set {
                this.medsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class MedicationTO : AbstractTO {
        
        private string idField;
        
        private string nameField;
        
        private string rxNumField;
        
        private string quantityField;
        
        private string expirationDateField;
        
        private string issueDateField;
        
        private string startDateField;
        
        private string stopDateField;
        
        private string orderIdField;
        
        private string statusField;
        
        private string refillsField;
        
        private bool isOutpatientField;
        
        private bool isInpatientField;
        
        private bool isIVField;
        
        private bool isUnitDoseField;
        
        private bool isNonVAField;
        
        private bool isImoField;
        
        private string lastFillDateField;
        
        private string remainingField;
        
        private TaggedText facilityField;
        
        private AuthorTO providerField;
        
        private string costField;
        
        private string sigField;
        
        private string typeField;
        
        private string additivesField;
        
        private string solutionField;
        
        private string rateField;
        
        private string routeField;
        
        private string doseField;
        
        private string instructionField;
        
        private string commentField;
        
        private string dateDocumentedField;
        
        private AuthorTO documentorField;
        
        private string detailField;
        
        private string scheduleField;
        
        private string daysSupplyField;
        
        private TaggedText hospitalField;
        
        private TaggedText drugField;
        
        private bool isSupplyField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string rxNum {
            get {
                return this.rxNumField;
            }
            set {
                this.rxNumField = value;
            }
        }
        
        /// <remarks/>
        public string quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public string expirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        public string issueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
        /// <remarks/>
        public string startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public string stopDate {
            get {
                return this.stopDateField;
            }
            set {
                this.stopDateField = value;
            }
        }
        
        /// <remarks/>
        public string orderId {
            get {
                return this.orderIdField;
            }
            set {
                this.orderIdField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string refills {
            get {
                return this.refillsField;
            }
            set {
                this.refillsField = value;
            }
        }
        
        /// <remarks/>
        public bool isOutpatient {
            get {
                return this.isOutpatientField;
            }
            set {
                this.isOutpatientField = value;
            }
        }
        
        /// <remarks/>
        public bool isInpatient {
            get {
                return this.isInpatientField;
            }
            set {
                this.isInpatientField = value;
            }
        }
        
        /// <remarks/>
        public bool isIV {
            get {
                return this.isIVField;
            }
            set {
                this.isIVField = value;
            }
        }
        
        /// <remarks/>
        public bool isUnitDose {
            get {
                return this.isUnitDoseField;
            }
            set {
                this.isUnitDoseField = value;
            }
        }
        
        /// <remarks/>
        public bool isNonVA {
            get {
                return this.isNonVAField;
            }
            set {
                this.isNonVAField = value;
            }
        }
        
        /// <remarks/>
        public bool isImo {
            get {
                return this.isImoField;
            }
            set {
                this.isImoField = value;
            }
        }
        
        /// <remarks/>
        public string lastFillDate {
            get {
                return this.lastFillDateField;
            }
            set {
                this.lastFillDateField = value;
            }
        }
        
        /// <remarks/>
        public string remaining {
            get {
                return this.remainingField;
            }
            set {
                this.remainingField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public AuthorTO provider {
            get {
                return this.providerField;
            }
            set {
                this.providerField = value;
            }
        }
        
        /// <remarks/>
        public string cost {
            get {
                return this.costField;
            }
            set {
                this.costField = value;
            }
        }
        
        /// <remarks/>
        public string sig {
            get {
                return this.sigField;
            }
            set {
                this.sigField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string additives {
            get {
                return this.additivesField;
            }
            set {
                this.additivesField = value;
            }
        }
        
        /// <remarks/>
        public string solution {
            get {
                return this.solutionField;
            }
            set {
                this.solutionField = value;
            }
        }
        
        /// <remarks/>
        public string rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        public string route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string dose {
            get {
                return this.doseField;
            }
            set {
                this.doseField = value;
            }
        }
        
        /// <remarks/>
        public string instruction {
            get {
                return this.instructionField;
            }
            set {
                this.instructionField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string dateDocumented {
            get {
                return this.dateDocumentedField;
            }
            set {
                this.dateDocumentedField = value;
            }
        }
        
        /// <remarks/>
        public AuthorTO documentor {
            get {
                return this.documentorField;
            }
            set {
                this.documentorField = value;
            }
        }
        
        /// <remarks/>
        public string detail {
            get {
                return this.detailField;
            }
            set {
                this.detailField = value;
            }
        }
        
        /// <remarks/>
        public string schedule {
            get {
                return this.scheduleField;
            }
            set {
                this.scheduleField = value;
            }
        }
        
        /// <remarks/>
        public string daysSupply {
            get {
                return this.daysSupplyField;
            }
            set {
                this.daysSupplyField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText hospital {
            get {
                return this.hospitalField;
            }
            set {
                this.hospitalField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText drug {
            get {
                return this.drugField;
            }
            set {
                this.drugField = value;
            }
        }
        
        /// <remarks/>
        public bool isSupply {
            get {
                return this.isSupplyField;
            }
            set {
                this.isSupplyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedNoteArray : AbstractTaggedArrayTO {
        
        private NoteTO[] notesField;
        
        /// <remarks/>
        public NoteTO[] notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class NoteTO : AbstractTO {
        
        private string idField;
        
        private string timestampField;
        
        private string admitTimestampField;
        
        private string dischargeTimestampField;
        
        private string serviceCategoryField;
        
        private string localTitleField;
        
        private string standardTitleField;
        
        private AuthorTO authorField;
        
        private HospitalLocationTO locationField;
        
        private string textField;
        
        private bool hasAddendumField;
        
        private bool isAddendumField;
        
        private string originalNoteIDField;
        
        private bool hasImagesField;
        
        private string itemIdField;
        
        private AuthorTO approvedByField;
        
        private string statusField;
        
        private string typeField;
        
        private string signatureTimestampField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string admitTimestamp {
            get {
                return this.admitTimestampField;
            }
            set {
                this.admitTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string dischargeTimestamp {
            get {
                return this.dischargeTimestampField;
            }
            set {
                this.dischargeTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string serviceCategory {
            get {
                return this.serviceCategoryField;
            }
            set {
                this.serviceCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string localTitle {
            get {
                return this.localTitleField;
            }
            set {
                this.localTitleField = value;
            }
        }
        
        /// <remarks/>
        public string standardTitle {
            get {
                return this.standardTitleField;
            }
            set {
                this.standardTitleField = value;
            }
        }
        
        /// <remarks/>
        public AuthorTO author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public HospitalLocationTO location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public bool hasAddendum {
            get {
                return this.hasAddendumField;
            }
            set {
                this.hasAddendumField = value;
            }
        }
        
        /// <remarks/>
        public bool isAddendum {
            get {
                return this.isAddendumField;
            }
            set {
                this.isAddendumField = value;
            }
        }
        
        /// <remarks/>
        public string originalNoteID {
            get {
                return this.originalNoteIDField;
            }
            set {
                this.originalNoteIDField = value;
            }
        }
        
        /// <remarks/>
        public bool hasImages {
            get {
                return this.hasImagesField;
            }
            set {
                this.hasImagesField = value;
            }
        }
        
        /// <remarks/>
        public string itemId {
            get {
                return this.itemIdField;
            }
            set {
                this.itemIdField = value;
            }
        }
        
        /// <remarks/>
        public AuthorTO approvedBy {
            get {
                return this.approvedByField;
            }
            set {
                this.approvedByField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string signatureTimestamp {
            get {
                return this.signatureTimestampField;
            }
            set {
                this.signatureTimestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedProblemArray : AbstractTaggedArrayTO {
        
        private ProblemTO[] problemsField;
        
        /// <remarks/>
        public ProblemTO[] problems {
            get {
                return this.problemsField;
            }
            set {
                this.problemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class ProblemTO : AbstractTO {
        
        private bool removedField;
        
        private bool verifiedField;
        
        private TaggedNoteArray commentsField;
        
        private TaggedText acuityField;
        
        private string idField;
        
        private string statusField;
        
        private string providerNarrativeField;
        
        private string onsetDateField;
        
        private string modifiedDateField;
        
        private string resolvedDateField;
        
        private string exposuresField;
        
        private string noteNarrativeField;
        
        private string priorityField;
        
        private AuthorTO observerField;
        
        private TaggedText facilityField;
        
        private ObservationTypeTO typeField;
        
        private string commentField;
        
        private TaggedTextArray organizationalPropertiesField;
        
        private string timestampField;
        
        /// <remarks/>
        public bool removed {
            get {
                return this.removedField;
            }
            set {
                this.removedField = value;
            }
        }
        
        /// <remarks/>
        public bool verified {
            get {
                return this.verifiedField;
            }
            set {
                this.verifiedField = value;
            }
        }
        
        /// <remarks/>
        public TaggedNoteArray comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText acuity {
            get {
                return this.acuityField;
            }
            set {
                this.acuityField = value;
            }
        }
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string providerNarrative {
            get {
                return this.providerNarrativeField;
            }
            set {
                this.providerNarrativeField = value;
            }
        }
        
        /// <remarks/>
        public string onsetDate {
            get {
                return this.onsetDateField;
            }
            set {
                this.onsetDateField = value;
            }
        }
        
        /// <remarks/>
        public string modifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public string resolvedDate {
            get {
                return this.resolvedDateField;
            }
            set {
                this.resolvedDateField = value;
            }
        }
        
        /// <remarks/>
        public string exposures {
            get {
                return this.exposuresField;
            }
            set {
                this.exposuresField = value;
            }
        }
        
        /// <remarks/>
        public string noteNarrative {
            get {
                return this.noteNarrativeField;
            }
            set {
                this.noteNarrativeField = value;
            }
        }
        
        /// <remarks/>
        public string priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public AuthorTO observer {
            get {
                return this.observerField;
            }
            set {
                this.observerField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public ObservationTypeTO type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public TaggedTextArray organizationalProperties {
            get {
                return this.organizationalPropertiesField;
            }
            set {
                this.organizationalPropertiesField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class ObservationTypeTO : AbstractTO {
        
        private string idField;
        
        private string categoryField;
        
        private string nameField;
        
        private string shortNameField;
        
        private string dataIdField;
        
        private string dataNameField;
        
        private string dataTypeField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string shortName {
            get {
                return this.shortNameField;
            }
            set {
                this.shortNameField = value;
            }
        }
        
        /// <remarks/>
        public string dataId {
            get {
                return this.dataIdField;
            }
            set {
                this.dataIdField = value;
            }
        }
        
        /// <remarks/>
        public string dataName {
            get {
                return this.dataNameField;
            }
            set {
                this.dataNameField = value;
            }
        }
        
        /// <remarks/>
        public string dataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedSurgeryReportArray : AbstractTaggedArrayTO {
        
        private SurgeryReportTO[] rptsField;
        
        /// <remarks/>
        public SurgeryReportTO[] rpts {
            get {
                return this.rptsField;
            }
            set {
                this.rptsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class SurgeryReportTO : AbstractTO {
        
        private string idField;
        
        private string titleField;
        
        private string timestampField;
        
        private AuthorTO authorField;
        
        private string textField;
        
        private TaggedText facilityField;
        
        private string statusField;
        
        private TaggedText specialtyField;
        
        private string preOpDxField;
        
        private string postOpDxField;
        
        private string labWorkField;
        
        private string dictationTimestampField;
        
        private string transcriptionTimestampField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public AuthorTO author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText specialty {
            get {
                return this.specialtyField;
            }
            set {
                this.specialtyField = value;
            }
        }
        
        /// <remarks/>
        public string preOpDx {
            get {
                return this.preOpDxField;
            }
            set {
                this.preOpDxField = value;
            }
        }
        
        /// <remarks/>
        public string postOpDx {
            get {
                return this.postOpDxField;
            }
            set {
                this.postOpDxField = value;
            }
        }
        
        /// <remarks/>
        public string labWork {
            get {
                return this.labWorkField;
            }
            set {
                this.labWorkField = value;
            }
        }
        
        /// <remarks/>
        public string dictationTimestamp {
            get {
                return this.dictationTimestampField;
            }
            set {
                this.dictationTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string transcriptionTimestamp {
            get {
                return this.transcriptionTimestampField;
            }
            set {
                this.transcriptionTimestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedRadiologyReportArray : AbstractTaggedArrayTO {
        
        private RadiologyReportTO[] rptsField;
        
        /// <remarks/>
        public RadiologyReportTO[] rpts {
            get {
                return this.rptsField;
            }
            set {
                this.rptsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class RadiologyReportTO : AbstractTO {
        
        private string accessionNumberField;
        
        private string caseNumberField;
        
        private string idField;
        
        private string titleField;
        
        private string timestampField;
        
        private AuthorTO authorField;
        
        private string textField;
        
        private TaggedText facilityField;
        
        private string statusField;
        
        private string cptCodeField;
        
        private string clinicalHxField;
        
        private string impressionField;
        
        /// <remarks/>
        public string accessionNumber {
            get {
                return this.accessionNumberField;
            }
            set {
                this.accessionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string caseNumber {
            get {
                return this.caseNumberField;
            }
            set {
                this.caseNumberField = value;
            }
        }
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public AuthorTO author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string cptCode {
            get {
                return this.cptCodeField;
            }
            set {
                this.cptCodeField = value;
            }
        }
        
        /// <remarks/>
        public string clinicalHx {
            get {
                return this.clinicalHxField;
            }
            set {
                this.clinicalHxField = value;
            }
        }
        
        /// <remarks/>
        public string impression {
            get {
                return this.impressionField;
            }
            set {
                this.impressionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedAllergyArray : AbstractTaggedArrayTO {
        
        private AllergyTO[] allergiesField;
        
        /// <remarks/>
        public AllergyTO[] allergies {
            get {
                return this.allergiesField;
            }
            set {
                this.allergiesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class AllergyTO : AbstractTO {
        
        private string allergenIdField;
        
        private string allergenNameField;
        
        private string allergenTypeField;
        
        private string reactionField;
        
        private string severityField;
        
        private string commentField;
        
        private string timestampField;
        
        private TaggedText facilityField;
        
        private HospitalLocationTO locationField;
        
        private ObservationTypeTO typeField;
        
        private AuthorTO observerField;
        
        private AuthorTO recorderField;
        
        private SymptomTO[] reactionsField;
        
        private TaggedText[] drugIngredientsField;
        
        private TaggedText[] drugClassesField;
        
        /// <remarks/>
        public string allergenId {
            get {
                return this.allergenIdField;
            }
            set {
                this.allergenIdField = value;
            }
        }
        
        /// <remarks/>
        public string allergenName {
            get {
                return this.allergenNameField;
            }
            set {
                this.allergenNameField = value;
            }
        }
        
        /// <remarks/>
        public string allergenType {
            get {
                return this.allergenTypeField;
            }
            set {
                this.allergenTypeField = value;
            }
        }
        
        /// <remarks/>
        public string reaction {
            get {
                return this.reactionField;
            }
            set {
                this.reactionField = value;
            }
        }
        
        /// <remarks/>
        public string severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public HospitalLocationTO location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public ObservationTypeTO type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public AuthorTO observer {
            get {
                return this.observerField;
            }
            set {
                this.observerField = value;
            }
        }
        
        /// <remarks/>
        public AuthorTO recorder {
            get {
                return this.recorderField;
            }
            set {
                this.recorderField = value;
            }
        }
        
        /// <remarks/>
        public SymptomTO[] reactions {
            get {
                return this.reactionsField;
            }
            set {
                this.reactionsField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText[] drugIngredients {
            get {
                return this.drugIngredientsField;
            }
            set {
                this.drugIngredientsField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText[] drugClasses {
            get {
                return this.drugClassesField;
            }
            set {
                this.drugClassesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class SymptomTO : AbstractTO {
        
        private string idField;
        
        private string nameField;
        
        private bool isNationalField;
        
        private string vuidField;
        
        private ObservationTypeTO typeField;
        
        private AuthorTO observerField;
        
        private string timestampField;
        
        private TaggedText facilityField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool isNational {
            get {
                return this.isNationalField;
            }
            set {
                this.isNationalField = value;
            }
        }
        
        /// <remarks/>
        public string vuid {
            get {
                return this.vuidField;
            }
            set {
                this.vuidField = value;
            }
        }
        
        /// <remarks/>
        public ObservationTypeTO type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public AuthorTO observer {
            get {
                return this.observerField;
            }
            set {
                this.observerField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedVitalSignSetArray : AbstractTaggedArrayTO {
        
        private VitalSignSetTO[] setsField;
        
        /// <remarks/>
        public VitalSignSetTO[] sets {
            get {
                return this.setsField;
            }
            set {
                this.setsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class VitalSignSetTO : AbstractTO {
        
        private string timestampField;
        
        private TaggedText facilityField;
        
        private VitalSignTO[] vitalSignsField;
        
        private string unitsField;
        
        private string qualifiersField;
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public VitalSignTO[] vitalSigns {
            get {
                return this.vitalSignsField;
            }
            set {
                this.vitalSignsField = value;
            }
        }
        
        /// <remarks/>
        public string units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        public string qualifiers {
            get {
                return this.qualifiersField;
            }
            set {
                this.qualifiersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class VitalSignTO : AbstractTO {
        
        private string idField;
        
        private ObservationTypeTO typeField;
        
        private string value1Field;
        
        private string value2Field;
        
        private AuthorTO observerField;
        
        private AuthorTO recorderField;
        
        private string timestampField;
        
        private TaggedText facilityField;
        
        private HospitalLocationTO locationField;
        
        private string commentField;
        
        private string unitsField;
        
        private string qualifiersField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public ObservationTypeTO type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string value1 {
            get {
                return this.value1Field;
            }
            set {
                this.value1Field = value;
            }
        }
        
        /// <remarks/>
        public string value2 {
            get {
                return this.value2Field;
            }
            set {
                this.value2Field = value;
            }
        }
        
        /// <remarks/>
        public AuthorTO observer {
            get {
                return this.observerField;
            }
            set {
                this.observerField = value;
            }
        }
        
        /// <remarks/>
        public AuthorTO recorder {
            get {
                return this.recorderField;
            }
            set {
                this.recorderField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public TaggedText facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public HospitalLocationTO location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        public string qualifiers {
            get {
                return this.qualifiersField;
            }
            set {
                this.qualifiersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedVitalSignArray : AbstractTaggedArrayTO {
        
        private VitalSignTO[] vitalsField;
        
        /// <remarks/>
        public VitalSignTO[] vitals {
            get {
                return this.vitalsField;
            }
            set {
                this.vitalsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedPatientArray : AbstractTaggedArrayTO {
        
        private PatientTO[] patientsField;
        
        /// <remarks/>
        public PatientTO[] patients {
            get {
                return this.patientsField;
            }
            set {
                this.patientsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedPatientAssociateArray : AbstractTaggedArrayTO {
        
        private PatientAssociateTO[] pasField;
        
        /// <remarks/>
        public PatientAssociateTO[] pas {
            get {
                return this.pasField;
            }
            set {
                this.pasField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedLabTestArray : AbstractTaggedArrayTO {
        
        private LabTestArray labTestsField;
        
        /// <remarks/>
        public LabTestArray labTests {
            get {
                return this.labTestsField;
            }
            set {
                this.labTestsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class LabTestArray : AbstractArrayTO {
        
        private LabTestTO[] testsField;
        
        /// <remarks/>
        public LabTestTO[] tests {
            get {
                return this.testsField;
            }
            set {
                this.testsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class UserSecurityKeyArray : AbstractArrayTO {
        
        private UserSecurityKeyTO[] keysField;
        
        /// <remarks/>
        public UserSecurityKeyTO[] keys {
            get {
                return this.keysField;
            }
            set {
                this.keysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class UserSecurityKeyTO : AbstractTO {
        
        private string idField;
        
        private string nameField;
        
        private string descriptiveNameField;
        
        private string creatorIdField;
        
        private string creatorNameField;
        
        private string creationDateField;
        
        private string reviewDateField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string descriptiveName {
            get {
                return this.descriptiveNameField;
            }
            set {
                this.descriptiveNameField = value;
            }
        }
        
        /// <remarks/>
        public string creatorId {
            get {
                return this.creatorIdField;
            }
            set {
                this.creatorIdField = value;
            }
        }
        
        /// <remarks/>
        public string creatorName {
            get {
                return this.creatorNameField;
            }
            set {
                this.creatorNameField = value;
            }
        }
        
        /// <remarks/>
        public string creationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public string reviewDate {
            get {
                return this.reviewDateField;
            }
            set {
                this.reviewDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class OrderDialogItemArray : AbstractArrayTO {
        
        private OrderDialogItemTO[] itemsField;
        
        /// <remarks/>
        public OrderDialogItemTO[] items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class OrderDialogItemTO : AbstractTO {
        
        private int sequenceNumberField;
        
        private char dataTypeField;
        
        private string domainField;
        
        private string displayTextField;
        
        private string orderableItemIdField;
        
        /// <remarks/>
        public int sequenceNumber {
            get {
                return this.sequenceNumberField;
            }
            set {
                this.sequenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public char dataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string displayText {
            get {
                return this.displayTextField;
            }
            set {
                this.displayTextField = value;
            }
        }
        
        /// <remarks/>
        public string orderableItemId {
            get {
                return this.orderableItemIdField;
            }
            set {
                this.orderableItemIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TextArray : AbstractArrayTO {
        
        private string[] textField;
        
        /// <remarks/>
        public string[] text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedOrderArrays : AbstractArrayTO {
        
        private TaggedOrderArray[] arraysField;
        
        /// <remarks/>
        public TaggedOrderArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class PatientArray : AbstractArrayTO {
        
        private PatientTO[] patientsField;
        
        /// <remarks/>
        public PatientTO[] patients {
            get {
                return this.patientsField;
            }
            set {
                this.patientsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class PatientRecordFlagArray : AbstractArrayTO {
        
        private PatientRecordFlagTO[] flagsField;
        
        /// <remarks/>
        public PatientRecordFlagTO[] flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class PatientRecordFlagTO : AbstractTO {
        
        private string idField;
        
        private string nameField;
        
        private string actionIdField;
        
        private string actionNameField;
        
        private string actionTimestampField;
        
        private string noteIdField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string actionId {
            get {
                return this.actionIdField;
            }
            set {
                this.actionIdField = value;
            }
        }
        
        /// <remarks/>
        public string actionName {
            get {
                return this.actionNameField;
            }
            set {
                this.actionNameField = value;
            }
        }
        
        /// <remarks/>
        public string actionTimestamp {
            get {
                return this.actionTimestampField;
            }
            set {
                this.actionTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string noteId {
            get {
                return this.noteIdField;
            }
            set {
                this.noteIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedIcdRptArrays : AbstractArrayTO {
        
        private TaggedIcdRptArray[] arraysField;
        
        /// <remarks/>
        public TaggedIcdRptArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedSurgicalPathologyRptArrays : AbstractArrayTO {
        
        private TaggedSurgicalPathologyRptArray[] arraysField;
        
        /// <remarks/>
        public TaggedSurgicalPathologyRptArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedMicrobiologyRptArrays : AbstractArrayTO {
        
        private TaggedMicrobiologyRptArray[] arraysField;
        
        /// <remarks/>
        public TaggedMicrobiologyRptArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedCytologyRptArrays : AbstractArrayTO {
        
        private TaggedCytologyRptArray[] arraysField;
        
        /// <remarks/>
        public TaggedCytologyRptArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedChemHemRptArrays : AbstractArrayTO {
        
        private TaggedChemHemRptArray[] arraysField;
        
        /// <remarks/>
        public TaggedChemHemRptArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedAppointmentArrays : AbstractArrayTO {
        
        private TaggedAppointmentArray[] arraysField;
        
        /// <remarks/>
        public TaggedAppointmentArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedConsultArrays : AbstractArrayTO {
        
        private TaggedConsultArray[] arraysField;
        
        /// <remarks/>
        public TaggedConsultArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedNoteArrays : AbstractArrayTO {
        
        private TaggedNoteArray[] arraysField;
        
        /// <remarks/>
        public TaggedNoteArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedMedicationArrays : AbstractArrayTO {
        
        private TaggedMedicationArray[] arraysField;
        
        /// <remarks/>
        public TaggedMedicationArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedProblemArrays : AbstractArrayTO {
        
        private TaggedProblemArray[] arraysField;
        
        /// <remarks/>
        public TaggedProblemArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedSurgeryReportArrays : AbstractArrayTO {
        
        private TaggedSurgeryReportArray[] arraysField;
        
        /// <remarks/>
        public TaggedSurgeryReportArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedRadiologyReportArrays : AbstractArrayTO {
        
        private TaggedRadiologyReportArray[] arraysField;
        
        /// <remarks/>
        public TaggedRadiologyReportArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedAllergyArrays : AbstractArrayTO {
        
        private TaggedAllergyArray[] arraysField;
        
        /// <remarks/>
        public TaggedAllergyArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedVitalSignSetArrays : AbstractArrayTO {
        
        private TaggedVitalSignSetArray[] arraysField;
        
        /// <remarks/>
        public TaggedVitalSignSetArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedVitalSignArrays : AbstractArrayTO {
        
        private TaggedVitalSignArray[] arraysField;
        
        /// <remarks/>
        public TaggedVitalSignArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedPatientArrays : AbstractArrayTO {
        
        private TaggedPatientArray[] arraysField;
        
        /// <remarks/>
        public TaggedPatientArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class UserArray : AbstractArrayTO {
        
        private UserTO[] usersField;
        
        /// <remarks/>
        public UserTO[] users {
            get {
                return this.usersField;
            }
            set {
                this.usersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class RegionArray : AbstractArrayTO {
        
        private RegionTO[] regionsField;
        
        /// <remarks/>
        public RegionTO[] regions {
            get {
                return this.regionsField;
            }
            set {
                this.regionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class RegionTO : AbstractTO {
        
        private string nameField;
        
        private string idField;
        
        private SiteArray sitesField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public SiteArray sites {
            get {
                return this.sitesField;
            }
            set {
                this.sitesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedHealthSummaryArray : AbstractArrayTO {
        
        private HealthSummaryTO[] healthSummariesField;
        
        /// <remarks/>
        public HealthSummaryTO[] healthSummaries {
            get {
                return this.healthSummariesField;
            }
            set {
                this.healthSummariesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class HealthSummaryTO : AbstractTO {
        
        private string siteCodeField;
        
        private string idField;
        
        private string titleField;
        
        private string textField;
        
        /// <remarks/>
        public string siteCode {
            get {
                return this.siteCodeField;
            }
            set {
                this.siteCodeField = value;
            }
        }
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedPatientAssociateArrays : AbstractArrayTO {
        
        private TaggedPatientAssociateArray[] arraysField;
        
        /// <remarks/>
        public TaggedPatientAssociateArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TaggedLabTestArrays : AbstractArrayTO {
        
        private TaggedLabTestArray[] arraysField;
        
        /// <remarks/>
        public TaggedLabTestArray[] arrays {
            get {
                return this.arraysField;
            }
            set {
                this.arraysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class DomainArray : AbstractArrayTO {
        
        private DomainTO[] domainsField;
        
        /// <remarks/>
        public DomainTO[] domains {
            get {
                return this.domainsField;
            }
            set {
                this.domainsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class DomainTO : AbstractTO {
        
        private string simpleNameField;
        
        private string nameField;
        
        private string distinguishedNameField;
        
        /// <remarks/>
        public string simpleName {
            get {
                return this.simpleNameField;
            }
            set {
                this.simpleNameField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string distinguishedName {
            get {
                return this.distinguishedNameField;
            }
            set {
                this.distinguishedNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mdws.medora.va.gov/EmrSvc")]
    public partial class TeamTO : AbstractTO {
        
        private string idField;
        
        private string nameField;
        
        private string pcpNameField;
        
        private string attendingNameField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string pcpName {
            get {
                return this.pcpNameField;
            }
            set {
                this.pcpNameField = value;
            }
        }
        
        /// <remarks/>
        public string attendingName {
            get {
                return this.attendingNameField;
            }
            set {
                this.attendingNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getVistaTimestampsCompletedEventHandler(object sender, getVistaTimestampsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVistaTimestampsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVistaTimestampsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getActiveDirectoryDomainsCompletedEventHandler(object sender, getActiveDirectoryDomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActiveDirectoryDomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActiveDirectoryDomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DomainArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DomainArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void loginActiveDirectoryCompletedEventHandler(object sender, loginActiveDirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginActiveDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginActiveDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getLabTestDescriptionCompletedEventHandler(object sender, getLabTestDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLabTestDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLabTestDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getLabTestsCompletedEventHandler(object sender, getLabTestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLabTestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLabTestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedLabTestArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedLabTestArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPatientAssociatesCompletedEventHandler(object sender, getPatientAssociatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPatientAssociatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPatientAssociatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedPatientAssociateArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedPatientAssociateArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAdhocHealthSummaryByDisplayNameCompletedEventHandler(object sender, getAdhocHealthSummaryByDisplayNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAdhocHealthSummaryByDisplayNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAdhocHealthSummaryByDisplayNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EXPERIMENTALgetHealthSummaryCompletedEventHandler(object sender, EXPERIMENTALgetHealthSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EXPERIMENTALgetHealthSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EXPERIMENTALgetHealthSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedHealthSummaryArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedHealthSummaryArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCorrespondingIdsCompletedEventHandler(object sender, getCorrespondingIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCorrespondingIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCorrespondingIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getVHACompletedEventHandler(object sender, getVHACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVHACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVHACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegionArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegionArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getVISNCompletedEventHandler(object sender, getVISNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVISNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVISNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegionTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegionTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void connectCompletedEventHandler(object sender, connectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class connectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal connectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSourceArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSourceArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void disconnectCompletedEventHandler(object sender, disconnectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class disconnectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal disconnectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void disconnectRemoteSitesCompletedEventHandler(object sender, disconnectRemoteSitesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class disconnectRemoteSitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal disconnectRemoteSitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void visitCompletedEventHandler(object sender, visitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class visitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal visitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void cprsLaunchCompletedEventHandler(object sender, cprsLaunchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cprsLaunchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cprsLaunchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PersonsTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PersonsTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void cprsUserLookupCompletedEventHandler(object sender, cprsUserLookupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cprsUserLookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cprsUserLookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void matchCompletedEventHandler(object sender, matchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class matchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal matchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedPatientArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedPatientArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void selectCompletedEventHandler(object sender, selectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void setupMultiSiteQueryCompletedEventHandler(object sender, setupMultiSiteQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setupMultiSiteQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setupMultiSiteQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiteArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiteArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getConfidentialityCompletedEventHandler(object sender, getConfidentialityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getConfidentialityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getConfidentialityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void issueConfidentialityBulletinCompletedEventHandler(object sender, issueConfidentialityBulletinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class issueConfidentialityBulletinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal issueConfidentialityBulletinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getLatestVitalSignsCompletedEventHandler(object sender, getLatestVitalSignsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLatestVitalSignsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLatestVitalSignsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedVitalSignArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedVitalSignArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getVitalSignsCompletedEventHandler(object sender, getVitalSignsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVitalSignsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVitalSignsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedVitalSignSetArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedVitalSignSetArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAllergiesCompletedEventHandler(object sender, getAllergiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllergiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllergiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedAllergyArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedAllergyArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getRadiologyReportsCompletedEventHandler(object sender, getRadiologyReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRadiologyReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRadiologyReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedRadiologyReportArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedRadiologyReportArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSurgeryReportsCompletedEventHandler(object sender, getSurgeryReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSurgeryReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSurgeryReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedSurgeryReportArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedSurgeryReportArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSurgeryReportTextCompletedEventHandler(object sender, getSurgeryReportTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSurgeryReportTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSurgeryReportTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TextTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TextTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSurgeryReportsWithTextCompletedEventHandler(object sender, getSurgeryReportsWithTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSurgeryReportsWithTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSurgeryReportsWithTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedSurgeryReportArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedSurgeryReportArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getProblemListCompletedEventHandler(object sender, getProblemListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProblemListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProblemListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedProblemArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedProblemArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getOutpatientMedsCompletedEventHandler(object sender, getOutpatientMedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOutpatientMedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOutpatientMedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedMedicationArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedMedicationArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getIvMedsCompletedEventHandler(object sender, getIvMedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIvMedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIvMedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedMedicationArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedMedicationArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getImoMedsCompletedEventHandler(object sender, getImoMedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImoMedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImoMedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedMedicationArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedMedicationArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getUnitDoseMedsCompletedEventHandler(object sender, getUnitDoseMedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUnitDoseMedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUnitDoseMedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedMedicationArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedMedicationArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getOtherMedsCompletedEventHandler(object sender, getOtherMedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOtherMedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOtherMedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedMedicationArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedMedicationArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAllMedsCompletedEventHandler(object sender, getAllMedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllMedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllMedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedMedicationArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedMedicationArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMedicationDetailCompletedEventHandler(object sender, getMedicationDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMedicationDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMedicationDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TextTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TextTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSignedNotesCompletedEventHandler(object sender, getSignedNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSignedNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSignedNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedNoteArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedNoteArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getUnsignedNotesCompletedEventHandler(object sender, getUnsignedNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUnsignedNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUnsignedNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedNoteArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedNoteArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getUncosignedNotesCompletedEventHandler(object sender, getUncosignedNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUncosignedNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUncosignedNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedNoteArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedNoteArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getNoteCompletedEventHandler(object sender, getNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TextTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TextTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getNotesWithTextCompletedEventHandler(object sender, getNotesWithTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNotesWithTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNotesWithTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedNoteArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedNoteArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDischargeSummariesCompletedEventHandler(object sender, getDischargeSummariesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDischargeSummariesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDischargeSummariesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedNoteArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedNoteArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getConsultsForPatientCompletedEventHandler(object sender, getConsultsForPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getConsultsForPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getConsultsForPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedConsultArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedConsultArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAppointmentsCompletedEventHandler(object sender, getAppointmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAppointmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAppointmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedAppointmentArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedAppointmentArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAppointmentTextCompletedEventHandler(object sender, getAppointmentTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAppointmentTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAppointmentTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TextTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TextTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getClinicalWarningsCompletedEventHandler(object sender, getClinicalWarningsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClinicalWarningsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClinicalWarningsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAdvanceDirectivesCompletedEventHandler(object sender, getAdvanceDirectivesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAdvanceDirectivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAdvanceDirectivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCrisisNotesCompletedEventHandler(object sender, getCrisisNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCrisisNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCrisisNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getImmunizationsCompletedEventHandler(object sender, getImmunizationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImmunizationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImmunizationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getOutpatientRxProfileCompletedEventHandler(object sender, getOutpatientRxProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOutpatientRxProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOutpatientRxProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMedsAdminHxCompletedEventHandler(object sender, getMedsAdminHxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMedsAdminHxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMedsAdminHxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMedsAdminLogCompletedEventHandler(object sender, getMedsAdminLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMedsAdminLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMedsAdminLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getChemHemReportsCompletedEventHandler(object sender, getChemHemReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getChemHemReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getChemHemReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedChemHemRptArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedChemHemRptArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getChemHemReportsSimpleCompletedEventHandler(object sender, getChemHemReportsSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getChemHemReportsSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getChemHemReportsSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedChemHemRptArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedChemHemRptArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCytologyReportsCompletedEventHandler(object sender, getCytologyReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCytologyReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCytologyReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedCytologyRptArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedCytologyRptArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMicrobiologyReportsCompletedEventHandler(object sender, getMicrobiologyReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMicrobiologyReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMicrobiologyReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedMicrobiologyRptArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedMicrobiologyRptArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSurgicalPathologyReportsCompletedEventHandler(object sender, getSurgicalPathologyReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSurgicalPathologyReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSurgicalPathologyReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedSurgicalPathologyRptArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedSurgicalPathologyRptArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getBloodAvailabilityReportsCompletedEventHandler(object sender, getBloodAvailabilityReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBloodAvailabilityReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBloodAvailabilityReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getBloodTransfusionReportsCompletedEventHandler(object sender, getBloodTransfusionReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBloodTransfusionReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBloodTransfusionReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getBloodBankReportsCompletedEventHandler(object sender, getBloodBankReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBloodBankReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBloodBankReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getElectronMicroscopyReportsCompletedEventHandler(object sender, getElectronMicroscopyReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getElectronMicroscopyReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getElectronMicroscopyReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCytopathologyReportsCompletedEventHandler(object sender, getCytopathologyReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCytopathologyReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCytopathologyReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAutopsyReportsCompletedEventHandler(object sender, getAutopsyReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAutopsyReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAutopsyReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getOutpatientEncounterReportsCompletedEventHandler(object sender, getOutpatientEncounterReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOutpatientEncounterReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOutpatientEncounterReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAdmissionsReportsCompletedEventHandler(object sender, getAdmissionsReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAdmissionsReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAdmissionsReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getExpandedAdtReportsCompletedEventHandler(object sender, getExpandedAdtReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExpandedAdtReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExpandedAdtReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDischargeDiagnosisReportsCompletedEventHandler(object sender, getDischargeDiagnosisReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDischargeDiagnosisReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDischargeDiagnosisReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDischargesReportsCompletedEventHandler(object sender, getDischargesReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDischargesReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDischargesReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getTransfersReportsCompletedEventHandler(object sender, getTransfersReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransfersReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransfersReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getFutureClinicVisitsReportsCompletedEventHandler(object sender, getFutureClinicVisitsReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFutureClinicVisitsReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFutureClinicVisitsReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPastClinicVisitsReportsCompletedEventHandler(object sender, getPastClinicVisitsReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPastClinicVisitsReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPastClinicVisitsReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getTreatingSpecialtyReportsCompletedEventHandler(object sender, getTreatingSpecialtyReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTreatingSpecialtyReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTreatingSpecialtyReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCompAndPenReportsCompletedEventHandler(object sender, getCompAndPenReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCompAndPenReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCompAndPenReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCareTeamReportsCompletedEventHandler(object sender, getCareTeamReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCareTeamReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCareTeamReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getIcdProceduresReportsCompletedEventHandler(object sender, getIcdProceduresReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIcdProceduresReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIcdProceduresReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedIcdRptArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedIcdRptArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getIcdSurgeryReportsCompletedEventHandler(object sender, getIcdSurgeryReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIcdSurgeryReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIcdSurgeryReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedIcdRptArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedIcdRptArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getNoteTitlesCompletedEventHandler(object sender, getNoteTitlesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNoteTitlesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNoteTitlesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getHospitalLocationsCompletedEventHandler(object sender, getHospitalLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHospitalLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHospitalLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedHospitalLocationArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedHospitalLocationArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getImagingReportCompletedEventHandler(object sender, getImagingReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getImagingReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getImagingReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RadiologyReportTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RadiologyReportTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void writeSimpleOrderByPolicyCompletedEventHandler(object sender, writeSimpleOrderByPolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class writeSimpleOrderByPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal writeSimpleOrderByPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void isValidEsigCompletedEventHandler(object sender, isValidEsigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isValidEsigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isValidEsigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TextTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TextTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void patientInquiryCompletedEventHandler(object sender, patientInquiryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class patientInquiryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal patientInquiryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TextTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TextTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getWardsCompletedEventHandler(object sender, getWardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedHospitalLocationArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedHospitalLocationArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPatientsByWardCompletedEventHandler(object sender, getPatientsByWardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPatientsByWardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPatientsByWardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedPatientArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedPatientArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getClinicsCompletedEventHandler(object sender, getClinicsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClinicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClinicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedHospitalLocationArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedHospitalLocationArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPatientsByClinicCompletedEventHandler(object sender, getPatientsByClinicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPatientsByClinicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPatientsByClinicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedPatientArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedPatientArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSpecialtiesCompletedEventHandler(object sender, getSpecialtiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSpecialtiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSpecialtiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedText Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedText)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPatientsBySpecialtyCompletedEventHandler(object sender, getPatientsBySpecialtyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPatientsBySpecialtyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPatientsBySpecialtyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedPatientArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedPatientArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getTeamsCompletedEventHandler(object sender, getTeamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTeamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTeamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedText Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedText)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPatientsByTeamCompletedEventHandler(object sender, getPatientsByTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPatientsByTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPatientsByTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedPatientArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedPatientArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPatientsByProviderCompletedEventHandler(object sender, getPatientsByProviderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPatientsByProviderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPatientsByProviderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedPatientArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedPatientArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAdmissionsCompletedEventHandler(object sender, getAdmissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAdmissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAdmissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedInpatientStayArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedInpatientStayArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getLocationsCompletedEventHandler(object sender, getLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedHospitalLocationArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedHospitalLocationArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPrfNoteActionsCompletedEventHandler(object sender, getPrfNoteActionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPrfNoteActionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPrfNoteActionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientRecordFlagArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientRecordFlagArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getVisitsCompletedEventHandler(object sender, getVisitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVisitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVisitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedVisitArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedVisitArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void isConsultNoteCompletedEventHandler(object sender, isConsultNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isConsultNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isConsultNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TextTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TextTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void isCosignerRequiredCompletedEventHandler(object sender, isCosignerRequiredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isCosignerRequiredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isCosignerRequiredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TextTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TextTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void isOneVisitNoteCompletedEventHandler(object sender, isOneVisitNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isOneVisitNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isOneVisitNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedText Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedText)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void isPrfNoteCompletedEventHandler(object sender, isPrfNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isPrfNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isPrfNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TextTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TextTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void isSurgeryNoteCompletedEventHandler(object sender, isSurgeryNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isSurgeryNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isSurgeryNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedText Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedText)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void writeNoteCompletedEventHandler(object sender, writeNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class writeNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal writeNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NoteResultTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NoteResultTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void signNoteCompletedEventHandler(object sender, signNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class signNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal signNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TextTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TextTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void closeNoteCompletedEventHandler(object sender, closeNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class closeNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal closeNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TextTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TextTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getDemographicsCompletedEventHandler(object sender, getDemographicsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDemographicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDemographicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void mpiLookupCompletedEventHandler(object sender, mpiLookupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mpiLookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mpiLookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void nptLookupCompletedEventHandler(object sender, nptLookupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class nptLookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal nptLookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAllOrdersCompletedEventHandler(object sender, getAllOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedOrderArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedOrderArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getReminderReportTemplatesCompletedEventHandler(object sender, getReminderReportTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReminderReportTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReminderReportTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getActiveReminderReportsCompletedEventHandler(object sender, getActiveReminderReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActiveReminderReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActiveReminderReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPatientListForReminderReportCompletedEventHandler(object sender, getPatientListForReminderReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPatientListForReminderReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPatientListForReminderReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReminderReportPatientListTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReminderReportPatientListTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getPcpForPatientCompletedEventHandler(object sender, getPcpForPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPcpForPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPcpForPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedText Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedText)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSitesForStationCompletedEventHandler(object sender, getSitesForStationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSitesForStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSitesForStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getClinicsByNameCompletedEventHandler(object sender, getClinicsByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClinicsByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClinicsByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getOrderableItemsByNameCompletedEventHandler(object sender, getOrderableItemsByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOrderableItemsByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOrderableItemsByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getOrderStatusForPatientCompletedEventHandler(object sender, getOrderStatusForPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOrderStatusForPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOrderStatusForPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TextTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TextTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getOrderDialogsForDisplayGroupCompletedEventHandler(object sender, getOrderDialogsForDisplayGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOrderDialogsForDisplayGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOrderDialogsForDisplayGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getOrderDialogItemsCompletedEventHandler(object sender, getOrderDialogItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOrderDialogItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOrderDialogItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderDialogItemArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderDialogItemArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getUsersWithOptionCompletedEventHandler(object sender, getUsersWithOptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsersWithOptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsersWithOptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void userHasPermissionCompletedEventHandler(object sender, userHasPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userHasPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userHasPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BoolTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BoolTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getUserSecurityKeysCompletedEventHandler(object sender, getUserSecurityKeysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserSecurityKeysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserSecurityKeysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserSecurityKeyArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserSecurityKeyArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getVariableValueCompletedEventHandler(object sender, getVariableValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVariableValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVariableValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TextTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TextTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMentalHealthInstrumentsForPatientCompletedEventHandler(object sender, getMentalHealthInstrumentsForPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMentalHealthInstrumentsForPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMentalHealthInstrumentsForPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedMentalHealthInstrumentAdministrationArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedMentalHealthInstrumentAdministrationArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMentalHealthInstrumentsForPatientBySurveyCompletedEventHandler(object sender, getMentalHealthInstrumentsForPatientBySurveyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMentalHealthInstrumentsForPatientBySurveyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMentalHealthInstrumentsForPatientBySurveyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedMentalHealthInstrumentAdministrationArrays Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedMentalHealthInstrumentAdministrationArrays)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMentalHealthInstrumentResultSetCompletedEventHandler(object sender, getMentalHealthInstrumentResultSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMentalHealthInstrumentResultSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMentalHealthInstrumentResultSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MentalHealthInstrumentResultSetTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MentalHealthInstrumentResultSetTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMentalHealthInstrumentResultSetBySurveyCompletedEventHandler(object sender, getMentalHealthInstrumentResultSetBySurveyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMentalHealthInstrumentResultSetBySurveyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMentalHealthInstrumentResultSetBySurveyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedMentalHealthResultSetArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedMentalHealthResultSetArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getNhinDataCompletedEventHandler(object sender, getNhinDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNhinDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNhinDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaggedTextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaggedTextArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAllInstitutionsCompletedEventHandler(object sender, getAllInstitutionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllInstitutionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllInstitutionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiteArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiteArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getVersionCompletedEventHandler(object sender, getVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addDataSourceCompletedEventHandler(object sender, addDataSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDataSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDataSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiteTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiteTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getFacadeVersionCompletedEventHandler(object sender, getFacadeVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFacadeVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFacadeVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TextTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TextTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void setVhaCompletedEventHandler(object sender, setVhaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setVhaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setVhaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiteArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiteArray)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getRpcsCompletedEventHandler(object sender, getRpcsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRpcsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRpcsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TextArray Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TextArray)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591